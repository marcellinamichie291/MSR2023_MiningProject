{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/74605915", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/74605915/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/74605915/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/2.1.0", "id": 74605915, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBlHMec4EcmVb", "tag_name": "2.1.0", "target_commitish": "master", "name": "PyG 2.1.0: Principled aggregations, link-level and temporal samplers, data pipe support, ...", "draft": false, "prerelease": false, "created_at": "2022-08-17T10:29:48Z", "published_at": "2022-08-17T10:32:00Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/2.1.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/2.1.0", "body": "We are excited to announce the release of **PyG 2.1.0** \ud83c\udf89\ud83c\udf89\ud83c\udf89\r\n\r\n* [Highlights](#highlights)\r\n* [Breaking Changes](#breaking-changes)\r\n* [Deprecations](#deprecations)\r\n* [Features](#features)\r\n* [Bugfixes](#bugfixes)\r\n* [Full Changelog](#full-changelog)\r\n\r\nPyG 2.1.0 is the culmination of work from over **60 contributors** who have worked on features and bug-fixes for a total of **over 320 commits** since `torch-geometric==2.0.4`.\r\n\r\n# Highlights\r\n\r\n### Principled Aggregations\r\n\r\n**See [here](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#aggregation-operators) for the accompanying tutorial.**\r\n\r\nAggregation functions play an important role in the message passing framework and the readout functions of Graph Neural Networks. Specifically, many works in the literature ([Hamilton *et al.* (2017)](https://arxiv.org/abs/1706.02216), [Xu *et al.* (2018)](https://arxiv.org/abs/1810.00826), [Corso *et al.* (2020)](https://arxiv.org/abs/2004.05718), [Li *et al.* (2020)](https://arxiv.org/abs/2006.07739), [Tailor *et al.* (2021)](https://arxiv.org/abs/2104.01481), [Bartunov *et al.* (2022)](https://arxiv.org/abs/2202.12795)) demonstrate that the choice of aggregation functions contributes significantly to the representational power and performance of the model.\r\n\r\n**To facilitate further experimentation and unify the concepts of aggregation within GNNs across both [`MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.MessagePassing) and global readouts, we have made the concept of [`Aggregation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.aggr.Aggregation) a first-class principle in PyG** ([#4379](https://github.com/pyg-team/pytorch_geometric/pull/4379), [#4522](https://github.com/pyg-team/pytorch_geometric/pull/4522), [#4687](https://github.com/pyg-team/pytorch_geometric/pull/4687), [#4721](https://github.com/pyg-team/pytorch_geometric/pull/4721), [#4731](https://github.com/pyg-team/pytorch_geometric/pull/4731), [#4762](https://github.com/pyg-team/pytorch_geometric/pull/4762), [#4749](https://github.com/pyg-team/pytorch_geometric/pull/4749), [#4779](https://github.com/pyg-team/pytorch_geometric/pull/4779), [#4863](https://github.com/pyg-team/pytorch_geometric/pull/4863), [#4864](https://github.com/pyg-team/pytorch_geometric/pull/4864), [#4865](https://github.com/pyg-team/pytorch_geometric/pull/4865), [#4866](https://github.com/pyg-team/pytorch_geometric/pull/4866), [#4872](https://github.com/pyg-team/pytorch_geometric/pull/4872), [#4927](https://github.com/pyg-team/pytorch_geometric/pull/4927),  [#4934](https://github.com/pyg-team/pytorch_geometric/pull/4934), [#4935](https://github.com/pyg-team/pytorch_geometric/pull/4935), [#4957](https://github.com/pyg-team/pytorch_geometric/pull/4957), [#4973](https://github.com/pyg-team/pytorch_geometric/pull/4973), [#4973](https://github.com/pyg-team/pytorch_geometric/pull/4973), [#4986](https://github.com/pyg-team/pytorch_geometric/pull/4986), [#4995](https://github.com/pyg-team/pytorch_geometric/pull/4995), [#5000](https://github.com/pyg-team/pytorch_geometric/pull/5000), [#5021](https://github.com/pyg-team/pytorch_geometric/pull/5021),  [#5034](https://github.com/pyg-team/pytorch_geometric/pull/5034), [#5036](https://github.com/pyg-team/pytorch_geometric/pull/5036), [#5039](https://github.com/pyg-team/pytorch_geometric/issues/5039), [#4522](https://github.com/pyg-team/pytorch_geometric/pull/4522), [#5033](https://github.com/pyg-team/pytorch_geometric/pull/5033]), [#5085](https://github.com/pyg-team/pytorch_geometric/pull/5085), [#5097](https://github.com/pyg-team/pytorch_geometric/pull/5097), [#5099](https://github.com/pyg-team/pytorch_geometric/pull/5099), [#5104](https://github.com/pyg-team/pytorch_geometric/pull/5104), [#5113](https://github.com/pyg-team/pytorch_geometric/pull/5113), [#5130](https://github.com/pyg-team/pytorch_geometric/pull/5130), [#5098](https://github.com/pyg-team/pytorch_geometric/pull/5098), [#5191](https://github.com/pyg-team/pytorch_geometric/pull/5191)). As of now, PyG provides support for various aggregations \u2014 from simple ones (*e.g.*, `mean`, `max`, `sum`), to advanced ones (*e.g.*, `median`, `var`, `std`), learnable ones (*e.g.*, [`SoftmaxAggregation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.aggr.SoftmaxAggregation), [`PowerMeanAggregation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.aggr.PowerMeanAggregation)), and exotic ones (*e.g.*, [`LSTMAggregation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.aggr.LSTMAggregation), [`SortAggregation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.aggr.SortAggregation), [`EquilibriumAggregation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.aggr.EquilibriumAggregation)). Furthermore, multiple aggregations can be combined and stacked together:\r\n\r\n```python\r\nfrom torch_geometric.nn import MessagePassing, SoftmaxAggregation\r\n\r\nclass MyConv(MessagePassing):\r\n    def __init__(self, ...):\r\n        # Combines a set of aggregations and concatenates their results.\r\n        # The interface also supports automatic resolution.\r\n        super().__init__(aggr=['mean', 'std', SoftmaxAggregation(learn=True)])\r\n```\r\n\r\n### Link-level Neighbor Loader\r\n\r\nWe added a new **[`LinkNeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.LinkNeighborLoader) class for training scalable GNNs that perform edge-level predictions on giant graphs** ([#4396](https://github.com/pyg-team/pytorch_geometric/pull/4396), [#4439](https://github.com/pyg-team/pytorch_geometric/pull/4439), [#4441](https://github.com/pyg-team/pytorch_geometric/pull/4441), [#4446](https://github.com/pyg-team/pytorch_geometric/pull/4446), [#4508](https://github.com/pyg-team/pytorch_geometric/pull/4508), [#4509](https://github.com/pyg-team/pytorch_geometric/pull/4509), [#4868](https://github.com/pyg-team/pytorch_geometric/pull/4868)). `LinkNeighborLoader` comes with automatic support for both homogeneous and heterogenous data, and supports link prediction via automatic negative sampling as well as edge-level classification and regression models:\r\n\r\n```python\r\nfrom torch_geometric.loader import LinkNeighborLoader\r\n\r\nloader = LinkNeighborLoader(\r\n    data,\r\n    num_neighbors=[30] * 2,  # Sample 30 neighbors for each node for 2 iterations\r\n    batch_size=128,  # Use a batch size of 128 for sampling training links\r\n    edge_label_index=data.edge_index,  # Use the entire graph for supervision\r\n    negative_sampling_ratio=1.0,  # Sample negative edges\r\n)\r\n\r\nsampled_data = next(iter(loader))\r\nprint(sampled_data)\r\n>>> Data(x=[1368, 1433], edge_index=[2, 3103], edge_label_index=[2, 256], edge_label=[256])\r\n```\r\n\r\n### Neighborhood Sampling based on Temporal Constraints\r\n\r\nBoth **[`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) and [`LinkNeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.LinkNeighborLoader) now support temporal sampling** via the `time_attr` argument ([#4025](https://github.com/pyg-team/pytorch_geometric/pull/4025), [#4877](https://github.com/pyg-team/pytorch_geometric/pull/4877), [#4908](https://github.com/pyg-team/pytorch_geometric/pull/4908), [#5137](https://github.com/pyg-team/pytorch_geometric/pull/5137), [#5173](https://github.com/pyg-team/pytorch_geometric/pull/5173)). If set, temporal sampling will be used such that neighbors are guaranteed to fulfill temporal constraints, *i.e.* neighbors have an earlier timestamp than the center node:\r\n\r\n```python\r\nfrom torch_geometric.loader import NeighborLoader\r\n\r\ndata['paper'].time = torch.arange(data['paper'].num_nodes)\r\n\r\nloader = NeighborLoader(\r\n    data,\r\n    input_nodes='paper',\r\n    time_attr='time',  # Only sample papers that appeared before the seed paper\r\n    num_neighbors=[30] * 2,\r\n    batch_size=128,\r\n)\r\n```\r\n\r\nNote that this feature requires `torch-sparse>=0.6.14`. \r\n \r\n### Functional `DataPipes`\r\n\r\n**See [here](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/datapipe.py) for the accompanying example.**\r\n\r\nPyG now fully supports **data loading using the newly introduced concept of [`DataPipes`](https://pytorch.org/data/beta/index.html) in PyTorch** for easily constructing flexible and performant data pipelines ([#4302](https://github.com/pyg-team/pytorch_geometric/pull/4302), [#4345](https://github.com/pyg-team/pytorch_geometric/pull/4345), [#4349](https://github.com/pyg-team/pytorch_geometric/pull/4349)). PyG provides `DataPipe` support for batching multiple PyG `data` objects together and for applying any [PyG transform](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html):\r\n\r\n```python\r\ndatapipe = FileOpener(['SMILES_HIV.csv'])\r\ndatapipe = datapipe.parse_csv_as_dict()\r\ndatapipe = datapipe.parse_smiles(target_key='HIV_active')\r\ndatapipe = datapipe.in_memory_cache()  # Cache graph instances in-memory.\r\ndatapipe = datapipe.shuffle()\r\ndatapipe = datapipe.batch_graphs(batch_size=32)\r\n```\r\n\r\n```python\r\ndatapipe = FileLister([root_dir], masks='*.off', recursive=True)\r\ndatapipe = datapipe.read_mesh()\r\ndatapipe = datapipe.in_memory_cache()  # Cache graph instances in-memory.\r\ndatapipe = datapipe.sample_points(1024)  # Use PyG transforms from here.\r\ndatapipe = datapipe.knn_graph(k=8)\r\ndatapipe = datapipe.shuffle()\r\ndatapipe = datapipe.batch_graphs(batch_size=32)\r\n```\r\n\r\n# Breaking Changes\r\n\r\n* The [`torch_geometric.utils.metric`](https://pytorch-geometric.readthedocs.io/en/2.0.4/modules/utils.html#torch_geometric.utils.accuracy) package has been removed. We now recommend to use the [`torchmetrics`](https://torchmetrics.readthedocs.io/en/stable/) package instead.\r\n* `len(batch)` of the [`data.Batch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch) class will now return the number of graphs inside the batch, not the number of attributes ([#4931](https://github.com/pyg-team/pytorch_geometric/pull/4931))\r\n\r\n# Deprecations\r\n\r\n* The usage of the [`torch_geometric.nn.glob`](https://pytorch-geometric.readthedocs.io/en/2.0.4/modules/nn.html#models) package is now deprecated in favor of [`torch_geometric.nn.aggr`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#aggregation-operators)\r\n* The usage of [`RandomTranslate`](https://pytorch-geometric.readthedocs.io/en/2.0.4/modules/transforms.html#torch_geometric.transforms.RandomTranslate) is now deprecated in favor of [`RandomJitter`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomJitter) ([#4828](https://github.com/pyg-team/pytorch_geometric/pull/4828))\r\n\r\n# Features\r\n\r\n### Layers, Models and Examples\r\n\r\n- Added the **[`GroupAddRev`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GroupAddRev) module** with support for reducing training GPU memory ([#4671](https://github.com/pyg-team/pytorch_geometric/pull/4671), [#4701](https://github.com/pyg-team/pytorch_geometric/pull/4701), [#4715](https://github.com/pyg-team/pytorch_geometric/pull/4715), [#4730](https://github.com/pyg-team/pytorch_geometric/pull/4730)) **[[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rev_gnn.py)]**\r\n- Added the **[`MaskLabel`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.MaskLabel) module** for performing masked label propagation ([#4197](https://github.com/pyg-team/pytorch_geometric/pull/4197)) **[[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/unimp_arxiv.py)]\r\n- Added the **[`DimeNetPlusPlus`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.DimeNetPlusPlus) module** ([#4432](https://github.com/pyg-team/pytorch_geometric/pull/4432), [#4699](https://github.com/pyg-team/pytorch_geometric/pull/4699), [#4700](https://github.com/pyg-team/pytorch_geometric/pull/4700), [#4800](https://github.com/pyg-team/pytorch_geometric/pull/4800))\r\n- Added the **[`MeanSubtractionNorm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.MeanSubtractionNorm) module** ([#5068](https://github.com/pyg-team/pytorch_geometric/pull/5068))\r\n- Added the **[`DynamicBatchSampler`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.DynamicBatchSampler)** for filling a mini-batch with a variable number of samples up to a maximum size ([#4972](https://github.com/pyg-team/pytorch_geometric/pull/4972))\r\n- Added **PyTorch Lightning support in GraphGym** ([#4511](https://github.com/pyg-team/pytorch_geometric/pull/4511), [#4516](https://github.com/pyg-team/pytorch_geometric/pull/4516) [#4531](https://github.com/pyg-team/pytorch_geometric/pull/4531), [#4689](https://github.com/pyg-team/pytorch_geometric/pull/4689), [#4843](https://github.com/pyg-team/pytorch_geometric/pull/4843))\r\n- Added an [example](https://github.com/pyg-team/pytorch_geometric/tree/master/examples/pytorch_ignite) of using PyG with **PyTorch Ignite** ([#4487](https://github.com/pyg-team/pytorch_geometric/pull/4487))\r\n- Added an [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/dmgi_unsup.py) for **unsupervised heterogeneous graph learning** ([#3189](https://github.com/pyg-team/pytorch_geometric/pull/3189))\r\n- Added an [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/graph_sage_unsup_ppi.py) for unsupervised `GraphSAGE` on the `PPI` dataset ([#4416](https://github.com/pyg-team/pytorch_geometric/pull/4416))\r\n- Added the [`EdgeCNN`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.EdgeCNN) model ([#4991](https://github.com/pyg-team/pytorch_geometric/pull/4991))\r\n- Added an [example](https://github.com/pyg-team/pytorch_geometric/tree/master/examples/cpp) to load a trained PyG model in C++ ([#4307](https://github.com/pyg-team/pytorch_geometric/pull/4307))\r\n\r\n### Transformations\r\n\r\n- Added the **`AddPositionalEncoding` transforms** with two implementations: [`AddLaplacianEigenvectorPE`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.AddLaplacianEigenvectorPE) and [`AddRandomWalkPE`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.AddRandomWalkPE) ([#4521](https://github.com/pyg-team/pytorch_geometric/pull/4521))\r\n- Added the **`Rooted` transform** with two implementations: [`RootedEgoNets`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RootedEgoNets) and [`RootedRWSubgraph`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RootedRWSubgraph) ([#3926](https://github.com/pyg-team/pytorch_geometric/pull/3926))\r\n- Added support for computing weighted metapaths in [`AddMetapaths`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.AddMetaPaths) ([#5049](https://github.com/pyg-team/pytorch_geometric/pull/5049))\r\n\r\n### Datasets\r\n\r\n- Added the `Genius` and `Wiki` datasets to the [`LINKXDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.LINKXDataset) ([#4570](https://github.com/pyg-team/pytorch_geometric/pull/4570), [#4600](https://github.com/pyg-team/pytorch_geometric/pull/4600))\r\n- Added the [`AQSOL`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.AQSOL) dataset ([#4626](https://github.com/pyg-team/pytorch_geometric/pull/4626))\r\n- Added `Geom-GCN` splits to the [`Planetoid`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Planetoid) datasets ([#4442](https://github.com/pyg-team/pytorch_geometric/pull/4442))\r\n\r\n### General Improvements\r\n\r\n- Added support for [`GATv2Conv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATv2Conv) in the [`GAT`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GAT) model ([#4357](https://github.com/pyg-team/pytorch_geometric/pull/4357))\r\n- Added support for projecting features before propagation in [`SAGEConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.SAGEConv) ([#4437](https://github.com/pyg-team/pytorch_geometric/pull/4437))\r\n- Added a [`MessagePassing.explain_message()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.MessagePassing) method to customize making explanations on messages ([#4278](https://github.com/pyg-team/pytorch_geometric/pull/4278), [#4448](https://github.com/pyg-team/pytorch_geometric/pull/4448)))\r\n- Added the [`MLP.plain_last = False`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.MLP) option ([4652](https://github.com/pyg-team/pytorch_geometric/pull/4652))\r\n- Added support graph-level attributes in [`networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.to_networkx) conversion ([#4343](https://github.com/pyg-team/pytorch_geometric/pull/4343))\r\n- Added [`Data.validate()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.validate) and [`HeteroData.validate()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.validate) functionality to validate the correctness of the data ([#4885](https://github.com/pyg-team/pytorch_geometric/pull/4885))\r\n- Added TorchScript support to [`JumpingKnowledge`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.JumpingKnowledge) module ([#4805](https://github.com/pyg-team/pytorch_geometric/pull/4805))\r\n- Added `predict()` support to the [`LightningNodeData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.LightningLinkData) module ([#4884](https://github.com/pyg-team/pytorch_geometric/pull/4884))\r\n- Added support for renaming node types via [`HeteroData.rename()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.rename) ([#4329](https://github.com/pyg-team/pytorch_geometric/pull/4329))\r\n- Added [`HeteroData.num_features`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.num_features) functionality ([#4504](https://github.com/pyg-team/pytorch_geometric/pull/4504))\r\n- Added [`HeteroData.subgraph`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.subgraph), [`HeteroData.node_type_subgraph`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.node_type_subgraph) and [`HeteroData.edge_type_subgraph`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.edge_type_subgraph) functionality ([#4243](https://github.com/pyg-team/pytorch_geometric/pull/4243))\r\n- Added [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) support to the [`RemoveIsolatedNodes`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RemoveIsolatedNodes) transform ([#4479](https://github.com/pyg-team/pytorch_geometric/pull/4479))\r\n- Added support for graph-level outputs in [`to_hetero`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_transformer.to_hetero) ([#4582](https://github.com/pyg-team/pytorch_geometric/pull/4582))\r\n- Added [`HeteroData.is_undirected()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.is_undirected) support ([#4604](https://github.com/pyg-team/pytorch_geometric/pull/4604))\r\n- Added [`HeteroData.node_items()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.node_items) and [`HeteroData.edge_items()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.edge_items) functionality ([#4644](https://github.com/pyg-team/pytorch_geometric/pull/4644))\r\n- Added [`HeteroData.subgraph()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.subgraph) support ([#4635](https://github.com/pyg-team/pytorch_geometric/pull/4635))\r\n- Added node-wise normalization mode in [`LayerNorm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.LayerNorm) ([#4944](https://github.com/pyg-team/pytorch_geometric/pull/4944))\r\n- Added [`utils.unbatch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.unbatch) and [`utils.unbatch_edge_index`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.unbatch_edge_index) functionality for splitting an `edge_index` tensor according to a `batch` vector ([#4628](https://github.com/pyg-team/pytorch_geometric/pull/4628), [#4903](https://github.com/pyg-team/pytorch_geometric/pull/4903))\r\n- Added scalable [`inference`](https://github.com/pyg-team/pytorch_geometric/blob/master/torch_geometric/nn/models/basic_gnn.py#L197) mode in `BasicGNN` with layer-wise neighbor loading ([#4977](https://github.com/pyg-team/pytorch_geometric/pull/4977))\r\n- Added fine grained options for setting `bias` and `dropout` per layer in the [`MLP`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.MLP) model ([#4981](https://github.com/pyg-team/pytorch_geometric/pull/4981))\r\n- Added support for `BasicGNN` models within [`to_hetero`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_transformer.to_hetero) ([#5091](https://github.com/pyg-team/pytorch_geometric/pull/5091))\r\n- Let [`ImbalancedSampler`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.ImbalancedSampler) accept `torch.Tensor` as input ([#5138](https://github.com/pyg-team/pytorch_geometric/pull/5138))\r\n- Allow `edge_type == rev_edge_type` argument in [`RandomLinkSplit`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomLinkSplit) ([#4757](https://github.com/pyg-team/pytorch_geometric/pull/4757))\r\n\r\n# Bugfixes\r\n\r\n- Fixed a bug in [`RGATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.RGATConv) that produced device mismatches for `\"f-scaled\"` mode ([#5187](https://github.com/pyg-team/pytorch_geometric/pull/5187)]\r\n- Fixed a bug in [`GINEConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GINEConv) bug for non-`Sequential` neural network layers ([#5154](https://github.com/pyg-team/pytorch_geometric/pull/5154)]\r\n- Fixed a bug in [`HGTLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.HGTLoader) which produced outputs with missing edge types, will require `torch-sparse>=0.6.15` ([#5067](https://github.com/pyg-team/pytorch_geometric/pull/5067))\r\n- Fixed a bug in `load_state_dict` for [`Linear`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.dense.Linear) with `strict=False` mode ([5094](https://github.com/pyg-team/pytorch_geometric/pull/5094))\r\n- Fixed [`data.num_node_features`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.num_features) computation for sparse matrices ([5089](https://github.com/pyg-team/pytorch_geometric/pull/5089))\r\n- Fixed a bug in which GraphGym did not create new non-linearity functions but re-used existing ones ([4978](https://github.com/pyg-team/pytorch_geometric/pull/4978))\r\n- Fixed [`BasicGNN`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#models) for `num_layers=1`, which now respects a desired number of `out_channels` ([#4943](https://github.com/pyg-team/pytorch_geometric/pull/4943))\r\n- Fixed a bug in [`data.subgraph`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.subgraph) for 0-dim tensors ([#4932](https://github.com/pyg-team/pytorch_geometric/pull/4932))\r\n- Fixed a bug in [`InMemoryDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.InMemoryDataset) inferring wrong length for lists of tensors ([#4837](https://github.com/pyg-team/pytorch_geometric/pull/4837))\r\n- Fixed a bug in [`TUDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.TUDataset) where `pre_filter` was not applied whenever `pre_transform` was present ([#4842](https://github.com/pyg-team/pytorch_geometric/pull/4842))\r\n- Fixed access of edge types in [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) via two node types when there exists multiple relations between them ([#4782](https://github.com/pyg-team/pytorch_geometric/pull/4782))\r\n- Fixed a bug in [`HANConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HANConv) in which destination node features rather than source node features were propagated ([#4753](https://github.com/pyg-team/pytorch_geometric/pull/4753))\r\n- Fixed a ranking protocol bug in the [`RGCN` link prediction example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/link_pred.py) ([#4688](https://github.com/pyg-team/pytorch_geometric/pull/4688))\r\n- Fixed the interplay between [`TUDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.TUDataset) and `pre_transform` transformations that modify node features ([#4669](https://github.com/pyg-team/pytorch_geometric/pull/4669))\r\n- The `bias` argument in [`TAGConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.TAGConv) is now correctly applied ([#4597](https://github.com/pyg-team/pytorch_geometric/pull/4597))\r\n- Fixed filtering of attributes in samplers in case `__cat_dim__ != 0` ([#4629](https://github.com/pyg-team/pytorch_geometric/pull/4629))\r\n- Fixed `SparseTensor` support in [`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) ([#4320](https://github.com/pyg-team/pytorch_geometric/pull/4320))\r\n- Fixed average degree handling in [`PNAConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PNAConv) ([#4312](https://github.com/pyg-team/pytorch_geometric/pull/4312))\r\n- Fixed a bug in [`from_networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.from_networkx) in case some attributes are PyTorch tensors ([#4486](https://github.com/pyg-team/pytorch_geometric/pull/4486))\r\n- Fixed a missing clamp in the [`DimeNet`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.DimeNet) model ([#4506](https://github.com/pyg-team/pytorch_geometric/pull/4506), [#4562](https://github.com/pyg-team/pytorch_geometric/pull/4562))\r\n- Fixed the download link in [`DBP15K`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.DBP15K) ([#4428](https://github.com/pyg-team/pytorch_geometric/pull/4428))\r\n- Fixed an autograd bug in [`DimeNet`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.DimeNet) when resetting parameters ([#4424](https://github.com/pyg-team/pytorch_geometric/pull/4424))\r\n- Fixed bipartite message passing in case `flow=\"target_to_source\"` ([#4418](https://github.com/pyg-team/pytorch_geometric/pull/4418))\r\n- Fixed a bug in which `num_nodes` was not properly updated in the [`FixedPoints`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.FixedPoints) transform ([#4394](https://github.com/pyg-team/pytorch_geometric/pull/4394))\r\n- Fixed a bug in which [`GATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATConv) was not jittable ([#4347](https://github.com/pyg-team/pytorch_geometric/pull/4347))\r\n- Fixed a bug in which [`nn.models.GAT`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GAT) did not produce `out_channels` many output channels ([#4299](https://github.com/pyg-team/pytorch_geometric/pull/4299))\r\n- Fixed a bug in mini-batching with empty lists as attributes ([#4293](https://github.com/pyg-team/pytorch_geometric/pull/4293))\r\n- Fixed a bug in which [`GCNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GCNConv) could not be combined with [`to_hetero`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_transformer.to_hetero) on heterogeneous graphs with one node type ([#4279](https://github.com/pyg-team/pytorch_geometric/pull/4279))\r\n\r\n# Full Changelog\r\n\r\n<details>\r\n<summary><b>Added</b></summary>\r\n\r\n- Added `edge_label_time` argument to `LinkNeighborLoader` ([#5137](https://github.com/pyg-team/pytorch_geometric/pull/5137), [#5173](https://github.com/pyg-team/pytorch_geometric/pull/5173))\r\n- Let `ImbalancedSampler` accept `torch.Tensor` as input ([#5138](https://github.com/pyg-team/pytorch_geometric/pull/5138))\r\n- Added `flow` argument to `gcn_norm` to correctly normalize the adjacency matrix in `GCNConv` ([#5149](https://github.com/pyg-team/pytorch_geometric/pull/5149))\r\n- `NeighborSampler` supports graphs without edges ([#5072](https://github.com/pyg-team/pytorch_geometric/pull/5072))\r\n- Added the `MeanSubtractionNorm` layer ([#5068](https://github.com/pyg-team/pytorch_geometric/pull/5068))\r\n- Added `pyg_lib.segment_matmul` integration within `RGCNConv` ([#5052](https://github.com/pyg-team/pytorch_geometric/pull/5052), [#5096](https://github.com/pyg-team/pytorch_geometric/pull/5096))\r\n- Support `SparseTensor` as edge label in `LightGCN` (#[5046](https://github.com/pyg-team/pytorch_geometric/issues/5046))\r\n- Added support for `BasicGNN` models within `to_hetero` ([#5091](https://github.com/pyg-team/pytorch_geometric/pull/5091))\r\n- Added support for computing weighted metapaths in `AddMetapaths` ([#5049](https://github.com/pyg-team/pytorch_geometric/pull/5049))\r\n- Added inference benchmark suite ([#4915](https://github.com/pyg-team/pytorch_geometric/pull/4915))\r\n- Added a dynamically sized batch sampler for filling a mini-batch with a variable number of samples up to a maximum size ([#4972](https://github.com/pyg-team/pytorch_geometric/pull/4972))\r\n- Added fine grained options for setting `bias` and `dropout` per layer in the `MLP` model ([#4981](https://github.com/pyg-team/pytorch_geometric/pull/4981))\r\n- Added `EdgeCNN` model ([#4991](https://github.com/pyg-team/pytorch_geometric/pull/4991))\r\n- Added scalable `inference` mode in `BasicGNN` with layer-wise neighbor loading ([#4977](https://github.com/pyg-team/pytorch_geometric/pull/4977))\r\n- Added inference benchmarks ([#4892](https://github.com/pyg-team/pytorch_geometric/pull/4892), [#5107](https://github.com/pyg-team/pytorch_geometric/pull/5107))\r\n- Added PyTorch 1.12 support  ([#4975](https://github.com/pyg-team/pytorch_geometric/pull/4975))\r\n- Added `unbatch_edge_index` functionality for splitting an `edge_index` tensor according to a `batch` vector ([#4903](https://github.com/pyg-team/pytorch_geometric/pull/4903))\r\n- Added node-wise normalization mode in `LayerNorm` ([#4944](https://github.com/pyg-team/pytorch_geometric/pull/4944))\r\n- Added support for `normalization_resolver` ([#4926](https://github.com/pyg-team/pytorch_geometric/pull/4926), [#4951](https://github.com/pyg-team/pytorch_geometric/pull/4951), [#4958](https://github.com/pyg-team/pytorch_geometric/pull/4958), [#4959](https://github.com/pyg-team/pytorch_geometric/pull/4959))\r\n- Added notebook tutorial for `torch_geometric.nn.aggr` package to documentation ([#4927](https://github.com/pyg-team/pytorch_geometric/pull/4927))\r\n- Added support for `follow_batch` for lists or dictionaries of tensors ([#4837](https://github.com/pyg-team/pytorch_geometric/pull/4837))\r\n- Added `Data.validate()` and `HeteroData.validate()` functionality ([#4885](https://github.com/pyg-team/pytorch_geometric/pull/4885))\r\n- Added `LinkNeighborLoader` support to `LightningDataModule` ([#4868](https://github.com/pyg-team/pytorch_geometric/pull/4868))\r\n- Added `predict()` support to the `LightningNodeData` module ([#4884](https://github.com/pyg-team/pytorch_geometric/pull/4884))\r\n- Added `time_attr` argument to `LinkNeighborLoader` ([#4877](https://github.com/pyg-team/pytorch_geometric/pull/4877), [#4908](https://github.com/pyg-team/pytorch_geometric/pull/4908))\r\n- Added a `filter_per_worker` argument to data loaders to allow filtering of data within sub-processes ([#4873](https://github.com/pyg-team/pytorch_geometric/pull/4873))\r\n- Added a `NeighborLoader` benchmark script ([#4815](https://github.com/pyg-team/pytorch_geometric/pull/4815), [#4862](https://github.com/pyg-team/pytorch_geometric/pull/4862/files))\r\n- Added support for `FeatureStore` and `GraphStore` in `NeighborLoader` ([#4817](https://github.com/pyg-team/pytorch_geometric/pull/4817), [#4851](https://github.com/pyg-team/pytorch_geometric/pull/4851), [#4854](https://github.com/pyg-team/pytorch_geometric/pull/4854), [#4856](https://github.com/pyg-team/pytorch_geometric/pull/4856), [#4857](https://github.com/pyg-team/pytorch_geometric/pull/4857), [#4882](https://github.com/pyg-team/pytorch_geometric/pull/4882), [#4883](https://github.com/pyg-team/pytorch_geometric/pull/4883), [#4929](https://github.com/pyg-team/pytorch_geometric/pull/4929), [#4992](https://github.com/pyg-team/pytorch_geometric/pull/4922), [#4962](https://github.com/pyg-team/pytorch_geometric/pull/4962), [#4968](https://github.com/pyg-team/pytorch_geometric/pull/4968), [#5037](https://github.com/pyg-team/pytorch_geometric/pull/5037), [#5088](https://github.com/pyg-team/pytorch_geometric/pull/5088))\r\n- Added a `normalize` parameter to `dense_diff_pool` ([#4847](https://github.com/pyg-team/pytorch_geometric/pull/4847))\r\n- Added `size=None` explanation to jittable `MessagePassing` modules in the documentation ([#4850](https://github.com/pyg-team/pytorch_geometric/pull/4850))\r\n- Added documentation to the `DataLoaderIterator` class ([#4838](https://github.com/pyg-team/pytorch_geometric/pull/4838))\r\n- Added `GraphStore` support to `Data` and `HeteroData` ([#4816](https://github.com/pyg-team/pytorch_geometric/pull/4816))\r\n- Added `FeatureStore` support to `Data` and `HeteroData` ([#4807](https://github.com/pyg-team/pytorch_geometric/pull/4807), [#4853](https://github.com/pyg-team/pytorch_geometric/pull/4853))\r\n- Added `FeatureStore` and `GraphStore` abstractions ([#4534](https://github.com/pyg-team/pytorch_geometric/pull/4534), [#4568](https://github.com/pyg-team/pytorch_geometric/pull/4568))\r\n- Added support for dense aggregations in `global_*_pool` ([#4827](https://github.com/pyg-team/pytorch_geometric/pull/4827))\r\n- Added Python version requirement ([#4825](https://github.com/pyg-team/pytorch_geometric/pull/4825))\r\n- Added TorchScript support to `JumpingKnowledge` module ([#4805](https://github.com/pyg-team/pytorch_geometric/pull/4805))\r\n- Added a `max_sample` argument to `AddMetaPaths` in order to tackle very dense metapath edges ([#4750](https://github.com/pyg-team/pytorch_geometric/pull/4750))\r\n- Test `HANConv` with empty tensors ([#4756](https://github.com/pyg-team/pytorch_geometric/pull/4756), [#4841](https://github.com/pyg-team/pytorch_geometric/pull/4841))\r\n- Added the `bias` vector to the `GCN` model definition in the \"Create Message Passing Networks\" tutorial ([#4755](https://github.com/pyg-team/pytorch_geometric/pull/4755))\r\n- Added `transforms.RootedSubgraph` interface with two implementations: `RootedEgoNets` and `RootedRWSubgraph` ([#3926](https://github.com/pyg-team/pytorch_geometric/pull/3926))\r\n- Added `ptr` vectors for `follow_batch` attributes within `Batch.from_data_list` ([#4723](https://github.com/pyg-team/pytorch_geometric/pull/4723))\r\n- Added `torch_geometric.nn.aggr` package ([#4687](https://github.com/pyg-team/pytorch_geometric/pull/4687), [#4721](https://github.com/pyg-team/pytorch_geometric/pull/4721), [#4731](https://github.com/pyg-team/pytorch_geometric/pull/4731), [#4762](https://github.com/pyg-team/pytorch_geometric/pull/4762), [#4749](https://github.com/pyg-team/pytorch_geometric/pull/4749), [#4779](https://github.com/pyg-team/pytorch_geometric/pull/4779), [#4863](https://github.com/pyg-team/pytorch_geometric/pull/4863), [#4864](https://github.com/pyg-team/pytorch_geometric/pull/4864), [#4865](https://github.com/pyg-team/pytorch_geometric/pull/4865), [#4866](https://github.com/pyg-team/pytorch_geometric/pull/4866), [#4872](https://github.com/pyg-team/pytorch_geometric/pull/4872), [#4934](https://github.com/pyg-team/pytorch_geometric/pull/4934), [#4935](https://github.com/pyg-team/pytorch_geometric/pull/4935), [#4957](https://github.com/pyg-team/pytorch_geometric/pull/4957), [#4973](https://github.com/pyg-team/pytorch_geometric/pull/4973), [#4973](https://github.com/pyg-team/pytorch_geometric/pull/4973), [#4986](https://github.com/pyg-team/pytorch_geometric/pull/4986), [#4995](https://github.com/pyg-team/pytorch_geometric/pull/4995), [#5000](https://github.com/pyg-team/pytorch_geometric/pull/5000), [#5034](https://github.com/pyg-team/pytorch_geometric/pull/5034), [#5036](https://github.com/pyg-team/pytorch_geometric/pull/5036), [#5039](https://github.com/pyg-team/pytorch_geometric/issues/5039), [#4522](https://github.com/pyg-team/pytorch_geometric/pull/4522), [#5033](https://github.com/pyg-team/pytorch_geometric/pull/5033]), [#5085](https://github.com/pyg-team/pytorch_geometric/pull/5085), [#5097](https://github.com/pyg-team/pytorch_geometric/pull/5097), [#5099](https://github.com/pyg-team/pytorch_geometric/pull/5099), [#5104](https://github.com/pyg-team/pytorch_geometric/pull/5104), [#5113](https://github.com/pyg-team/pytorch_geometric/pull/5113), [#5130](https://github.com/pyg-team/pytorch_geometric/pull/5130), [#5098](https://github.com/pyg-team/pytorch_geometric/pull/5098), [#5191](https://github.com/pyg-team/pytorch_geometric/pull/5191))\r\n- Added the `DimeNet++` model ([#4432](https://github.com/pyg-team/pytorch_geometric/pull/4432), [#4699](https://github.com/pyg-team/pytorch_geometric/pull/4699), [#4700](https://github.com/pyg-team/pytorch_geometric/pull/4700), [#4800](https://github.com/pyg-team/pytorch_geometric/pull/4800))\r\n- Added an example of using PyG with PyTorch Ignite ([#4487](https://github.com/pyg-team/pytorch_geometric/pull/4487))\r\n- Added `GroupAddRev` module with support for reducing training GPU memory ([#4671](https://github.com/pyg-team/pytorch_geometric/pull/4671), [#4701](https://github.com/pyg-team/pytorch_geometric/pull/4701), [#4715](https://github.com/pyg-team/pytorch_geometric/pull/4715), [#4730](https://github.com/pyg-team/pytorch_geometric/pull/4730))\r\n- Added benchmarks via [`wandb`](https://wandb.ai/site) ([#4656](https://github.com/pyg-team/pytorch_geometric/pull/4656), [#4672](https://github.com/pyg-team/pytorch_geometric/pull/4672), [#4676](https://github.com/pyg-team/pytorch_geometric/pull/4676))\r\n- Added `unbatch` functionality ([#4628](https://github.com/pyg-team/pytorch_geometric/pull/4628))\r\n- Confirm that `to_hetero()` works with custom functions, *e.g.*, `dropout_adj` ([4653](https://github.com/pyg-team/pytorch_geometric/pull/4653))\r\n- Added the `MLP.plain_last=False` option ([4652](https://github.com/pyg-team/pytorch_geometric/pull/4652))\r\n- Added a check in `HeteroConv` and `to_hetero()` to ensure that `MessagePassing.add_self_loops` is disabled ([4647](https://github.com/pyg-team/pytorch_geometric/pull/4647))\r\n- Added `HeteroData.subgraph()` support ([#4635](https://github.com/pyg-team/pytorch_geometric/pull/4635))\r\n- Added the `AQSOL` dataset ([#4626](https://github.com/pyg-team/pytorch_geometric/pull/4626))\r\n- Added `HeteroData.node_items()` and `HeteroData.edge_items()` functionality ([#4644](https://github.com/pyg-team/pytorch_geometric/pull/4644))\r\n- Added PyTorch Lightning support in GraphGym ([#4511](https://github.com/pyg-team/pytorch_geometric/pull/4511), [#4516](https://github.com/pyg-team/pytorch_geometric/pull/4516) [#4531](https://github.com/pyg-team/pytorch_geometric/pull/4531), [#4689](https://github.com/pyg-team/pytorch_geometric/pull/4689), [#4843](https://github.com/pyg-team/pytorch_geometric/pull/4843))\r\n- Added support for returning embeddings in `MLP` models ([#4625](https://github.com/pyg-team/pytorch_geometric/pull/4625))\r\n- Added faster initialization of `NeighborLoader` in case edge indices are already sorted (via `is_sorted=True`) ([#4620](https://github.com/pyg-team/pytorch_geometric/pull/4620), [#4702](https://github.com/pyg-team/pytorch_geometric/pull/4702))\r\n- Added `AddPositionalEncoding` transform ([#4521](https://github.com/pyg-team/pytorch_geometric/pull/4521))\r\n- Added `HeteroData.is_undirected()` support ([#4604](https://github.com/pyg-team/pytorch_geometric/pull/4604))\r\n- Added the `Genius` and `Wiki` datasets to `nn.datasets.LINKXDataset` ([#4570](https://github.com/pyg-team/pytorch_geometric/pull/4570), [#4600](https://github.com/pyg-team/pytorch_geometric/pull/4600))\r\n- Added `nn.aggr.EquilibrumAggregation` implicit global layer ([#4522](https://github.com/pyg-team/pytorch_geometric/pull/4522))\r\n- Added support for graph-level outputs in `to_hetero` ([#4582](https://github.com/pyg-team/pytorch_geometric/pull/4582))\r\n- Added `CHANGELOG.md` ([#4581](https://github.com/pyg-team/pytorch_geometric/pull/4581))\r\n- Added `HeteroData` support to the `RemoveIsolatedNodes` transform ([#4479](https://github.com/pyg-team/pytorch_geometric/pull/4479))\r\n- Added `HeteroData.num_features` functionality ([#4504](https://github.com/pyg-team/pytorch_geometric/pull/4504))\r\n- Added support for projecting features before propagation in `SAGEConv` ([#4437](https://github.com/pyg-team/pytorch_geometric/pull/4437))\r\n- Added `Geom-GCN` splits to the `Planetoid` datasets ([#4442](https://github.com/pyg-team/pytorch_geometric/pull/4442))\r\n- Added a `LinkNeighborLoader` for training scalable link predictions models [#4396](https://github.com/pyg-team/pytorch_geometric/pull/4396),  [#4439](https://github.com/pyg-team/pytorch_geometric/pull/4439),  [#4441](https://github.com/pyg-team/pytorch_geometric/pull/4441), [#4446](https://github.com/pyg-team/pytorch_geometric/pull/4446), [#4508](https://github.com/pyg-team/pytorch_geometric/pull/4508), [#4509](https://github.com/pyg-team/pytorch_geometric/pull/4509))\r\n- Added an unsupervised `GraphSAGE` example on `PPI` ([#4416](https://github.com/pyg-team/pytorch_geometric/pull/4416))\r\n- Added support for `LSTM` aggregation in `SAGEConv` ([#4379](https://github.com/pyg-team/pytorch_geometric/pull/4379))\r\n- Added support for floating-point labels in `RandomLinkSplit` ([#4311](https://github.com/pyg-team/pytorch_geometric/pull/4311), [#4383](https://github.com/pyg-team/pytorch_geometric/pull/4383))\r\n- Added support for `torch.data` `DataPipes` ([#4302](https://github.com/pyg-team/pytorch_geometric/pull/4302), [#4345](https://github.com/pyg-team/pytorch_geometric/pull/4345), [#4349](https://github.com/pyg-team/pytorch_geometric/pull/4349))\r\n- Added support for the `cosine` argument in the `KNNGraph`/`RadiusGraph` transforms ([#4344](https://github.com/pyg-team/pytorch_geometric/pull/4344))\r\n- Added support graph-level attributes in `networkx` conversion ([#4343](https://github.com/pyg-team/pytorch_geometric/pull/4343))\r\n- Added support for renaming node types via `HeteroData.rename` ([#4329](https://github.com/pyg-team/pytorch_geometric/pull/4329))\r\n- Added an example to load a trained PyG model in C++ ([#4307](https://github.com/pyg-team/pytorch_geometric/pull/4307))\r\n- Added a `MessagePassing.explain_message` method to customize making explanations on messages ([#4278](https://github.com/pyg-team/pytorch_geometric/pull/4278), [#4448](https://github.com/pyg-team/pytorch_geometric/pull/4448)))\r\n- Added support for `GATv2Conv` in the `nn.models.GAT` model ([#4357](https://github.com/pyg-team/pytorch_geometric/pull/4357))\r\n- Added `HeteroData.subgraph` functionality ([#4243](https://github.com/pyg-team/pytorch_geometric/pull/4243))\r\n- Added the `MaskLabel` module and a corresponding masked label propagation example ([#4197](https://github.com/pyg-team/pytorch_geometric/pull/4197))\r\n- Added temporal sampling support to `NeighborLoader` ([#4025](https://github.com/pyg-team/pytorch_geometric/pull/4025))\r\n- Added an example for unsupervised heterogeneous graph learning based on \"Deep Multiplex Graph Infomax\" ([#3189](https://github.com/pyg-team/pytorch_geometric/pull/3189))\r\n</details>\r\n\r\n<details>\r\n<summary><b>Changed</b></summary>\r\n\r\n- Changed docstring for `RandomLinkSplit` ([#5190](https://github.com/pyg-team/pytorch_geometric/issues/5190))\r\n- Switched to PyTorch `scatter_reduce` implementation - experimental feature ([#5120](https://github.com/pyg-team/pytorch_geometric/pull/5120))\r\n- Fixed `RGATConv` device mismatches for `f-scaled` mode ([#5187](https://github.com/pyg-team/pytorch_geometric/pull/5187)]\r\n- Allow for multi-dimensional `edge_labels` in `LinkNeighborLoader` ([#5186](https://github.com/pyg-team/pytorch_geometric/pull/5186)]\r\n- Fixed `GINEConv` bug with non-sequential input ([#5154](https://github.com/pyg-team/pytorch_geometric/pull/5154)]\r\n- Improved error message ([#5095](https://github.com/pyg-team/pytorch_geometric/pull/5095))\r\n- Fixed `HGTLoader` bug which produced outputs with missing edge types ([#5067](https://github.com/pyg-team/pytorch_geometric/pull/5067))\r\n- Fixed dynamic inheritance issue in data batching ([#5051](https://github.com/pyg-team/pytorch_geometric/pull/5051))\r\n- Fixed `load_state_dict` in `Linear` with `strict=False` mode ([5094](https://github.com/pyg-team/pytorch_geometric/pull/5094))\r\n- Fixed typo in `MaskLabel.ratio_mask` ([5093](https://github.com/pyg-team/pytorch_geometric/pull/5093))\r\n- Fixed `data.num_node_features` computation for sparse matrices ([5089](https://github.com/pyg-team/pytorch_geometric/pull/5089))\r\n- Fixed `torch.fx` bug with `torch.nn.aggr` package ([#5021](https://github.com/pyg-team/pytorch_geometric/pull/5021)))\r\n- Fixed `GenConv` test ([4993](https://github.com/pyg-team/pytorch_geometric/pull/4993))\r\n- Fixed packaging tests for Python 3.10 ([4982](https://github.com/pyg-team/pytorch_geometric/pull/4982))\r\n- Changed `act_dict` (part of `graphgym`) to create individual instances instead of reusing the same ones everywhere ([4978](https://github.com/pyg-team/pytorch_geometric/pull/4978))\r\n- Fixed issue where one-hot tensors were passed to `F.one_hot` ([4970](https://github.com/pyg-team/pytorch_geometric/pull/4970))\r\n- Fixed `bool` arugments in `argparse` in `benchmark/` ([#4967](https://github.com/pyg-team/pytorch_geometric/pull/4967))\r\n- Fixed `BasicGNN` for `num_layers=1`, which now respects a desired number of `out_channels` ([#4943](https://github.com/pyg-team/pytorch_geometric/pull/4943))\r\n- `len(batch)` will now return the number of graphs inside the batch, not the number of attributes ([#4931](https://github.com/pyg-team/pytorch_geometric/pull/4931))\r\n- Fixed `data.subgraph` generation for 0-dim tensors ([#4932](https://github.com/pyg-team/pytorch_geometric/pull/4932))\r\n- Removed unnecssary inclusion of self-loops when sampling negative edges ([#4880](https://github.com/pyg-team/pytorch_geometric/pull/4880))\r\n- Fixed `InMemoryDataset` inferring wrong `len` for lists of tensors ([#4837](https://github.com/pyg-team/pytorch_geometric/pull/4837))\r\n- Fixed `Batch.separate` when using it for lists of tensors ([#4837](https://github.com/pyg-team/pytorch_geometric/pull/4837))\r\n- Correct docstring for SAGEConv ([#4852](https://github.com/pyg-team/pytorch_geometric/pull/4852))\r\n- Fixed a bug in `TUDataset` where `pre_filter` was not applied whenever `pre_transform` was present ([#4842](https://github.com/pyg-team/pytorch_geometric/pull/4842))\r\n- Renamed `RandomTranslate` to `RandomJitter` - the usage of `RandomTranslate` is now deprecated ([#4828](https://github.com/pyg-team/pytorch_geometric/pull/4828))\r\n- Do not allow accessing edge types in `HeteroData` with two node types when there exists multiple relations between these types ([#4782](https://github.com/pyg-team/pytorch_geometric/pull/4782))\r\n- Allow `edge_type == rev_edge_type` argument in `RandomLinkSplit` ([#4757](https://github.com/pyg-team/pytorch_geometric/pull/4757))\r\n- Fixed a numerical instability in the `GeneralConv` and `neighbor_sample` tests ([#4754](https://github.com/pyg-team/pytorch_geometric/pull/4754))\r\n- Fixed a bug in `HANConv` in which destination node features rather than source node features were propagated ([#4753](https://github.com/pyg-team/pytorch_geometric/pull/4753))\r\n- Fixed versions of `checkout` and `setup-python` in CI ([#4751](https://github.com/pyg-team/pytorch_geometric/pull/4751))\r\n- Fixed `protobuf` version ([#4719](https://github.com/pyg-team/pytorch_geometric/pull/4719))\r\n- Fixed the ranking protocol bug in the RGCN link prediction example ([#4688](https://github.com/pyg-team/pytorch_geometric/pull/4688))\r\n- Math support in Markdown ([#4683](https://github.com/pyg-team/pytorch_geometric/pull/4683))\r\n- Allow for `setter` properties in `Data` ([#4682](https://github.com/pyg-team/pytorch_geometric/pull/4682), [#4686](https://github.com/pyg-team/pytorch_geometric/pull/4686))\r\n- Allow for optional `edge_weight` in `GCN2Conv` ([#4670](https://github.com/pyg-team/pytorch_geometric/pull/4670))\r\n- Fixed the interplay between `TUDataset` and `pre_transform` that modify node features ([#4669](https://github.com/pyg-team/pytorch_geometric/pull/4669))\r\n- Make use of the `pyg_sphinx_theme` documentation template ([#4664](https://github.com/pyg-team/pyg-lib/pull/4664), [#4667](https://github.com/pyg-team/pyg-lib/pull/4667))\r\n- Refactored reading molecular positions from sdf file for qm9 datasets ([4654](https://github.com/pyg-team/pytorch_geometric/pull/4654))\r\n- Fixed `MLP.jittable()` bug in case `return_emb=True` ([#4645](https://github.com/pyg-team/pytorch_geometric/pull/4645), [#4648](https://github.com/pyg-team/pytorch_geometric/pull/4648))\r\n- The generated node features of `StochasticBlockModelDataset` are now ordered with respect to their labels ([#4617](https://github.com/pyg-team/pytorch_geometric/pull/4617))\r\n- Fixed typos in the documentation ([#4616](https://github.com/pyg-team/pytorch_geometric/pull/4616), [#4824](https://github.com/pyg-team/pytorch_geometric/pull/4824), [#4895](https://github.com/pyg-team/pytorch_geometric/pull/4895), [#5161](https://github.com/pyg-team/pytorch_geometric/pull/5161))\r\n- The `bias` argument in `TAGConv` is now actually applied ([#4597](https://github.com/pyg-team/pytorch_geometric/pull/4597))\r\n- Fixed subclass behaviour of `process` and `download` in `Datsaet` ([#4586](https://github.com/pyg-team/pytorch_geometric/pull/4586))\r\n- Fixed filtering of attributes for loaders in case `__cat_dim__ != 0` ([#4629](https://github.com/pyg-team/pytorch_geometric/pull/4629))\r\n- Fixed `SparseTensor` support in `NeighborLoader` ([#4320](https://github.com/pyg-team/pytorch_geometric/pull/4320))\r\n- Fixed average degree handling in `PNAConv` ([#4312](https://github.com/pyg-team/pytorch_geometric/pull/4312))\r\n- Fixed a bug in `from_networkx` in case some attributes are PyTorch tensors ([#4486](https://github.com/pyg-team/pytorch_geometric/pull/4486))\r\n- Added a missing clamp in `DimeNet` ([#4506](https://github.com/pyg-team/pytorch_geometric/pull/4506), [#4562](https://github.com/pyg-team/pytorch_geometric/pull/4562))\r\n- Fixed the download link in `DBP15K` ([#4428](https://github.com/pyg-team/pytorch_geometric/pull/4428))\r\n- Fixed an autograd bug in `DimeNet` when resetting parameters ([#4424](https://github.com/pyg-team/pytorch_geometric/pull/4424))\r\n- Fixed bipartite message passing in case `flow=\"target_to_source\"` ([#4418](https://github.com/pyg-team/pytorch_geometric/pull/4418))\r\n- Fixed a bug in which `num_nodes` was not properly updated in the `FixedPoints` transform ([#4394](https://github.com/pyg-team/pytorch_geometric/pull/4394))\r\n- PyTorch Lightning >= 1.6 support ([#4377](https://github.com/pyg-team/pytorch_geometric/pull/4377))\r\n- Fixed a bug in which `GATConv` was not jittable ([#4347](https://github.com/pyg-team/pytorch_geometric/pull/4347))\r\n- Fixed a bug in which the GraphGym config was not stored in each specific experiment directory ([#4338](https://github.com/pyg-team/pytorch_geometric/pull/4338))\r\n- Fixed a bug in which `nn.models.GAT` did not produce `out_channels`-many output channels ([#4299](https://github.com/pyg-team/pytorch_geometric/pull/4299))\r\n- Fixed mini-batching with empty lists as attributes ([#4293](https://github.com/pyg-team/pytorch_geometric/pull/4293))\r\n- Fixed a bug in which `GCNConv` could not be combined with `to_hetero` on heterogeneous graphs with one node type ([#4279](https://github.com/pyg-team/pytorch_geometric/pull/4279))\r\n</details>\r\n\r\n<details>\r\n<summary><b>Removed</b></summary>\r\n\r\n- Remove internal metrics in favor of `torchmetrics` ([#4287](https://github.com/pyg-team/pytorch_geometric/pull/4287))\r\n</details>\r\n\r\n**Full commit list:** https://github.com/pyg-team/pytorch_geometric/compare/2.0.4...2.1.0", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/74605915/reactions", "total_count": 34, "+1": 0, "-1": 0, "laugh": 0, "hooray": 23, "confused": 0, "heart": 0, "rocket": 11, "eyes": 0}}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/61669215", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/61669215/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/61669215/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/2.0.4", "id": 61669215, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBlHMec4DrP9f", "tag_name": "2.0.4", "target_commitish": "master", "name": "2.0.4", "draft": false, "prerelease": false, "created_at": "2022-03-12T11:32:40Z", "published_at": "2022-03-12T16:43:21Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/2.0.4", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/2.0.4", "body": "# PyG 2.0.4 \ud83c\udf89\r\n\r\nA new minor PyG version release, bringing **PyTorch 1.11 support to PyG**. It further includes a variety of new **features** and **bugfixes**:\r\n\r\n## Features\r\n\r\n* Added [**Quiver examples**](https://github.com/pyg-team/pytorch_geometric/tree/master/examples/quiver) for multi-GU training using [`GraphSAGE`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GraphSAGE) (#4103), thanks to @eedalong and @luomai\r\n* [**`nn.model.to_captum`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.to_captum): Full integration of explainability methods provided by the [Captum](https://captum.ai/) library (#3990, #4076), thanks to @RBendias\r\n* [**`nn.conv.RGATConv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.RGATConv): The relational graph attentional operator (#4031, #4110), thanks to @fork123aniket\r\n* [**`nn.pool.DMoNPooling`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.dense.DMoNPooling): The spectral modularity pooling operator (#4166, #4242), thanks to @fork123aniket\r\n* [**`nn.*`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#): Support for shape information in the documentation (#3739, #3889, #3893, #3946, #3981, #4009, #4120, #4158), thanks to @saiden89 and @arunppsg and @konstantinosKokos\r\n* [**`loader.TemporalDataLoader`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.TemporalDataLoader): A dataloader to load a [`TemporalData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.TemporalData) object in mini-batches (#3985, #3988), thanks to @otaviocx\r\n* [**`loader.ImbalancedSampler`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.ImbalancedSampler): A weighted random sampler that randomly samples elements according to class distribution (#4198)\r\n* [**`transforms.VirtualNode`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.VirtualNode): A transform that adds a virtual node to a graph (#4163)\r\n* [**`transforms.LargestConnectedComponents`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.LargestConnectedComponents): Selects the subgraph that corresponds to the largest connected components in the graph (#3949), thanks to @abojchevski\r\n* [**`utils.homophily`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.homophily): Support for class-insensitive edge homophily (#3977, #4152), thanks to @hash-ir and @jinjh0123 \r\n* [**`utils.get_mesh_laplacian`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.get_mesh_laplacian): Mesh Laplacian computation (#4187), thanks to @daniel-unyi-42\r\n\r\n## Datasets\r\n\r\n* Added a [**dataset cheatsheet**](https://pytorch-geometric.readthedocs.io/en/latest/notes/data_cheatsheet.html) to the documentation that collects import graph statistics across a variety of datasets supported in PyG (#3807, #3817) *(please consider helping us filling its remaining content)*\r\n* [`datasets.EllipticBitcoinDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.EllipticBitcoinDataset): A dataset of Bitcoin transactions (#3815), thanks to @shravankumar147\r\n\r\n## Minor Changes\r\n\r\n* [`nn.models.MLP`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.MLP): MLPs can now either be initialized via a list of `channels` or by specifying `hidden_channels` and `num_layers` (#3957)\r\n* [`nn.models.BasicGNN`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#models): Final `Linear` transformations are now always applied (except for `jk=None`) (#4042)\r\n* [`nn.conv.MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing): Message passing modules that make use of [`edge_updater`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing.edge_updater) are now jittable (#3765), thanks to @Padarn\r\n* [`nn.conv.MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing): (Official) support for `min` and `mul` aggregations (#4219)\r\n* [`nn.LightGCN`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.LightGCN): Initialize embeddings via `xavier_uniform` for better model performance (#4083), thanks to @nishithshowri006\r\n* [`nn.conv.ChebConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.ChebConv): Automatic eigenvalue approximation (#4106), thanks to @daniel-unyi-42\r\n* [`nn.conv.APPNP`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.APPNP): Added support for optional `edge_weight`, (690a01d), thanks to @YueeXiang\r\n* [`nn.conv.GravNetConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GravNetConv): Support for `torch.jit.script` (#3885), thanks to @RobMcH \r\n* [`nn.pool.global_*_pool`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#global-pooling-layers): The `batch` vector is now optional (#4161)\r\n* [`nn.to_hetero`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_transformer.to_hetero): Added a warning in case `to_hetero` is used on [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) metadata with unused destination node types (#3775)\r\n* [`nn.to_hetero`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_transformer.to_hetero): Support for nested modules (ea135bf)\r\n* [`nn.Sequential`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.sequential.Sequential): Support for indexing (#3790)\r\n* [`nn.Sequential`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.sequential.Sequential): Support for `OrderedDict` as input (#4075)\r\n* [`datasets.ZINC`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.ZINC): Added an in-depth description of the task (#3832), thanks to @gasteigerjo\r\n* [`datasets.FakeDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.FakeDataset): Support for different feature distributions across different labels (#4065), thanks to @arunppsg\r\n* [`datasets.FakeDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.FakeDataset): Support for custom global attributes (#4074), thanks to @arunppsg\r\n* [`transforms.NormalizeFeatures`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.NormalizeFeatures): Features will no longer be transformed in-place (ada5b9a)\r\n* [`transforms.NormalizeFeatures`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.NormalizeFeatures): Support for negative feature values (6008e30)\r\n* [`utils.is_undirected`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.is_undirected): Improved efficiency (#3789)\r\n* [`utils.dropout_adj`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dropout_adj): Improved efficiency (#4059)\r\n* [`utils.contains_isolated_nodes`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.contains_isolated_nodes): Improved efficiency (970de13)\r\n* [`utils.to_networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.to_networkx): Support for `to_undirected` options (upper triangle vs. lower triangle) (#3901, #3948), thanks to @RemyLau\r\n* [`graphgym`](https://pytorch-geometric.readthedocs.io/en/latest/notes/graphgym.html): Support for custom metrics and loggers (#3494), thanks to @RemyLau\r\n* [`graphgym.register`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html#torch_geometric.graphgym.register_base): Register operations can now be used as class decorators (#3779, #3782)\r\n* Documentation: Added a few exercises at the end of documentation tutorials (#3780), thanks to @PabloAMC\r\n* Documentation: Added better installation instructions to [`CONTRIBUTUNG.md`](https://github.com/pyg-team/pytorch_geometric/blob/master/CONTRIBUTING.md) (#3803, #3991, #3995), thanks to @Cho-Geonwoo and @RBendias and @RodrigoVillatoro\r\n* Refactor: Clean-up dependencies (#3908, #4133, #4172), thanks to @adelizer\r\n* CI: Improved test runtimes (#4241)\r\n* CI: Additional linting check via `yamllint` (#3886)\r\n* CI: Additional linting check via `isort` (66b1780), thanks to @mananshah99\r\n* `torch.package`: Model packaging via `torch.package` (#3997)\r\n\r\n## Bugfixes\r\n\r\n* [`data.HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData): Fixed a bug in `data.{attr_name}_dict` in case `data.{attr_name}` does not exist (#3897)\r\n* [`data.Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data): Fixed [`data.is_edge_attr`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.is_edge_attr) in case `data.num_edges == 1` (#3880)\r\n* [`data.Batch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch): Fixed a device mismatch bug in case a `batch` object was indexed that was created from GPU tensors (e6aa4c9, c549b3b)\r\n* [`data.InMemoryDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.InMemoryDataset): Fixed a bug in which [`copy`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.InMemoryDataset.copy) did not respect the underlying slice (d478dcb, #4223)\r\n* [`nn.conv.MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing): Fixed message passing with zero nodes/edges (#4222)\r\n* [`nn.conv.MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing): Fixed bipartite message passing with `flow=\"target_to_source\"` (#3907)\r\n* [`nn.conv.GeneralConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GeneralConv): Fixed an issue in case `skip_linear=False` and `in_channels=out_channels` (#3751), thanks to @danielegrattarola\r\n* [`nn.to_hetero`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_transformer.to_hetero): Fixed model transformation in case node type names or edge type names contain whitespaces or dashes (#3882, b63a660)\r\n* [`nn.dense.Linear`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.dense.Linear): Fixed a bug in lazy initialization for PyTorch < 1.8.0 (973d17d, #4086)\r\n* [`nn.norm.LayerNorm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.LayerNorm): Fixed a bug in the shape of weights and biases (#4030), thanks to @marshka\r\n* [`nn.pool`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#pooling-layers): Fixed `torch.jit.script` support for [`torch-cluster`](https://github.com/rusty1s/pytorch_cluster) functions (#4047)\r\n* [`datasets.TOSCA`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.TOSCA): Fixed a bug in which indices of faces started at `1` rather than `0` (8c282a0), thanks to @JRowbottomGit \r\n* [`datasets.WikiCS`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WikiCS): Fixed `WikiCS` to be undirected by default (#3796), thanks to @pmernyei\r\n* Resolved inconsistency between [`utils.contains_isolated_nodes`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.contains_isolated_nodes) and [`data.has_isolated_nodes`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.has_isolated_nodes) (#4138)\r\n* [`graphgym`](https://pytorch-geometric.readthedocs.io/en/latest/notes/graphgym.html): Fixed the loss function regarding multi-label classification (#4206), thanks to @RemyLau\r\n* Documentation: Fixed typos, grammar and bugs (#3840, #3874, #3875, #4149), thanks to @itamblyn and @chrisyeh96 and @finquick", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/61669215/reactions", "total_count": 39, "+1": 22, "-1": 0, "laugh": 0, "hooray": 10, "confused": 0, "heart": 0, "rocket": 7, "eyes": 0}, "mentions_count": 31}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/55801333", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/55801333/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/55801333/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/2.0.3", "id": 55801333, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBlHMec4DU3X1", "tag_name": "2.0.3", "target_commitish": "master", "name": "2.0.3", "draft": false, "prerelease": false, "created_at": "2021-12-22T06:43:29Z", "published_at": "2021-12-22T06:49:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/2.0.3", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/2.0.3", "body": "# PyG 2.0.3 \ud83c\udf89\r\n\r\nA new minor PyG version release, including a variety of new **features** and **bugfixes**:\r\n\r\n## Features\r\n\r\n* [`GLNN`](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/glnn.py): Graph-less Neural Networks [[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/glnn.py)] (#3572)\r\n* [`LINKX`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.LINKX): Large Scale Learning on Non-Homophilous Graphs [[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/linkx.py)] (#3654)\r\n* Added an [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/hetero_link_pred.py) for heterogeneous link classification (#3350) - thanks to @anniekmyatt\r\n* [`HANConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HANConv): The Heterogenous Graph Attention operator [[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/han_imdb.py)] (#3444, #3577, #3581) - thanks to @rishubhkhurana and @wsad1\r\n* [`LGConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.LGConv) and [`LightGCN`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.LightGCN): Simplifying and Powering Graph Convolution Network for Recommendation (#3685) - thanks to @LukasHaas and @KathyFeiyang\r\n* PyTorch Lightning `DataModule` wrappers for PyG+PL multi-GPU training/inference without replicating datasets across processes :\r\n  * [`torch_geometric.data.LightningDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.LightningDataset) for multi-GPU training via PL on graph-level tasks [[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pytorch_lightning/gin.py)] (#3596, #3634)\r\n  * [`torch_geometric.data.LightningNodeData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.LightningNodeData) for multi-GPU training via PL on node-level tasks [[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pytorch_lightning/graph_sage.py)] (#3613, #3634)\r\n* [`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader): Added CUDA support leading to major runtime improvements [[Example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/reddit.py)] (#3736)\r\n* [`MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing): Added the [`edge_updater`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing.edge_updater)/[`edge_update`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing.edge_update) interface for updating edge features (#3450) - thanks to @Padarn\r\n* [`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer): Added an [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gnn_explainer_ba_shapes.py) that reproduces the official BA-Shapes experiment (#3386) - thanks to @RBendias\r\n* [`torch_geometric.graphgym`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html): Support for heterogeneous graphs and lazy initialization (#3460) - thanks to @JiaxuanYou\r\n* [`MLP`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.MLP): Added a basic MLP implementation (#3553)\r\n* [`PointTransformer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PointTransformerConv): [Classification](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/point_transformer_classification.py) and [segmentation](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/point_transformer_segmentation.py) examples (#3344) - thanks to @QuanticDisaster and @wsad1\r\n* [`ShaDowKHopSampler`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.ShaDowKHopSampler): Added an [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/shadow.py) (#3411) - thanks to @SubhajitDuttaChowdhury \r\n* [`Data.subgraph(...)`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.subgraph) implementation (#3521)\r\n\r\n## Datasets\r\n\r\n* [`HGBDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.HGBDataset) benchmark suite (#3454)\r\n* [`MalNetTiny`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.MalNetTiny) dataset (#3472) - thanks to @rampasek\r\n* [`OMDB`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.OMDB): Organic Materials Database (#3506)\r\n* [`BAShapes`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.BAShapes): The BA-Shapes dataset (#3386) - thanks to @RBendias\r\n* [`PolBlogs`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.PolBlogs) and [`EmailEUCore`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.EmailEUCore) datasets (#3534) - thanks to @AlexDuvalinho\r\n* [`StochasticBlockModel`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.StochasticBlockModelDataset) and [`RandomPartition`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.RandomPartitionGraphDataset) graph datasets (#3586) - thanks to @dongkwan-kim\r\n* [`LINKXDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.LINKXDataset): A subset of the non-homophilous benchmark datasets from [`LINKX`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.LINKX) \r\n* [`FakeDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.FakeDataset) and [`FakeHeteroDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.FakeHeteroDataset) for testing purposes (#3741) - thanks to @levulinh\r\n\r\n## Minor Changes\r\n\r\n* [`torch_geometric.nn.norm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#normalization-layers): Improved the runtimes of normalization layers - thanks to @johnpeterflynn\r\n* [`DataLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.DataLoader) and [`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader): Output tensors are now written to shared memory to avoid an extra copy in case `num_workers > 0` (#3401 and #3734) - thanks to @johnpeterflynn \r\n* [`GATv2Conv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATv2Conv): Support for edge features (#3421) - thanks to @Kenneth-Schroeder\r\n* [`Batch.from_data_list`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch.from_data_list): Runtime improvements\r\n* [`TransformerConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.TransformerConv): Runtime and memory consumption improvements (#3392) - thanks to @wsad1\r\n* [`mean_iou`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.mean_iou): Added IoU computation via omitting NaNs (#3464) - thanks to @GericoVi\r\n* [`DataLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.DataLoader): `follow_batch` and `exclude_keys` are now optional arguments\r\n* Improvements to the package metadata (#3445) - thanks to @cthoyt\r\n* Updated the quick start widget to support PyTorch 1.10 (#3474) - thanks to @kathyfan\r\n* [`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) and [`HGTLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.HGTLoader): Removed the `persistent_workers=True` default\r\n* [`voxel_grid`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.pool.voxel_grid): The `batch` argument is now optional (#3533) - thanks to @QuanticDisaster\r\n* [`TransformerConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.TransformerConv): JIT support (#3538) - thanks to @RobMcH\r\n* Lazy modules can now correctly be saved and loaded via `state_dict()` and `load_state_dict()` (#3651) - thanks to @shubham-gupta-iitr\r\n* [`from_networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.from_networkx): Support for `nx.MultiDiGraph` (#3646) - thanks to @max-zipfl-fzi\r\n* [`GATv2Conv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATv2Conv): Support for lazy initialization (#3678) - thanks to @richcmwang\r\n* [`torch_geometric.graphgym`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html): `register_*` functions can now be used as decorators (#3684)\r\n* [`AddSelfLoops`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.AddSelfLoops): Now supports the full argument set of [`torch_geometric.utils.add_self_loops`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.add_self_loops) (#3702) - thanks to @dongkwan-kim\r\n* Documentation: Added shape information to a variety of GNN operators, *e.g.*, [`GATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATConv) or [`ChebConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.ChebConv) (#3697) - thanks to @saiden89\r\n* [`GATv2Conv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATv2Conv) and [`HEATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HEATConv): Removed unnecessary `size` argument in `forward` (#3744) - thanks to @saiden89\r\n\r\n## Bugfixes\r\n\r\n* [`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer): Fixed a bug in the [`GCN` example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/gnn_explainer.py) normalization coefficients were wrongly calculated (#3508) - thanks to @RBendias\r\n* [`HGTConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HGTConv): Fixed a bug in the residual connection formulation - thanks to @zzhnobug\r\n* [`torch_geometric.grapghym`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html): Fixed a bug in the creation of [`MLP`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html#torch_geometric.graphgym.models.MLP) (#3431) - thanks to @JiaxuanYou\r\n* [`torch_geometric.graphgym`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html): Fixed a bug in the dimensionality of [`GeneralMultiLayer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html#torch_geometric.graphgym.models.GeneralMultiLayer) (#3456) - thanks to @JiaxuanYou\r\n* [`RandomLinkSplit`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomLinkSplit): Fixed a bug in negative edge sampling for undirected graphs (#3440) - thanks to @panisson\r\n* [`add_self_loops`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.add_self_loops): Fixed a bug in adding self-loops with scalar-valued weights\r\n* [`SchNet`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.SchNet): Fixed a bug in which a `bias` vector was not correctly initialized as zero - thanks to @nec4\r\n* [`Batch.from_data_list`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch.from_data_list): Replaced the `torch.repeat_interleave` call due to errors in forked processes (#3566) - thanks to @Enolerobotti\r\n* [`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader): Fixed a bug in conjunction with PyTorch Lightning (#3602) - thanks to @pbielak\r\n* [`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) and [`ToSparseTensor`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.ToSparseTensor): Fixed a bug in case `num_nodes == num_edges` (#3683) - thanks to @WuliangHuang\r\n* [`ToUndirected`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.ToUndirected): Fixed a bug in case `num_nodes == 2` (#3627) - thanks to @aur3l14no\r\n* [`FiLMConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.FiLMConv): Fixed a bug in the backward pass due to the usage of in-place operations - thanks to @Jokeren\r\n* [`GDC`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.GDC): Fixed a bug in case `K > num_nodes` - thanks to @Misterion777\r\n* [`LabelPropagation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.LabelPropagation): Fixed a bug in the order of transformations (#3639) - thanks to @Riyer01\r\n* [`negative_sampling`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.negative_sampling): Fixed execution for GPU input tensors - thanks to @Sticksword and @lmy86263\r\n* [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData): Fixed a bug in which node types were interpreted as edge types in case they were described by two characters (#3692)\r\n* [`FastRGCNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.FastRGCNConv): Fixed a bug in which weights were indexed on destination node index rather than source node index (#3690) - thanks to @Jokeren\r\n* [`WikipediaNetwork`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WikipediaNetwork): Fixed a bug in downloading due to a change in URLs - thanks to @csbobby and @Kousaka-Honoka", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/55801333/reactions", "total_count": 40, "+1": 30, "-1": 0, "laugh": 0, "hooray": 10, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "mentions_count": 38}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/52053822", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/52053822/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/52053822/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/2.0.2", "id": 52053822, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBlHMec4DGkc-", "tag_name": "2.0.2", "target_commitish": "master", "name": "2.0.2", "draft": false, "prerelease": false, "created_at": "2021-10-26T11:10:29Z", "published_at": "2021-10-26T12:41:58Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/2.0.2", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/2.0.2", "body": "A new minor version release, including further **bugfixes**, official **PyTorch 1.10** support, as well as additional **features** and **operators**:\r\n\r\n## Features\r\n\r\n* Added [video tutorials and Colabs](https://pytorch-geometric.readthedocs.io/en/latest/notes/colabs.html) from the [PyTorch Geometric Tutorial](https://antoniolonga.github.io/Pytorch_geometric_tutorials/index.html) project (thanks to @AntonioLonga)\r\n* Added the [`GraphMultisetTransformer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.glob.GraphMultisetTransformer) operator (thanks to @JinheonBaek)\r\n* Added the [`PointTransformerConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PointTransformerConv) operator (thanks to @QuanticDisaster)\r\n* Added the [`HEATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HEATConv) operator (thanks to @Xiaoyu006)\r\n* Added the [`PNA`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.PNA) GNN model (thanks to @RBendias)\r\n* Added the [`AddMetaPaths`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.AddMetaPaths) transform, which will add additional edge types to a [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) object based on a list of metapaths (thanks to @wsad1)\r\n* Added the [`Data.to_heterogeneous`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.to_heterogeneous) method to allow for the conversion from [`Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) to [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) objects\r\n* Added the [`AttributedGraphDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.AttributedGraphDataset), containing a variety of attributes graphs\r\n* Added the [`Airports`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Airports) datasets\r\n* Added the [`structured_negative_sampling_feasible`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.structured_negative_sampling_feasible) method, which checks if [`structured_negative_sampling`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.structured_negative_sampling) is feasible (thanks to @WuliangHuang)\r\n* [`GATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATConv) can now make use of multi-dimensional edge features to compute attention scores (thanks to @dongkwan-kim)\r\n* [`RandomNodeSplit`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomNodeSplit) and [`RandomLinkSplit`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomLinkSplit) now support [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) as input\r\n* [`MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing) inference can now be sped up via the `decomposed_layers` argument (thanks to @ZhouAo-ZA)\r\n* [`negative_sampling`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.negative_sampling) and [`batched_negative_sampling`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.batched_negative_sampling) now support negative sampling in bipartite graphs\r\n* [`HeteroConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HeteroConv) now supports the inclusion of arbitrary node-level or edge-level information for the underlying `MessagePassing` operators\r\n* [`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer) now supports multiple node-level masks and explaining regression problems (thanks to @gregorkrz)\r\n\r\n## Minor Changes\r\n\r\n* [`Data.to_homogeneous`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.to_homogeneous) will now add `node_type` information to the homogeneous [`Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) object\r\n* [`GINEConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GINEConv) now allows to transform edge features automatically in case their dimensionalities do not match (thanks to @CaypoH) \r\n* [`OGB_MAG`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.OGB_MAG) will now add `node_year` information to paper nodes \r\n* [`Entities`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Entities) datasets do now allow the processing of [`HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) objects via the `hetero=True` option\r\n* [`Batch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch) objects can now be batched together to form super batches\r\n* Added heterogeneous graph support for [`Center`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.Center), [`Constant`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.Constant) and [`LinearTransformation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.LinearTransformation) transformations\r\n* [`HeteroConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HeteroConv) now allows to return \"stacked\" embeddings\r\n* The `batch` vector of a [`Batch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch) object will now be initialized on the GPU in case other attributes are held in GPU memory\r\n\r\n## Bugfixes\r\n\r\n* Fixed the `num_neighbors` argument of [`NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) in order to specify an edge-type specific number of neighbors\r\n* Fixed the `collate` policy of lists of integers/strings to return nested lists\r\n* Fixed the [`Delaunay`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.Delaunay) transformation in case the `face` attribute is not present in the data\r\n* Fixed the [`TGNMemory`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.TGNMemory) module to only read from the latest update (thanks to @cwh104504)\r\n* Fixed the `pickle.PicklingError` when [`Batch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch) objects are used in a `torch.multiprocessing.manager.Queue()` (thanks to @RasmusOrsoe)\r\n* Fixed an issue with `_parent` state changing after pickling of [`Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) objects (thanks to @zepx)\r\n* Fixed the [`ToUndirected`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.ToUndirected) transformation in case the number of edges and nodes are equal (thanks to @lmkmkrcc)\r\n* Fixed the [`from_networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.from_networkx) routine in case node-level and edge-level features share the same names\r\n* Removed the `num_nodes` warning when creating [`PairData`](https://pytorch-geometric.readthedocs.io/en/latest/notes/batching.html#pairs-of-graphs) objects\r\n* Fixed the initialization of the `GeneralMultiLayer` module in GraphGym (thanks to @fjulian)\r\n* Fixed custom model registration in GraphGym\r\n* Fixed a clash in the `run_dir` naming of GraphGym (thanks to @fjulian)\r\n* Includes a fix to prevent a GraphGym crash in case ROC-score is undefined (thanks to @fjulian)\r\n* Fixed the [`Batch.from_data_list`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch.from_data_list) routine on dataset slices (thanks to @dtortorella)\r\n* Fixed the [`MetaPath2Vec`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.MetaPath2Vec) model in case there exists isolated nodes\r\n* Fixed [`torch_geometric.utils.coalesce`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.coalesce) with CUDA tensors", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/52053822/reactions", "total_count": 19, "+1": 9, "-1": 0, "laugh": 0, "hooray": 7, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "mentions_count": 17}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/49653095", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/49653095/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/49653095/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/2.0.1", "id": 49653095, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBlHMec4C9aVn", "tag_name": "2.0.1", "target_commitish": "master", "name": "2.0.1", "draft": false, "prerelease": false, "created_at": "2021-09-16T06:34:43Z", "published_at": "2021-09-16T07:22:57Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/2.0.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/2.0.1", "body": "# PyG 2.0.1\r\n\r\nThis is a minor release, bringing some emergency fixes to PyG 2.0.\r\n\r\n## Bugfixes\r\n\r\n* Fixed a bug in [`loader.DataLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.DataLoader) that raised a `PicklingError` for `num_workers > 0` (thanks to @r-echeveste, @arglog and @RishabhPandit-00)\r\n* Fixed a bug in the creation of [`data.Batch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch) objects in case customized [`data.Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) objects expect non-default arguments (thanks to @Emiyalzn)\r\n* Fixed a bug in which `SparseTensor` attributes could not be batched along single dimensions (thanks to @rubenwiersma)", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/49653095/reactions", "total_count": 18, "+1": 0, "-1": 0, "laugh": 0, "hooray": 18, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "mentions_count": 5}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/49435574", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/49435574/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/49435574/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/2.0.0", "id": 49435574, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBlHMec4C8lO2", "tag_name": "2.0.0", "target_commitish": "master", "name": "2.0.0", "draft": false, "prerelease": false, "created_at": "2021-09-13T07:00:32Z", "published_at": "2021-09-13T07:48:54Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/2.0.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/2.0.0", "body": "# PyG 2.0 :tada: :tada: :tada:\r\n\r\n**PyG** *(PyTorch Geometric)* has been moved from my own personal account [`rusty1s`](https://github.com/rusty1s) to its own organization account [`pyg-team`](https://github.com/pyg-team) to emphasize the ongoing collaboration between TU Dortmund University, Stanford University and many great external contributors. With this, we are releasing **PyG 2.0**, a new major release that brings sophisticated [**heterogeneous graph support**](#heterogeneous-graph-support), [**GraphGym integration**](#managing-experiments-with-graphgym) and [**many other exciting features**](#additional-features) to PyG.\r\n\r\n<p align=\"center\">\r\n  <img height=\"150\" src=\"https://raw.githubusercontent.com/pyg-team/pytorch_geometric/master/docs/source/_static/img/pyg1.svg?sanitize=true\" />\r\n</p>\r\n\r\nIf you encounter any bugs in this new release, please do not hesitate to [create an issue](https://github.com/pyg-team/pytorch_geometric/issues/new/choose).\r\n\r\n## Heterogeneous Graph Support\r\n\r\nWe finally provide full **heterogeneous graph support** in PyG 2.0. See [here](https://pytorch-geometric.readthedocs.io/en/latest/notes/heterogeneous.html) for the accompanying tutorial.\r\n\r\n### Highlights\r\n\r\n* **Heterogeneous Graph Storage:** Heterogeneous graphs can now be stored in their own dedicated [**`data.HeteroData`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) class (thanks to @yaoyaowd):\r\n  ```python\r\n  from torch_geometric.data import HeteroData\r\n  \r\n  data = HeteroData()\r\n\r\n  # Create two node types \"paper\" and \"author\" holding a single feature matrix:\r\n  data['paper'].x = torch.randn(num_papers, num_paper_features)\r\n  data['author'].x = torch.randn(num_authors, num_authors_features)\r\n\r\n  # Create an edge type (\"paper\", \"written_by\", \"author\") holding its graph connectivity:\r\n  data['paper', 'written_by', 'author'].edge_index = ...  # [2, num_edges]\r\n  ```\r\n  \r\n  [`data.HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) behaves similar to a regular homgeneous [`data.Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) object:\r\n  \r\n  ```python\r\n  print(data['paper'].num_nodes)\r\n  print(data['paper', 'written_by', 'author'].num_edges)\r\n  data = data.to('cuda')\r\n  ```\r\n  \r\n* **Heterogeneous Mini-Batch Loading:** Heterogeneous graphs can be converted to mini-batches for many small and single giant graphs via the [`loader.DataLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.DataLoader) and [`loader.NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) loaders, respectively. These loaders can now handle both homogeneous and heterogeneous graphs:\r\n  ```python\r\n  from torch_geometric.loader import DataLoader\r\n\r\n  loader = DataLoader(heterogeneous_graph_dataset, batch_size=32, shuffle=True)\r\n\r\n  from torch_geometric.loader import NeighborLoader\r\n\r\n  loader = NeighborLoader(heterogeneous_graph, num_neighbors=[30, 30], batch_size=128,\r\n                          input_nodes=('paper', data['paper'].train_mask), shuffle=True)\r\n  ```\r\n\r\n* **Heterogeneous Graph Neural Networks:** Heterogeneous GNNs can now easily be created from homogeneous ones via [`nn.to_hetero`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_transformer.to_hetero) and [`nn.to_hetero_with_bases`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.to_hetero_with_bases_transformer.to_hetero_with_bases). These processes take an existing GNN model and duplicate their message functions to account for different node and edge types:\r\n  ```python\r\n  from torch_geometric.nn import SAGEConv, to_hetero\r\n\r\n  class GNN(torch.nn.Module):\r\n      def __init__(hidden_channels, out_channels):\r\n          super().__init__()\r\n          self.conv1 = SAGEConv((-1, -1), hidden_channels)\r\n          self.conv2 = SAGEConv((-1, -1), out_channels)\r\n\r\n      def forward(self, x, edge_index):\r\n          x = self.conv1(x, edge_index).relu()\r\n          x = self.conv2(x, edge_index)\r\n          return x\r\n\r\n  model = GNN(hidden_channels=64, out_channels=dataset.num_classes)\r\n  model = to_hetero(model, data.metadata(), aggr='sum')\r\n  ```\r\n  \r\n  <p align=\"center\">\r\n    <img height=\"400px\" src=\"https://raw.githubusercontent.com/pyg-team/pytorch_geometric/master/docs/source/_figures/to_hetero.svg?sanitize=true\" />\r\n  </p>\r\n  \r\n### Additional Features\r\n\r\n* A [heterogeneous graph tutorial](https://pytorch-geometric.readthedocs.io/en/latest/notes/heterogeneous.html) describing all newly released features (thanks to @mrjel)\r\n* A variety of [heterogeneous GNN examples](https://github.com/pyg-team/pytorch_geometric/tree/master/examples/hetero)\r\n* Support for lazy initialization of GNN operators by passing `-1` to the `in_channels` argument (implemented via [`nn.dense.Linear`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.dense.Linear)).\r\n  This allows to avoid calculating and keeping track of input tensor sizes, simplyfing the creation of heterogeneous graph models with varying feature dimensionalities across different node and edge types. Lazy initialization is supported for all existing PyG operators (thanks to @yaoyaowd):\r\n  ```python\r\n  from torch_geometric.nn import GATConv\r\n  \r\n  conv = GATConv(-1, 64)\r\n  \r\n  # We can initialize the model\u2019s parameters by calling it once:\r\n  conv(x, edge_index)\r\n  ```\r\n* [`nn.conv.HeteroConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HeteroConv): A generic wrapper for computing graph convolution on heterogeneous graphs (thanks to @RexYing)\r\n* [`nn.conv.HGTConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HGTConv): The heterogeneous graph transformer operator from the [\"Heterogeneous Graph Transformer\"](https://arxiv.org/abs/2003.01332) paper\r\n* [`loader.HGTLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.HGTLoader): The heterogeneous graph sampler from the [\"Heterogeneous Graph Transformer\"](https://arxiv.org/abs/2003.01332) paper for learning on large-scale heterogeneous graphs (thanks to @chantat)\r\n* Support for heterogeneous graph transformations in [`transforms.AddSelfLoops`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.AddSelfLoops), [`transforms.ToSparseTensor`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.ToSparseTensor), [`transforms.NormalizeFeatures`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.NormalizeFeatures) and [`transforms.ToUndirected`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.ToUndirected)\r\n* New heterogeneous graph datasets: [`datasets.OGB_MAG`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.OGB_MAG), [`datasets.IMDB`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.IMDB), [`datasets.DBLP`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.DBLP) and [`datasets.LastFM`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.LastFM)\r\n* Support for converting heterogeneous graphs to \"typed\" homogeneous ones via [`data.HeteroData.to_homogeneous`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData.to_homogeneous) (thanks to @yzhao062)\r\n* A [tutorial](https://pytorch-geometric.readthedocs.io/en/latest/notes/load_csv.html) on creating a [`data.HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) object from raw `*.csv` files (thanks to @yaoyaowd and @mrjel)\r\n* An [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/pytorch_lightning/relational_gnn.py) to scale heterogeneous graph models via [PyTorch Lightning](https://www.pytorchlightning.ai/)\r\n\r\n## Managing Experiments with GraphGym\r\n\r\n**GraphGym** is now officially supported in PyG 2.0 via [`torch_geometric.graphgym`](https://pytorch-geometric.readthedocs.io/en/latest/modules/graphgym.html). See [here](https://pytorch-geometric.readthedocs.io/en/latest/notes/graphgym.html) for the accompanying tutorial. Overall, GraphGym is a platform for designing and evaluating Graph Neural Networks from configuration files via a highly modularized pipeline (thanks to @JiaxuanYou):\r\n\r\n1. GraphGym is the perfect place to start learning about *standardized GNN implementation and evaluation*\r\n2. GraphGym provides a *simple interface to try out thousands of GNN architectures in parallel* to find the best design for your specific task\r\n3. GraphGym lets you easily do *hyper-parameter search* and *visualize what design choices are better*\r\n\r\n<img width=100% src=\"https://raw.githubusercontent.com/pyg-team/pytorch_geometric/master/docs/source/_figures/graphgym_results.png\" />\r\n\r\n## Breaking Changes\r\n\r\n* The [`datasets.AMiner`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.AMiner) dataset now returns a [`data.HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) object. See [here](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/hetero/metapath2vec.py) for our updated `MetaPath2Vec` example on `AMiner`.\r\n* `transforms.AddTrainValTestMask` has been replaced in favour of [`transforms.RandomNodeSplit`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomNodeSplit)\r\n* Since the storage layout of [`data.Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) significantly changed in order to support heterogenous graphs, already processed datasets need to be re-processed by deleting the `root/processed` folder.\r\n* [`data.Data.__cat_dim__`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.__cat_dim__) and [`data.Data.__inc__`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.__inc__) now expect additional input arguments:\r\n  ```python\r\n  def __cat_dim__(self, key, value, *args, **kwargs):\r\n      pass\r\n    \r\n  def __inc__(self, key, value, *args, **kwargs):\r\n      pass\r\n  ```\r\n  In case you modified [`__cat_dim__`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.__cat_dim__) or [`__inc__`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.__inc__) functionality in a customized [`data.Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) object, please ensure to apply the above changes.\r\n  \r\n## Deprecations\r\n\r\n* [`nn.conv.PointConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PointConv) is deprecated in favour of [`nn.conv.PointNetConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PointNetConv) (thanks to @lelouedec and @QuanticDisaster)\r\n* [`utils.train_test_split_edges`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.train_test_split_edges) is deprecated in favour of the new [`transforms.RandomLinkSplit`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomLinkSplit) transform\r\n* All data loaders were moved from `torch_geometric.data` to `torch_geometric.loader`, *e.g.*:\r\n  ```python\r\n  from torch_geometric.loader import DataLoader\r\n  ```\r\n* [`loader.NeighborSampler`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborSampler) is deprecated in favour of [`loader.NeighborLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/loader.html#torch_geometric.loader.NeighborLoader) in order to simplify the application of neighbor sampling and to support both neighbor sampling in homogeneous and heterogeneous graphs\r\n* `Data.contains_isolated_nodes` and `Data.contains_self_loops` are deprecated in favour of [`Data.has_isolated_nodes`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.has_isolated_nodes) and [`Data.has_self_loops`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.has_self_loops), respectively\r\n\r\n## Additional Features\r\n\r\n* [`torch-scatter`](https://github.com/rusty1s/pytorch_scatter) and [`torch-sparse`](https://github.com/rusty1s/pytorch_sparse) now support half-precision computation via `torch.half`, bringing half-precision support to PyG\r\n* Added a [GNN cheatsheet](https://pytorch-geometric.readthedocs.io/en/latest/notes/cheatsheet.html) to the documentation, which lets you more easily choose a GNN operator for your specific need\r\n* Added the [`transforms.RandomLinkSplit`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RandomLinkSplit) transform to easily perform a random edge-level split (thanks to @RexYing)\r\n* Added the [`torch_geometric.profile`](https://pytorch-geometric.readthedocs.io/en/latest/modules/profile.html) package which provides a variety of utility functions for benchmarking runtimes and memory consumptions of GNN models (thanks to @yzhao062)\r\n* [`nn.conv.MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing) now supports hooks for `propagate`, `message`, `aggregate` and `update` functions, *e.g.* via [`nn.conv.MessagePassing.register_propagate_forward_hook`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing.register_propagate_forward_pre_hook)\r\n* Added the [`nn.conv.GeneralConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GeneralConv) operator that can handle most GNN use-cases (*e.g.*, w/ or w/o edge features, ...) and has enough design options to be tuned (*e.g.*, attention, skip-connections, ...) (thanks to @JiaxuanYou)\r\n* Added the [`nn.models.RECT_L`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.RECT_L) model for learning with completely-imbalanced labels (thanks to @Fizyhsp)\r\n* Added the Pathfinder Discovery Network Convolutional operator [`nn.conv.PDNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PDNConv) (thanks to @benedekrozemberczki)\r\n* Added basic GNN model support as part of the `nn.models` package, *e.g.*, [`nn.model.GCN`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GCN), [`nn.models.GraphSAGE`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GraphSAGE), [`nn.models.GAT`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GAT) and [`nn.models.GIN`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GIN). Pre-defined models support customizing hidden feature dimensionality, number of layers, activation, normalization and jumping knowledge (thanks to @PabloAMC)\r\n* Added the [`datasets.MD17`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.MD17) datasets (thanks to @M-R-Schaefer)\r\n* Added a link-prediction [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/rgcn_link_pred.py) of [`nn.conv.RGCNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.RGCNConv)  (thanks to @moritzblum)\r\n* Added an [example](https://github.com/pyg-team/pytorch_geometric/blob/master/examples/mem_pool.py) of [`nn.pool.MemPooling`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.pool.MemPooling) (thanks to @wsad1)\r\n* Added a `return_attention_weights` argument for [`nn.conv.TransformerConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.TransformerConv) (thanks to @wsad1)\r\n* Batch support for [`utils.homophily`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.homophily) (thanks to @wsad1)\r\n* Added a `batch_size` argument to [`utils.to_dense_batch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.to_dense_batch) (thanks to @jimmiebtlr)\r\n\r\n## Minor Changes\r\n\r\n* Heavily improved loading times of `import torch_geometric`\r\n* [`nn.Sequential`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.sequential.Sequential) is now fully jittable\r\n* [`nn.conv.LEConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.LEConv) is now fully jittable (thanks to @lucagrementieri)\r\n* [`nn.conv.GENConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GENConv) can now make use of `\"add\"`, `\"mean\"` or `\"max\"` aggregations (thanks to @riskiem)\r\n* Attributes of type `torch.nn.utils.rnn.PackedSequence` are now correctly handled by [`data.Data`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.HeteroData) and [`data.HeteroData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data) (thanks to @WuliangHuang)\r\n* Added support for [`data.record_stream()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.record_stream) in order to allow for data prefetching (thanks to @FarzanT)\r\n* Added a `max_num_neighbors` attribute to [`nn.models.SchNet`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.SchNet) and [`nn.models.DimeNet`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.DimeNet) (thanks to @nec4)\r\n* [`nn.conv.MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing) is now jittable in case `message`, `aggregate` and `update` return multiple arguments (thanks to @PhilippThoelke)\r\n* [`utils.from_networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.from_networkx) now supports grouping of node-level and edge-level features (thanks to @PabloAMC)\r\n* Transforms now inherit from `transforms.BaseTransform` to ease type checking (thanks to @CCInc)\r\n* Added support for the deletion of data attributes via `del data[key]` (thanks to @Linux-cpp-lisp)\r\n\r\n## Bugfixes\r\n\r\n* The [`transforms.LinearTransformation`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.LinearTransformation) transform now correctly transposes the input matrix before applying the transformation (thanks to @beneisner)\r\n* Fixed a bug in [`benchmark/kernel`](https://github.com/pyg-team/pytorch_geometric/tree/master/benchmark/kernel) that prevented the application of `DiffPool` on the `IMDB-BINARY` dataset (thanks to @dongZheX)\r\n* Feature dimensionalities of [`datasets.WikipediaNetwork`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WikipediaNetwork) do now match which the official reported ones in case `geom_gcn_preprocess=True` (thanks to @ZhuYun97 and @GitEventhandler)\r\n* Fixed a bug in the [`datasets.DynamicFAUST`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.DynamicFAUST) dataset in which `data.num_nodes` was undefined (thanks to @koustav123)\r\n* Fixed a bug in which [`nn.models.GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer) could not handle GNN operators that add self-loops to the graph in case self-loops were already present (thanks to @tw200464tw and @NithyaBhasker)\r\n* [`nn.norm.LayerNorm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.LayerNorm) may no longer produce NaN gradients (thanks to @fbragman)\r\n* Fixed a bug in which it was not possible to customize `networkx` drawing arguments in [`nn.models.GNNExplainer.visualize_subgraph()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer.visualize_subgraph) (thanks to @jvansan)\r\n* [`transforms.RemoveIsolatedNodes`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.RemoveIsolatedNodes) now correctly removes isolated nodes in case `data.num_nodes` is explicitely set (thanks to @blakechi)", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/49435574/reactions", "total_count": 161, "+1": 72, "-1": 0, "laugh": 6, "hooray": 36, "confused": 0, "heart": 21, "rocket": 20, "eyes": 6}, "mentions_count": 33}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/45271128", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/45271128/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/45271128/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.7.2", "id": 45271128, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ1MjcxMTI4", "tag_name": "1.7.2", "target_commitish": "master", "name": "1.7.2", "draft": false, "prerelease": false, "created_at": "2021-06-26T08:25:09Z", "published_at": "2021-06-26T08:50:08Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.7.2", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.7.2", "body": "## Datasets\r\n\r\n* The [`GitHub`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.GitHub) Web and ML developer dataset (thanks to @benedekrozemberczki)\r\n* The [`FacebookPagePage`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.FacebookPagePage) dataset (thanks to @benedekrozemberczki)\r\n* The [`Twitch`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Twitch) gamer datasets (thanks to @benedekrozemberczki)\r\n* The [`DeezerEurope`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.DeezerEurope) dataset (thanks to @benedekrozemberczki)\r\n* The [`GemsecDeezer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.GemsecDeezer) dataset (thanks to @benedekrozemberczki)\r\n* The [`LastFMAsia`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.LastFMAsia) dataset (thanks to @benedekrozemberczki)\r\n* The [`WikipediaNetwork`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WikipediaNetwork) datasets does now allow usage of the raw dataset as introduced in [Multi-scale Attributed Node Embedding](https://arxiv.org/abs/1909.13021) (thanks to @benedekrozemberczki)\r\n\r\n## Bugfixes\r\n\r\n* Fixed an error in [`DeepGCNLayer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html?#torch_geometric.nn.models.DeepGCNLayer) in case no normalization layer is provided (thanks to @lukasfolle)\r\n* Fixed a bug in [`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html?#torch_geometric.nn.models.GNNExplainer) which mixed the loss computation for graph-level and node-level predictions (thanks to @panisson and @wsad1)", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/45271128/reactions", "total_count": 138, "+1": 89, "-1": 0, "laugh": 2, "hooray": 21, "confused": 0, "heart": 15, "rocket": 11, "eyes": 0}}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/44778127", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/44778127/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/44778127/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.7.1", "id": 44778127, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ0Nzc4MTI3", "tag_name": "1.7.1", "target_commitish": "master", "name": "1.7.1", "draft": false, "prerelease": false, "created_at": "2021-06-17T07:40:29Z", "published_at": "2021-06-17T08:19:28Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.7.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.7.1", "body": "A minor release that brings **PyTorch 1.9.0** and **Python 3.9** support to PyTorch Geometric. In case you are in the process of updating to PyTorch 1.9.0, please re-install the external dependencies for PyTorch 1.9.0 as well (`torch-scatter` and `torch-sparse`).\r\n\r\n## Features\r\n\r\n* **[`EGConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.EGConv)** (thanks to @shyam196)\r\n* **[`GATv2Conv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATv2Conv)** (thanks to @shakedbr)\r\n* **[`GraphNorm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.GraphNorm)** normalization layer\r\n* **[`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer)** now supports explaining graph-level predictions (thanks to @wsad1)\r\n* **[`bro`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.functional.bro)** and **[`gini`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.functional.gini)** regularization (thanks to @rhsimplex)\r\n* [`train_test_split_edges()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.train_test_split_edges) and [`to_undirected()`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.to_undirected) can now edge features (thanks to @saiden89 and @SherylHYX)\r\n* Datasets can now be accessed with `np.ndarray` as well (thanks to @josephenguehard)\r\n* [`dense_to_sparse`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.dense_to_sparse) can now handle batched adjacency matrices\r\n* `numba` is now an optional dependency\r\n\r\n## Datasets\r\n\r\n* The tree-structured fake news propagation **[`UPFD`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.UPFD)** dataset (thanks to @YingtongDou)\r\n* The large-scale [`AmazonProducts`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.AmazonProducts) graph from the [GraphSAINT](https://arxiv.org/abs/1907.04931) paper\r\n* Added support for two more datasets in the [`SNAPDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.SNAPDataset) benchmark suite (thanks to @SherylHYX)\r\n\r\n## Issues\r\n\r\n* Fixed an issue in which [`SuperGATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.SuperGATConv) used all positive edges for computing the auxiliary loss (thanks to @anniekmyatt)\r\n* Fixed a bug in which [`MemPooling`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.pool.MemPooling) produced NaN gradients (thanks to @wsad1)\r\n* Fixed an issue in which the `schnetpack` package was required for training [`SchNet`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.SchNet) (thanks to @mshuaibii)\r\n* Modfied [`XConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.XConv) to sample without replacement in case `dilation > 1` (thanks to @mayur-ag)\r\n* [`GraphSAINTSampler`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.GraphSAINTSampler) can now be used in combination with PyTorch Lightning\r\n* Fixed a bug in [`HypergraphConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.HypergraphConv) in case `num_nodes > num_edges` (thanks to @THinnerichs)", "reactions": {"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/44778127/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/41169533", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/41169533/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/41169533/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.7.0", "id": 41169533, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQxMTY5NTMz", "tag_name": "1.7.0", "target_commitish": "master", "name": "1.7.0", "draft": false, "prerelease": false, "created_at": "2021-04-09T07:47:10Z", "published_at": "2021-04-09T08:44:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.7.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.7.0", "body": "## Major Features\r\n\r\n* **[Temporal Graph Network](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.TGNMemory)** and an [example utilizing graph attention](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/tgn.py),  (thanks to @emalgorithm)\r\n* **[CorrectAndSmooth](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.CorrectAndSmooth)** and an [example on `ogbn-products`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/correct_and_smooth.py)\r\n* **PyTorch Lightning support**, see [here](https://github.com/rusty1s/pytorch_geometric/tree/master/examples/pytorch_lightning) for the accompanying examples (thanks to @tchaton)\r\n* **[`Sequential`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.sequential.Sequential)** API, see [here](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.sequential.Sequential) for the accompanying example\r\n* **[FiLMConv](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.FiLMConv)** and an [example on `PPI`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/film.py) (thanks to @ldv1)\r\n* **[SuperGAT](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.SuperGATConv)** and an [example on `Cora`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/super_gat.py) (thanks to @dongkwan-kim)\r\n* **[MemPooling](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.pool.MemPooling)** (thanks to @wsad1)\r\n* **[PANConv](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PANConv)** (thanks to @YuGuangWang)\r\n* **[DiffGroupNorm](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.DiffGroupNorm)** (thanks to @wsad1)\r\n* **[ResGatedGraphConv](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.ResGatedGraphConv)** (thanks to @ldv1)\r\n* **[FAConv](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.FAConv)** (thanks to @wsad1)\r\n* **[AttentiveFP](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.AttentiveFP)** model for molecular graph learning and an [example on `ESOL`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/attentive_fp.py) (thanks to @thegodone)\r\n* **[`Shadow` k-hop Sampler](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.ShaDowKHopSampler)** (currently requires `torch-sparse` from master)\r\n\r\n## Additional Features\r\n\r\n* **[Inductive Deep Graph Infomax example](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/infomax_inductive.py)** (thanks to @harrygcoppock)\r\n* **[WLConv](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.WLConv)** and an example of the [Weisfeiler-Lehman subtree kernel](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/wl_kernel.py) (thanks to @chrsmrrs)\r\n* **[LabelPropagation](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.LabelPropagation)**\r\n* [`AddTrainValTestMask`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.AddTrainValTestMask) transform for creating various splitting strategies (thanks to @dongkwan-kim)\r\n* [`homophily`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.homophily) measurement (thanks to @ldv1)\r\n* [`to_cugraph`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.to_cugraph) conversion\r\n\r\n## Minor Changes\r\n\r\n* More memory-efficient implementation of [`GCN2Conv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GCN2Conv)\r\n* Improved [`TransformerConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.TransformerConv) with the `beta` argument being input and message dependent (thanks to @ldv1)\r\n* [`NeighborSampler`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.NeighborSampler) now works with `SparseTensor` and supports an additional `transform` argument\r\n* [`Batch.from_data_list`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Batch.from_data_list) now supports batching along a new dimension via returning `None` in [`Data.__cat_dim__`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.Data.__cat_dim__), see [here](https://pytorch-geometric.readthedocs.io/en/latest/notes/batching.html#batching-along-new-dimensions) for the accompanying tutorial (thanks to @Linux-cpp-lisp)\r\n* [`MetaLayer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.meta.MetaLayer) is now \"jittable\"\r\n* Lazy loading of `torch_geometric.nn` and `torch_geometric.datasets`, leading to faster imports (thanks to @Linux-cpp-lisp)\r\n* [`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer) now supports various output formats of the underlying GNN model (thanks to @wsad1)\r\n\r\n## Datasets\r\n\r\n* [`JODIE` datasets](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.JODIEDataset) for temporal graph learning\r\n* [`WordNet18RR`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WordNet18RR) (thanks to @minhtriet)\r\n* [`Reddit2`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Reddit2)\r\n* [`MixHopSyntheticDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.MixHopSyntheticDataset) (thanks to @ldv1)\r\n* [`NELL`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.NELL)\r\n\r\n## Bugfixes\r\n\r\n* Fixed `SparseAdam` usage in [`examples/metapath2vec.py`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/metapath2vec.py#L31) (thanks to @declanmillar)\r\n* Fixed [`from_networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.from_networkx) to support empty edge lists (thanks to @shakedbr)\r\n* Fixed a numerical issue in `softmax`\r\n* Fixed an issue in [`DenseGraphConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.dense.DenseGraphConv) with `aggr=\"max\"` (thanks to @quqixun)\r\n* Fixed the norm computation in [GraphSAINTSampler](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.GraphSAINTSampler) (thanks to @austintwang)\r\n* [`Cartesian`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.Cartesian) and [`LocalCartesian`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.LocalCartesian) now compute Cartesian coordinates from target to source nodes (thanks to @ldv1)\r\n"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/34696414", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/34696414/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/34696414/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.6.3", "id": 34696414, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0Njk2NDE0", "tag_name": "1.6.3", "target_commitish": "master", "name": "1.6.3", "draft": false, "prerelease": false, "created_at": "2020-12-02T14:53:23Z", "published_at": "2020-12-02T14:57:09Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.6.3", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.6.3", "body": "* Fixed a crucial bug in which `InMemoryDataset`s with the usage of `pre_transform` led to an error\r\n* New datasets: [`WikipediaNetwork`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WikipediaNetwork) and [`Actor`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Actor)\r\n* Added homophily ratio utility function: [`torch_geometric.utils.homophily_ratio`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.homophily_ratio)"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/34491739", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/34491739/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/34491739/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.6.2", "id": 34491739, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0NDkxNzM5", "tag_name": "1.6.2", "target_commitish": "master", "name": "1.6.2", "draft": false, "prerelease": false, "created_at": "2020-11-27T06:54:10Z", "published_at": "2020-11-27T07:18:21Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.6.2", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.6.2", "body": "## Features\r\n\r\n* [**`GCN2Conv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GCN2Conv) [[Cora example](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/gcn2_cora.py), [PPI example](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/gcn2_ppi.py)]\r\n* [**`TransformerConv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.TransformerConv)\r\n* New Dataset: [**`WebKB`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WebKB)\r\n* New Google Colab: [**Explaining GNN Model Predictions using Captum**](https://pytorch-geometric.readthedocs.io/en/latest/notes/colabs.html) (thanks to @m30m)\r\n* **Distributed training examples** for [node classification](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/multi_gpu/distributed_sampling.py) and [graph classification](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/multi_gpu/distributed_sampling.py) (thanks to @maqy1995)\r\n* **`Node2Vec`** can now handle *different* `p` and `q` values other than `1` (`torch-cluster` update required)\r\n* [**`GraphSAGE`** *unsupervised* training example](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/graph_sage_unsup.py) (thanks to @yuanx749)\r\n* [**Linear `GAE`** example](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/autoencoder.py#L12) (thanks to @GuillaumeSalha)\r\n\r\n## Minor improvements\r\n\r\n* The [`SIGN` example](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/sign.py) now operates on mini-batches of nodes\r\n* Improved data loading runtime of `InMemoryDataset`s\r\n* [`NeighborSampler`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.NeighborSampler) does now work with `SparseTensor` as input\r\n* [`ToUndirected`](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.ToUndirected) transform in order to convert directed graphs to undirected ones\r\n* [`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer) does now allow for customizable edge and node feature loss reduction\r\n* `aggr` can now passed to any GNN based on the `MessagePassing` interface (thanks to @m30m) \r\n* Runtime improvements in [`SEAL`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/seal_link_pred.py) (thanks to @muhanzhang)\r\n* Runtime improvements in `torch_geometric.utils.softmax` (thanks to @Book1996)\r\n* [`GAE.recon_loss`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GAE) now supports custom negative edge indices (thanks to @reshinthadithyan)\r\n* Faster `spmm` computation and `random_walk` sampling on CPU (`torch-sparse` and `torch-cluster` updates required)\r\n* [`DataParallel`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.data_parallel.DataParallel) does now support the `follow_batch` argument\r\n* Parallel approximate PPR computation in the [`GDC` transform](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.GDC) (thanks to @klicperajo)\r\n* Improved documentation by providing an autosummary of all subpackages (thanks to @m30m)\r\n* Improved documentation on how edge weights are handled in various GNNs (thanks to @m30m)\r\n\r\n## Bugfixes\r\n\r\n* Fixed a bug in `GATConv` when computing attention coefficients in bipartite graphs\r\n* Fixed a bug in `GraphSAINTSampler` that led to wrong edge feature sampling\r\n* Fixed the `DimeNet` pretraining link\r\n* Fixed a bug in processing `ego-twitter` and `ego-gplus` of the `SNAPDataset` collection\r\n* Fixed a number of broken dataset URLs (`ICEWS18`, `QM9`, `QM7b`, `MoleculeNet`, `Entities`, `PPI`, `Reddit`, `MNISTSuperpixels`, `ShapeNet`)\r\n* Fixed a bug in which `MessagePassing.jittable()` tried to write to a file without permission (thanks to @twoertwein)\r\n* `GCNConv` does not require `edge_weight` in case `normalize=False`\r\n* `Batch.num_graphs` will now report the correct amount of graphs in case of zero-sized graphs"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/29363271", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/29363271/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/29363271/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.6.1", "id": 29363271, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5MzYzMjcx", "tag_name": "1.6.1", "target_commitish": "master", "name": "1.6.1", "draft": false, "prerelease": false, "created_at": "2020-08-05T13:19:58Z", "published_at": "2020-08-05T13:22:26Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.6.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.6.1", "body": "This is a **minor release**, mostly focusing on **PyTorch 1.6.0 support**. All external wheels are now also available for PyTorch 1.6.0.\r\n\r\n## New Features\r\n\r\n* **[`WikiCS`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WikiCS)** dataset\r\n* **DeepGCN** via [`GENConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GENConv) and [`DeepGCNLayer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.DeepGCNLayer) (thanks to @lightaime)\r\n* **[`PairNorm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.PairNorm)** (thanks to @gupta-abhay)\r\n* **[`LayerNorm`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.norm.LayerNorm)** (thanks to @aluo-x)\r\n\r\n## Bugfixes\r\n\r\n* Fixed a bug which prevented [`GNNExplainer`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer) to work with [`GATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATConv)\r\n* Fixed the [`MessagePassing.jittable`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing.jittable) call when installing PyG via `pip`\r\n* Fixed a bug in `torch-sparse` where reduce functions with `dim=0` did not yield the correct result\r\n* Fixed a bug in `torch-sparse` which suppressed all warnings"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/28297934", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/28297934/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/28297934/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.6.0", "id": 28297934, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI4Mjk3OTM0", "tag_name": "1.6.0", "target_commitish": "master", "name": "1.6.0", "draft": false, "prerelease": false, "created_at": "2020-07-07T06:24:14Z", "published_at": "2020-07-07T06:27:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.6.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.6.0", "body": "**A new major release, introducing TorchScript support, memory-efficient aggregations, bipartite GNN modules, static graphs and much more!**\r\n\r\n## Major Features\r\n\r\n* **TorchScript support**, see [here](https://pytorch-geometric.readthedocs.io/en/latest/notes/jit.html) for the accompanying tutorial (thanks to @lgray and @liaopeiyuan)\r\n* **Memory-efficient aggregations** via `torch_sparse.SparseTensor`, see [here](https://pytorch-geometric.readthedocs.io/en/latest/notes/sparse_tensor.html) for the accompanying tutorial\r\n* Most GNN modules can now operate on **bipartite graphs** (and some of them can also operate on *different feature dimensionalities* for source and target nodes), useful for neighbor sampling or heterogeneous graphs:\r\n```python\r\nconv = SAGEConv(in_channels=(32, 64), out_channels=64)\r\nout = conv((x_src, x_dst), edge_index)\r\n```\r\n* **Static graph support**:\r\n```python\r\nconv = GCNConv(in_channels=32, out_channels=64)\r\n\r\nx = torch.randn(batch_size, num_nodes, in_channels)\r\nout = conv(x, edge_index)\r\nprint(out.size())\r\n>>> torch.Size([batch_size, num_nodes, out_channels])\r\n```\r\n\r\n## Additional Features\r\n\r\n* [**`PNAConv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.PNAConv) (thanks to @lukecavabarrett and @gcorso)\r\n* [**Pre-Trained `DimeNet`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.DimeNet) on QM9\r\n* [**SEAL**](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/seal_link_pred.py) link prediction example (thanks to @muhanzhang)\r\n* [**`ClusterGCNConv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.ClusterGCNConv)\r\n* [**Cluster-GCN PPI**](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/cluster_gcn_ppi.py) example (thanks to @CFF-Dream)\r\n* [**`WeightedEdgeSampler`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.GraphSAINTEdgeSampler) for GraphSAINT (thanks to @KiddoZhu)\r\n* Better `num_workers` support for [**`GraphSAINT`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.GraphSAINTSampler)\r\n* The automatic addition of self-loops can now be disabled via the **`add_self_loops`** argument, *e.g.*, for [GCNConv](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GCNConv)\r\n\r\n## Breaking Changes\r\n\r\n* **Memory-efficient [`RGCNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.RGCNConv)**: The old `RGCNConv` implementation has been moved to [`FastRGCNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.FastRGCNConv)\r\n\r\n## Complementary Frameworks\r\n\r\n* [**DeepSNAP**](https://github.com/snap-stanford/deepsnap): A PyTorch library that bridges between graph libraries such as NetworkX and PyTorch Geometric\r\n* [**PyTorch Geometric Temporal**](https://github.com/benedekrozemberczki/pytorch_geometric_temporal): A temporal GNN library built upon PyTorch Geometric\r\n\r\n## Datasets\r\n\r\n* [**`GNNBenchmarkDataset`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.GNNBenchmarkDataset) suite from the [Benchmarking Graph Neural Networks](https://arxiv.org/abs/2003.00982) paper\r\n* [**`WordNet18`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.WordNet18)\r\n\r\n## Bugfixes\r\n\r\n* Fixed a bug in the [`VGAE`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.VGAE) KL-loss computation (thanks to @GuillaumeSalha)"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/26849773", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/26849773/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/26849773/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.5.0", "id": 26849773, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2ODQ5Nzcz", "tag_name": "1.5.0", "target_commitish": "master", "name": "1.5.0", "draft": false, "prerelease": false, "created_at": "2020-05-25T05:02:23Z", "published_at": "2020-05-25T05:31:41Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.5.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.5.0", "body": "This release is a big one thanks to many wonderful contributors. You guys are awesome!\r\n\r\n## Breaking Changes and Highlights\r\n\r\n* [**`NeighborSampler`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.NeighborSampler) got completely revamped: it's now much faster, allows for parallel sampling, and allows to easily apply skip-connections or self-loops. See [`examples/reddit.py`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/reddit.py) or the newly introduced OGB examples ([`examples/ogbn_products_sage.py`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/ogbn_products_sage.py) and [`examples/ogbn_products_gat.py`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/ogbn_products_gat.py)). The latter also sets a new SOTA on the [OGB leaderboards](https://ogb.stanford.edu/docs/leader_nodeprop/) (reaching **0.7945 \u00b1 0.0059 test accuracy**)\r\n* [**`SAGEConv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.SAGEConv) now uses `concat=True` by default, and there is no option to disable it anymore\r\n* [**`Node2Vec`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.Node2Vec) got enhanced by a parallel sampling mechanism, and as a result, its API slightly changed\r\n* [**`MetaPath2Vec`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.MetaPath2Vec): The first model in PyG that is able to operate on heteregenous graphs\r\n* [**`GNNExplainer`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.GNNExplainer): Generating explanations for graph neural networks\r\n* [**`GraphSAINT`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.GraphSAINTSampler): A graph sampling based inductive learning method\r\n* [**`SchNet`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.SchNet) model for learning on molecular graphs, comes with **pre-trained weights** for each target of the [`QM9`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.QM9) dataset (thanks to @Nyuten)\r\n\r\n## Additional Features\r\n\r\n* [**`ASAPooling`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.pool.ASAPooling): Adaptive structure aware pooling for learning hierarchical graph representations (thanks to @ekagra-ranjan)\r\n* [**`ARGVA`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.ARGVA) node clustering example, see [`examples/argva_node_clustering.py`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/argva_node_clustering.py) (thanks to @gsoosk)\r\n* [**`MFConv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.MFConv): Molecular fingerprint graph convolution operator (thanks to @rhsimplex)\r\n* [**`GIN-E-Conv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GINEConv) that extends the [`GINConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GINConv) to also account for edge features\r\n* [**`DimeNet`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.models.DimeNet): Directional message passing for molecular graphs\r\n* [**`SIGN`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.SIGN): Scalable inception graph neural networks\r\n* [**`GravNetConv`**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GravNetConv) (thanks to @jkiesele)\r\n\r\n## Datasets\r\n\r\n* [`Yelp`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Yelp)\r\n* [`Flickr`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Flickr)\r\n* [`AMiner`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.AMiner) (first real heterogeneous graph)\r\n\r\n## Minor changes\r\n\r\n* [`GATConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.GATConv) can now return attention weights via the `return_attention_weights` argument (thanks to @douglasrizzo)\r\n* [`InMemoryDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.InMemoryDataset) now has a `copy` method that converts sliced datasets back into a contiguous memory layout\r\n* [`Planetoid`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.Planetoid) got enhanced by the ability to let users choose between different splitting methods (thanks to @dongkwan-kim)\r\n* [`k_hop_subgraph`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.k_hop_subgraph): Computes the `k`-hop subgraph around a subset of nodes\r\n* [`geodesic_distance`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.geodesic_distance): Geodesic distances can now be computed in parallel (thanks to @jannessm)\r\n* [`tree_decomposition`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.tree_decomposition): The tree decompostion algorithm for generating junction trees from molecules\r\n* [`SortPool`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.glob.global_sort_pool) benchmark script now uses 1-D convolutions after pooling, leading to better performance (thanks to @muhanzhang)\r\n\r\n## Bugfixes\r\n\r\n* Fixed a bug in [`write_off`](https://pytorch-geometric.readthedocs.io/en/latest/modules/io.html#torch_geometric.io.write_off)\r\n* Fixed a bug in the processing of the [`GEDDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.GEDDataset) dataset\r\n* [`to_networkx`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.to_networkx) conversion can now also properly handle non-tensor attributes\r\n* Fixed a bug in [`read_obj`](https://pytorch-geometric.readthedocs.io/en/latest/modules/io.html#torch_geometric.io.read_obj) (thanks to @mwussow)"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/24605964", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/24605964/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/24605964/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.4.3", "id": 24605964, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0NjA1OTY0", "tag_name": "1.4.3", "target_commitish": "master", "name": "1.4.3", "draft": false, "prerelease": false, "created_at": "2020-03-17T17:55:20Z", "published_at": "2020-03-17T18:05:42Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.4.3", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.4.3", "body": "## Features\r\n\r\n* [**Cluster-GCN**](https://arxiv.org/abs/1905.07953) via [`ClusterData`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.ClusterData) and [`ClusterLoader`](https://pytorch-geometric.readthedocs.io/en/latest/modules/data.html#torch_geometric.data.ClusterLoader) for operating on large-scale graphs, see [`examples/cluster_gcn.py`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/cluster_gcn.py) for an example on how to use\r\n* Added a tutorial about [advanced mini-batching scenarios](https://pytorch-geometric.readthedocs.io/en/latest/notes/batching.html)\r\n* Added a [`tensorboard`](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/tensorboard_logging.py) logging example\r\n\r\n## Datasets\r\n\r\n* [`CitationFull`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.CitationFull): The full citation network dataset suite\r\n* [`SNAPDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.SNAPDataset): A subset of graph datasets from the SNAP dataset collection\r\n* [`SuiteSparseMatrixCollection`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.SuiteSparseMatrixCollection)\r\n* [`TrackMLParticleTrackingDataset`](https://pytorch-geometric.readthedocs.io/en/latest/modules/datasets.html#torch_geometric.datasets.TrackMLParticleTrackingDataset)\r\n\r\n## Minor Changes\r\n\r\n* Added the `concat` argument to [`SAGEConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.SAGEConv)\r\n* Outsourced the [`train_test_split_edges`](https://pytorch-geometric.readthedocs.io/en/latest/modules/utils.html#torch_geometric.utils.train_test_split_edges) method of the graph autoencoder `GAE` class to `torch_geometric.utils`\r\n\r\n## Bugfixes\r\n\r\n* Fixed `SplineConv` compatibility with latest `torch-spline-conv` package\r\n* `trimesh` conversion utilities do not longer result in a permutation of the input data"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/23771049", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/23771049/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/23771049/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.4.2", "id": 23771049, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzNzcxMDQ5", "tag_name": "1.4.2", "target_commitish": "master", "name": "1.4.2", "draft": false, "prerelease": false, "created_at": "2020-02-18T15:18:01Z", "published_at": "2020-02-18T15:26:06Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.4.2", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.4.2", "body": "## Minor Changes\r\n\r\n* There are now Python wheels available for `torch-scatter` and `torch-sparse` which should make the installation procedure much more user-friendly. Simply run\r\n```\r\npip install torch-scatter==latest+${CUDA} torch-sparse==latest+${CUDA} -f https://pytorch-geometric.com/whl/torch-1.4.0.html\r\npip install torch-geometric\r\n```\r\nwhere `${CUDA}` should be replaced by either `cpu`, `cu92`, `cu100` or `cu101` depending on your PyTorch installation.\r\n* `torch-cluster` is now an optional dependency. All methods that rely on `torch-cluster` will result in an error requesting you to install `torch-cluster`.\r\n* `torch_geometric.data.Dataset` can now also be indexed and shuffled:\r\n```python\r\ndataset.shuffle()[:50]\r\n```\r\n## Bugfixes\r\n\r\n* Fixed a bug that prevented the user from saving `MessagePassing` modules.\r\n* Fixed a bug in `RGCNConv` when using `root_weight=False`."}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/23371117", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/23371117/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/23371117/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.4.1", "id": 23371117, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzMzcxMTE3", "tag_name": "1.4.1", "target_commitish": "master", "name": "1.4.1", "draft": false, "prerelease": false, "created_at": "2020-02-04T12:02:53Z", "published_at": "2020-02-04T11:57:21Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.4.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.4.1", "body": "This release mainly focuses on `torch-scatter=2.0` support. As a result, PyTorch Geometric now **requires PyTorch 1.4**. If you are in the process of updating to PyTorch 1.4, please ensure that you also re-install all related external packages.\r\n\r\n## Features\r\n\r\n* [**Graph Diffusion Convolution**](https://pytorch-geometric.readthedocs.io/en/latest/modules/transforms.html#torch_geometric.transforms.GDC)\r\n* [**MinCUT Pooling**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.dense.mincut_pool.dense_mincut_pool)\r\n* [**CGCNNConv**](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.CGConv)\r\n* `TUDataset` cleaned versions, containing only non-isomorphic graphs\r\n* `GridSampling` transform\r\n* `ShapeNet` dataset now comes with normals and better split options\r\n* TriMesh conversion utilities\r\n* `ToSLIC` transform for superpixel generation from images\r\n* Re-writing of `MessagePassing` interface with custom `aggregate` methods (no API changes)\r\n\r\n## Bugfixes\r\n\r\n* Fixed some failure modes of `from_networkx`."}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/20467243", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/20467243/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/20467243/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.3.2", "id": 20467243, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwNDY3MjQz", "tag_name": "1.3.2", "target_commitish": "master", "name": "1.3.2", "draft": false, "prerelease": false, "created_at": "2019-10-04T08:07:55Z", "published_at": "2019-10-04T08:18:31Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.3.2", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.3.2", "body": "This release focuses on Pytorch 1.2 support and removes all `torch.bool` deprecation warnings. As a result, this release now **requires PyTorch 1.2**. If you are in the process of updating to PyTorch 1.2, please ensure that you also re-install all related external packages.\r\n\r\nOverall, this release brings the following new features/bugfixes:\r\n\r\n## Features\r\n\r\n* Prints out a warning in case the `pre_transform` and `pre_filter` arguments differ from an already processed version\r\n\r\n## Bugfixes\r\n\r\n* Removed all `torch.bool` deprecation warnings\r\n* Fixed `ARGA` initialization bug\r\n* Fixed a pre-processing bug in `QM9`"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/19613998", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/19613998/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/19613998/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.3.1", "id": 19613998, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5NjEzOTk4", "tag_name": "1.3.1", "target_commitish": "master", "name": "1.3.1", "draft": false, "prerelease": false, "created_at": "2019-08-29T07:39:05Z", "published_at": "2019-08-29T07:41:53Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.3.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.3.1", "body": "This is a minor release which is mostly distributed for official PyTorch 1.2 support. In addition, it provides minor bugfixes and the following new features:\r\n\r\n## Modules\r\n\r\n* Non-normalized `ChebConv` in combination with a largest eigenvalue transform\r\n* `TAGCN`\r\n* Graph U-Net\r\n* `Node2Vec`\r\n* `EdgePooling`\r\n* Alternative `GMMConv` formulation with separate kernels\r\n* Alternative Top-K pooling formulation based on thresholds with examples on synthetic `COLORS` and `TRIANGLES` datasets\r\n\r\n## Datasets\r\n\r\n* Pascal VOC 2011 with Berkeley keypoint annotations (`PascalVOCKeypoints`)\r\n* `DBP15K` dataset\r\n* `WILLOWObjectClass` dataset\r\n\r\nPlease also update related external packages via, *e.g.*:\r\n```\r\n$ pip install --upgrade torch-cluster\r\n```\r\n"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/18310273", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/18310273/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/18310273/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.3.0", "id": 18310273, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE4MzEwMjcz", "tag_name": "1.3.0", "target_commitish": "master", "name": "1.3.0", "draft": false, "prerelease": false, "created_at": "2019-06-29T14:18:13Z", "published_at": "2019-06-29T14:25:42Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.3.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.3.0", "body": "* Support for giant graph handling using `NeighborSampler` and bipartite message passing operators\r\n* Debugging support using the new `debug` API\r\n* Fixed `TUDataset` download errors\r\n* Added `FeasStConv` module\r\n* Improved `networkx` conversion functionality\r\n* Improved `Data` and `DataLoader` handling with customizable `number_of_nodes` (*e.g.* for holding two graphs in a single `Data` object)\r\n* Added `GeniePath` example\r\n* Added `SAGPool` module\r\n* Added geodesic distance computation using `gdist` (optional)\r\n* Improved `PointNet` and `DGCNN` classification and segmentation examples\r\n* Added `subgraph` functionality\r\n* Fixed `GMMConv`\r\n* Added a bunch of new datasets\r\n* Added fast implementations for random graph generation\r\n* Improved `loop` API\r\n* Minor bugfixes\r\n\r\nThanks to all contributors!"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/17508233", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/17508233/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/17508233/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.2.1", "id": 17508233, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NTA4MjMz", "tag_name": "1.2.1", "target_commitish": "master", "name": "1.2.1", "draft": false, "prerelease": false, "created_at": "2019-05-22T07:58:54Z", "published_at": "2019-05-22T08:01:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.2.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.2.1", "body": "* More convenient self-loop API (including addition of edge weights)\r\n* Small bugfixes, *.e.g.*, DiffPool NaNs and empty edge indices treatment\r\n* New datasets have been added:\r\n  * `GEDDataset`\r\n  * `DynamicFAUST`\r\n  * `TOSCA`\r\n  * `SHREC2016`"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/17033078", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/17033078/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/17033078/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.2.0", "id": 17033078, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3MDMzMDc4", "tag_name": "1.2.0", "target_commitish": "master", "name": "1.2.0", "draft": false, "prerelease": false, "created_at": "2019-04-29T07:25:35Z", "published_at": "2019-04-29T07:29:13Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.2.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.2.0", "body": "* New models and operators, e.g., RENet, Signed Graph Convolution, Deep Graph Infomax, PPFNet, ...\r\n* Minor bugfixes\r\n* New converts\r\n\r\n"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/16572534", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/16572534/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/16572534/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.1.2", "id": 16572534, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NTcyNTM0", "tag_name": "1.1.2", "target_commitish": "master", "name": "1.1.2", "draft": false, "prerelease": false, "created_at": "2019-04-05T05:26:38Z", "published_at": "2019-04-05T05:28:39Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.1.2", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.1.2", "body": "* bugfixes for bipartite message passing API"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/16492693", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/16492693/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/16492693/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.1.1", "id": 16492693, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NDkyNjkz", "tag_name": "1.1.1", "target_commitish": "master", "name": "1.1.1", "draft": false, "prerelease": false, "created_at": "2019-04-02T05:28:34Z", "published_at": "2019-04-02T05:33:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.1.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.1.1", "body": "`PointConv` bugfix for bipartite graphs."}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/16467293", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/16467293/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/16467293/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.1.0", "id": 16467293, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NDY3Mjkz", "tag_name": "1.1.0", "target_commitish": "master", "name": "1.1.0", "draft": false, "prerelease": false, "created_at": "2019-04-01T06:41:32Z", "published_at": "2019-04-01T06:46:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.1.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.1.0", "body": "This release includes:\r\n\r\n* All Variants of Graph Autoencoders\r\n* Gated Graph Conv\r\n* `DataParallel` bugfixes\r\n* New transforms (Line Graph Transformation, Local Degree Profile, Sample Points with Normals)\r\n* PointNet++ example"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/15976912", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/15976912/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/15976912/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.0.3", "id": 15976912, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1OTc2OTEy", "tag_name": "1.0.3", "target_commitish": "master", "name": "1.0.3", "draft": false, "prerelease": false, "created_at": "2019-03-07T17:13:50Z", "published_at": "2019-03-07T17:14:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.0.3", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.0.3", "body": "* SGC and APPNP layer"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/15181895", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/15181895/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/15181895/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.0.2", "id": 15181895, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1MTgxODk1", "tag_name": "1.0.2", "target_commitish": "master", "name": "1.0.2", "draft": false, "prerelease": false, "created_at": "2019-01-25T13:32:07Z", "published_at": "2019-01-25T13:33:00Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.0.2", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.0.2", "body": "* Added `remove_faces` parameter for face transforms"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/14990623", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/14990623/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/14990623/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.0.1", "id": 14990623, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0OTkwNjIz", "tag_name": "1.0.1", "target_commitish": "master", "name": "1.0.1", "draft": false, "prerelease": false, "created_at": "2019-01-15T19:02:02Z", "published_at": "2019-01-15T19:03:23Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.0.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.0.1", "body": "* Finally completed documentation\r\n* Finally achieved 100% code coverage (every single line is tested)\r\n* Fixed a few minor bugs\r\n* Added the GlobalAttention layer from Li et al."}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/14591483", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/14591483/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/14591483/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/1.0.0", "id": 14591483, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NTkxNDgz", "tag_name": "1.0.0", "target_commitish": "master", "name": "1.0.0", "draft": false, "prerelease": false, "created_at": "2018-12-18T12:35:15Z", "published_at": "2018-12-18T12:45:06Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/1.0.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/1.0.0", "body": "We made a bunch of improvements to PyTorch Geometric and added various new convolution and pooling operators, e.g., top_k pooling, PointCNN, Iterative Farthest Point Sampling, PointNet++, ..."}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/13555241", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/13555241/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/13555241/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/0.3.1", "id": 13555241, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNTU1MjQx", "tag_name": "0.3.1", "target_commitish": "master", "name": "0.3.1", "draft": false, "prerelease": false, "created_at": "2018-10-20T03:58:11Z", "published_at": "2018-10-20T04:00:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/0.3.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/0.3.1", "body": "* minor bug fixes (e.g. calls to `torch-sparse` had wrong argument order)\r\n* new operators and examples (GINConv and Infomax example)\r\n* added helpful evaluation functions"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/12376630", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/12376630/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/12376630/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/0.3.0", "id": 12376630, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyMzc2NjMw", "tag_name": "0.3.0", "target_commitish": "master", "name": "0.3.0", "draft": false, "prerelease": false, "created_at": "2018-08-13T13:09:00Z", "published_at": "2018-08-13T13:16:56Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/0.3.0", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/0.3.0", "body": "PyTorch 0.4.1 compatibility"}
{"url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/11173568", "assets_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/releases/11173568/assets", "upload_url": "https://uploads.github.com/repos/pyg-team/pytorch_geometric/releases/11173568/assets{?name,label}", "html_url": "https://github.com/pyg-team/pytorch_geometric/releases/tag/0.1.1", "id": 11173568, "author": {"login": "rusty1s", "id": 6945922, "node_id": "MDQ6VXNlcjY5NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6945922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty1s", "html_url": "https://github.com/rusty1s", "followers_url": "https://api.github.com/users/rusty1s/followers", "following_url": "https://api.github.com/users/rusty1s/following{/other_user}", "gists_url": "https://api.github.com/users/rusty1s/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty1s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty1s/subscriptions", "organizations_url": "https://api.github.com/users/rusty1s/orgs", "repos_url": "https://api.github.com/users/rusty1s/repos", "events_url": "https://api.github.com/users/rusty1s/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty1s/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExMTczNTY4", "tag_name": "0.1.1", "target_commitish": "master", "name": "0.1.1", "draft": false, "prerelease": false, "created_at": "2018-05-25T08:32:36Z", "published_at": "2018-05-25T08:33:33Z", "assets": [], "tarball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/tarball/0.1.1", "zipball_url": "https://api.github.com/repos/pyg-team/pytorch_geometric/zipball/0.1.1", "body": ""}
