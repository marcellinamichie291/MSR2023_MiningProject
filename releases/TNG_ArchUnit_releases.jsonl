{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/78815237", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/78815237/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/78815237/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v1.0.0", "id": 78815237, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBU1z-s4EsqAF", "tag_name": "v1.0.0", "target_commitish": "main", "name": "ArchUnit 1.0.0", "draft": false, "prerelease": false, "created_at": "2022-10-03T17:22:21Z", "published_at": "2022-10-03T18:04:10Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v1.0.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v1.0.0", "body": ":warning: If you upgrade from the latest `0.x` version, please also refer to the release notes of [release candidate `1.0.0-rc1`](https://github.com/TNG/ArchUnit/releases/tag/v1.0.0-rc1) as these release notes refer to upgrading from the release candidate :warning: \r\n\r\n# Breaking Changes\r\n\r\n* Naming around `JavaPackage` subpackages and dependencies has been improved to remove ambiguities. In general, whenever all classes from a package and subpackages recursively are involved, this is now called \"package tree\". Otherwise, it only targets the classes directly within this package (see #919/#968; thanks a lot to @grimsa)\r\n  The following mapping shows how to translate the old methods to the current methods:\r\n  * `getAllClasses()` -> `getClassesInPackageTree()`\r\n  * `getAllSubpackages()` -> `getSubpackagesInTree()`\r\n  * `getClassDependenciesFromSelf()` -> `getClassDependenciesFromThisPackageTree()`\r\n  * `getClassDependenciesToSelf()` -> `getClassDependenciesToThisPackageTree()`\r\n  * `getPackageDependenciesFromSelf()` -> `getPackageDependenciesFromThisPackageTree()`\r\n  * `getPackageDependenciesToSelf()` -> `getPackageDependenciesToThisPackageTree()`\r\n  * `accept(..)` -> `traversePackageTree(..)`\r\n* Importing the default package via `ClassFileImporter.importPackages(\"\")` will now yields the same result as using `importClasspath()` without any `ImportOption` (see #954)\r\n* `ClassFileImporter.importClasspath()` now behaves consistently to other import APIs. I.e. no default `ImportOptions` like `DoNotIncludeArchives` are added anymore, instead all `ImportOptions` need to be added the same way as for all other import methods (see #958)\r\n* The custom collection `ImportOptions` has been removed from the public API and been replaced by a standard `Collection<ImportOption>` where appropriate (see #958)\r\n* The package `com.tngtech.archunit.library.plantuml` has been moved to `com.tngtech.archunit.library.plantuml.rules` to make room for adding other PlantUML related features (see #959)\r\n* SLF4J-API has been upgraded from `1.7.30` to `2.0.3`, so any log adapter dependency to be used with ArchUnit (e.g. to hook in Log4J) has to be compatible with SLF4J-API `2.x` from now on (see #966)\r\n\r\n# Bug Fixes\r\n\r\n* Fix bug where multiple synthetic access calls to methods like `access$123(..)` would lead to only one access being imported. Note, that these synthetic methods are added for calls to private fields / methods from inner classes to outer classes, etc. (see #957)\r\n\r\n# Enhancements\r\n\r\n## Lang\r\n\r\n* `archunit_ignore_patterns.txt` is now also respected by `FreezingArchRule`. Thus, ignored violations are not added to the `ViolationStore` anymore (see #915)\r\n\r\n## Library\r\n\r\n* `testClassesShouldResideInTheSamePackageAsImplementation(..)` now supports multiple test classes with same simple name (see #918; thanks a lot to @mslowiak)\r\n* `PlantUmlArchCondition` now does not throw exceptions anymore, if a class is in none or multiple components, but instead reports those as standard violations. This way these violations can also be frozen via `FreezingArchRule` instead of crashing the test (see #960) \r\n\r\n## Further Acknowledgement\r\n\r\n* Thanks a lot to @hankem for upgrading various dependencies, cleaning up code and extensive reviews", "reactions": {"url": "https://api.github.com/repos/TNG/ArchUnit/releases/78815237/reactions", "total_count": 27, "+1": 2, "-1": 0, "laugh": 0, "hooray": 18, "confused": 0, "heart": 2, "rocket": 5, "eyes": 0}, "mentions_count": 3}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/71883329", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/71883329/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/71883329/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v1.0.0-rc1", "id": 71883329, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBU1z-s4ESNpB", "tag_name": "v1.0.0-rc1", "target_commitish": "main", "name": "ArchUnit 1.0.0-rc1", "draft": false, "prerelease": false, "created_at": "2022-07-13T17:41:15Z", "published_at": "2022-07-13T18:11:57Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v1.0.0-rc1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v1.0.0-rc1", "body": "# Breaking Changes\r\n\r\n* All deprecated members and classes have been removed (see #909)\r\n* `@AnalyzeClasses()` without any explicit locations to import will now import the package of the annotated class by default instead of the whole classpath. To restore the old behavior use `@AnalyzeClasses(wholeClasspath = true)` (see #828)\r\n* The `archunit-junit5-engine-api` now resides within the package `com.tngtech.archunit.junit.engine_api` instead of directly under `junit`. This only affects users that want to programmatically interface with the `ArchUnitTestEngine` and should be irrelevant for most users (see #827)\r\n* ArchUnit now needs at least Java 8 to run (see #833)\r\n* The ArchUnit types `Function`, `Predicate` and `Optional` have been replaced by the JDK 8 equivalents\r\n* `DescribedPredicate` now extends the JDK 8 `Predicate`, so `apply(..)` has to be replaced by `test(..)`\r\n* `layeredArchitecture()` now forces to decide how to deal with dependencies by adding `.considering...Dependencies()` in the beginning of the declaration. To restore the old behavior declare it as `layeredArchitecture().consideringAllDependencies()` (see #892)\r\n* `ConditionEvents` is now an interface and the interface has been cleaned out of all non-essential methods, e.g. `getAllowed()`. This was done to increase maintainability and make it easier to optimize the internals. If you are missing any functionality now, please file an issue to discuss it (see #876)\r\n* `PackageMatcher` was moved from package `base` to `core.domain` (see #894)\r\n* Primitive classes now reside in package `java.lang` to be consistent with the Reflection API's `Class.getPackageName()` (see #905)\r\n* `PlantUmlArchCondition.Configurations` has been merged into `PlantUmlArchCondition.Configuration` (see #891)\r\n\r\n# Bug Fixes\r\n\r\n* While technically no real bug `PlantUmlArchCondition.Configuration` is now a public class instead of an interface, which solves a (non-fatal) Kotlin compiler warning complaining about the access rights (see #888)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* Accesses from inside of lambdas are now correctly detected. Before, the origin was set as a synthetic method like `lambda$xxx$123` instead. `JavaAccess` can now be queried for `isDeclaredInLambda()` to distinguish this from an access outside of a lambda (see #847; thanks a lot to @oberprah, @FrederikFinckh)\r\n* Support for Java 19 (see #845)\r\n* It is now possible to analyze try-catch-blocks, e.g. if a method call is wrapped into a try-catch-block catching a certain exception type (see #591; thanks a lot to @crizzis)\r\n* Package identifiers like `..myapp.service..` now support alternations via `..[service|legacy_service]..`. This also works for capturing groups like `(a|b)`. Note that alternation groups cannot be nested (see #662; thanks a lot to @Pfoerd)\r\n* `DescribedPredicate` now offers static factory methods `and(predicates)` and `or(predicates)` that join together varargs `DescribedPredicate<>...` or `Iterable<DescribedPredicate<>>` via AND or OR (see #805) \r\n* The importer now ignores synthetic `$SwitchMap$` fields of enums (see #570)\r\n* Private member accesses are now correctly reported between inner classes. Before, the origin was set as a synthetic method `access$123` (see #889)\r\n* `ImportOption.DoNotIncludeTests` now works for plain IntelliJ project layouts (see #696; thanks a lot to @JCook21)\r\n\r\n## Lang\r\n\r\n* New methods `codeUnits().should().onlyBeCalled().by{Classes/Methods/...}That(..)` (see #810; thanks a lot to @JKLedzion)\r\n* `ArchCondition` evaluation is now more efficient and has a smaller memory footprint (see #876)\r\n* The `ArchCondition` to search for transitive dependencies has been improved and now only reports relevant dependencies, in particular when checking for transitive dependencies between packages `a` and `b` (see #780; thanks a lot to @Pfoerd)\r\n* New APIs `ArchCondition.from(predicate)` and `ArchConditions.{be/have}(predicate)` to easily create `ArchConditions` from `DescribedPredicates` (see #855; thanks a lot to @u3r)\r\n* Javadoc of the rules API has been extended to better guide to predefined `DescribedPredicates` like `JavaClass.Predicates` or `HasName.Predicates` (see #912)\r\n* New convenience method `ConditionEvent.createMessage(..)` to easily create a standard ArchRule violation message like `Class <..> some description in (...java:123)` (see #826)\r\n\r\n## Library\r\n\r\n* `layeredArchitecture()` now allows to easily specify how to deal with dependencies from classes within the layers. E.g. should only dependencies that target other classes within the layers be considered? Or all dependencies in the root package of the application? This should solve common confusion about dependencies on classes like `java.lang.Object` being reported (see #887)\r\n* `onionArchitecture()` components can now not only be defined by package identifiers but also by predicates (see #894)\r\n* `layeredArchitecture()` and `onionArchitecture()` now support `ensureAllClassesAreContainedInArchitecture()` (see #278; thanks a lot to @roxspring)\r\n* New rule `GeneralCodingRules.testClassesShouldResideInTheSamePackageAsImplementation()` to check that test classes reside in the same package as their class under test (see #475; thanks a lot to @mslowiak)\r\n\r\n## JUnit\r\n\r\n* The `archunit-junit5` can now be used on the modulepath as well as the classpath (see #206)\r\n* JUnit 5 discovery speed is now notably faster in test projects with a lot of dependencies (see #546)\r\n* For JUnit 5 support `@ArchTest` is now also supported within abstract base classes (see #104; thanks a lot to @hankem)\r\n\r\n# Further Acknowledgement\r\n\r\n* thanks a lot to @marknp for migrating the code base to JDK 8 (see #833)\r\n* thanks a lot to @grimsa for improving the Javadoc on `JavaClass.Predicates` (see #814)\r\n* thanks a lot to @rweisleder for Javadoc improvements regarding annotation APIs (see #835)\r\n* thanks a lot for various reviews to @hankem, @spanierm42, @kaebiscs, @KorSin, @GandalfIX", "reactions": {"url": "https://api.github.com/repos/TNG/ArchUnit/releases/71883329/reactions", "total_count": 16, "+1": 1, "-1": 0, "laugh": 0, "hooray": 15, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "mentions_count": 17}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/60558110", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/60558110/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/60558110/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.23.1", "id": 60558110, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBU1z-s4DnAse", "tag_name": "v0.23.1", "target_commitish": "main", "name": "ArchUnit 0.23.1", "draft": false, "prerelease": false, "created_at": "2022-02-27T14:58:57Z", "published_at": "2022-02-27T15:34:07Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.23.1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.23.1", "body": "# Bug Fixes\r\n\r\n* Fix exception `Never found a JavaCodeUnit that matches supposed origin...` occurring with Kotlin inline functions where the descriptor of a method deviates from the signature (this was introduced by checking the return type of the method as well when looking for a call origin in #714; see #804, #807)\r\n* Fix optional layers of `LayeredArchitecture` failing with the new default behavior `archRule.failOnEmptyShould = true` (see #809; thanks a lot to @oberprah)\r\n\r\n# Enhancements\r\n\r\n* Log automatic resolution configuration on debug to reduce log clutter (see #802)\r\n* Add new Method `ArchRule.allowEmptyShould(boolean)` to override the configured `archRule.failOnEmptyShould` configuration on a per rule basis (see #803, #806, #808; thanks a lot to @oberprah)", "reactions": {"url": "https://api.github.com/repos/TNG/ArchUnit/releases/60558110/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 1, "eyes": 0}, "mentions_count": 1}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/59982329", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/59982329/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/59982329/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.23.0", "id": 59982329, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBU1z-s4Dk0H5", "tag_name": "v0.23.0", "target_commitish": "main", "name": "ArchUnit 0.23.0", "draft": false, "prerelease": false, "created_at": "2022-02-20T06:29:33Z", "published_at": "2022-02-20T07:05:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.23.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.23.0", "body": "# Breaking Changes\r\n\r\n* As mentioned in Enhancements/Core `ArchRules` will now by default reject evaluating if the set passed to the `should`-clause is empty. This will break existing rules that don't check any elements in their `should`-clause. You can restore the old behavior by setting the ArchUnit property `archRule.failOnEmptyShould=false`\r\n\r\n# Bug Fixes\r\n\r\n* Fix wrong origins of `JavaCall` in case of bridge methods. If a class had two methods with the exact same name and parameter types the `origin` of a `JavaCall` was picked randomly from them. It now always picks the non-synthetic method (see #513)\r\n* Fix non-deterministic return value of `JavaCodeUnit.getMethod()`. In case of bridge methods there might be more than one method matching the exact same name and parameters. In these cases the result of `getMethod()` was random. It now always picks the non-synthetic method (see #256)\r\n* `layeredArchitecture()` will now allow to combine `mayOnlyBeAccessedBy...` and `mayOnlyAccess...`. Previously `mayOnlyAccess...` would forbid all incoming dependencies (see #739; thanks a lot to @hankem)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* Members targeted by `AccessTarget` are now resolved like the Java Reflection API would do it. Previously `AccessTarget.resolve()` would return a set of matching members, the new replacement `AccessTarget.resolveMember()` returns an optional member making it a lot easier to handle (see #722)\r\n* `JavaClass` now knows its `methodReferencesFromSelf` (e.g. `Object::toString`) and `constructorReferencesFromSelf` (e.g. `Object::new`) (see #215; thanks a lot to @KorSin)\r\n* `ArchRules` will now by default reject evaluating if the set passed to the `should`-clause is empty. This prevents implementation errors like picking a package in `that()...` that doesn't even exist and thus composing a rule that doesn't check anything (compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_fail_rules_on_empty_should); see #774; thanks a lot @oberprah)\r\n* The automatic import dependency resolution now resolves classes missing from the import that are **only** referenced\r\n  * as class object (e.g. Foo.class)\r\n  * in a throws clause (e.g. `someMethod() throws FooException`)\r\n  * in an instanceof check (e.g. `obj instanceof Foo`)\r\n  * as an array component type (e.g. `Foo[] array;`)\r\n  * as an annotation parameter (e.g. `@SomeAnnotation(type = Foo.class)`)\r\n  * as part of a generic type signature (e.g. `List<? extends Foo>`)\r\n  * Furthermore, the resolution behavior can now be tweaked to resolve deeper or not resolve at all. Thus, users can decide between resolving additional types and performance (compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_configuring_the_number_of_resolution_iterations); see #728)\r\n* New predefined `ImportOption` to exclude `package-info.class` files (see #793; thanks a lot to @TomerFi)\r\n\r\n## Lang\r\n\r\n* Analogously to `classes()`, there now exists a method `members()...should().containNumberOfElements(predicate)` (see #179; thanks a lot to @oberprah)\r\n\r\n## Library\r\n\r\n* `PlantUmlArchCondition` now rejects files that don't specify any components at all or are of an invalid format (see #735; thanks a lot to @pfichtner)\r\n\r\n## JUnit\r\n\r\n* Tests can now be run if their classes are loaded by the context `ClassLoader` instead of the ArchUnit `ClassLoader` (see #781; thanks a lot to @stuartwdouglas)\r\n* New method `Class<?> FieldSource.getJavaClass()` to retrieve the declaring class of the respective field (see #800; thanks a lot to @famod)\r\n\r\n# Further Acknowledgement\r\n\r\n* thanks a lot to @marknp for improving the Javadoc on `ArchConditions` (see #725)\r\n* thanks a lot to @timtebeek for making the ArchUnit build work with JDK 17 (see #779)", "reactions": {"url": "https://api.github.com/repos/TNG/ArchUnit/releases/59982329/reactions", "total_count": 4, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 4, "eyes": 0}, "mentions_count": 9}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/52200482", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/52200482/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/52200482/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.22.0", "id": 52200482, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOBU1z-s4DHIQi", "tag_name": "v0.22.0", "target_commitish": "main", "name": "ArchUnit 0.22.0", "draft": false, "prerelease": false, "created_at": "2021-10-30T06:13:01Z", "published_at": "2021-10-30T06:26:12Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.22.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.22.0", "body": "# Bug Fixes\r\n\r\n* Java class file URLs with spaces are now correctly handled when resolving transitive dependencies (see #683)\r\n* fixed memory leak in ArchUnit JUnit 5 support (see #695)\r\n* three bug fixes regarding generics import (see #700)\r\n  * toplevel generic array types (e.g. `T[]`) were not detected correctly as method parameters\r\n  * primitive types were missing from the generic `JavaCodeUnit.getParameterTypes()`\r\n  * inner classes were not detected correctly as upper bounds of type parameters\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* support for method and constructor parameter annotations (see #701; thanks a lot to @hankem for extensive reviews)\r\n  * new method `JavaCodeUnit.getParameters()` that will return parameters in a structured form offering raw type, generic type and annotations\r\n  * new method `JavaCodeUnit.getParameterAnnotations()` that offers just parameter annotations by index\r\n  * parameter annotations are now part of `JavaClass.directDependencies{from/to}Self`\r\n* `SourceCodeLocation` now offers structured access to source file and source class (see #673; thanks a lot to @thmuch)\r\n\r\n## JUnit\r\n\r\n* new option to replace underscores in rule field/method names by spaces in the test description to improve readability (see #626; thanks a lot to @thmuch)", "reactions": {"url": "https://api.github.com/repos/TNG/ArchUnit/releases/52200482/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 2, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "mentions_count": 2}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/48242347", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/48242347/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/48242347/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.21.0", "id": 48242347, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ4MjQyMzQ3", "tag_name": "v0.21.0", "target_commitish": "main", "name": "ArchUnit 0.21.0", "draft": false, "prerelease": false, "created_at": "2021-08-22T17:43:24Z", "published_at": "2021-08-22T17:49:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.21.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.21.0", "body": "# Breaking Changes\r\n\r\n* the type `JavaClassList` has been removed completely. It was used inconsistently and provided very limited value (convenient way to get the names of the classes). On the other hand having a custom list implementation increases maintenance overhead and limits options in the future. Please replace usages of `JavaClassList.getNames()` by the static utility `HasName.Utils.namesOf(classes)` which can be used on any `Iterable` with elements of type `HasName` (see #633)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* `JavaMethod` now knows its generic parameter types (retrievable via `JavaMethod.getParameterTypes()`). Furthermore type arguments of generic method parameter types are now part of the `JavaClass.directDependencies{From/To}Self` (see #640)\r\n\r\n## Library\r\n\r\n* the PlantUML rule syntax now allows colored components (see #258; thanks a lot to @johthor)\r\n\r\n## Further Acknowledgement\r\n\r\n* thanks a lot to @NilsOliverLinden for further automating the release process (see #646)", "reactions": {"url": "https://api.github.com/repos/TNG/ArchUnit/releases/48242347/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 2, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "mentions_count": 2}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/46313831", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/46313831/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/46313831/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.20.1", "id": 46313831, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ2MzEzODMx", "tag_name": "v0.20.1", "target_commitish": "main", "name": "ArchUnit 0.20.1", "draft": false, "prerelease": false, "created_at": "2021-07-16T11:32:11Z", "published_at": "2021-07-16T12:33:43Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.20.1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.20.1", "body": "# Bug Fixes\r\n\r\n* Fix bug where some anonymous classes compiled with JDK 7 could not be imported anymore (`java.lang.IllegalArgumentException: Can't register multiple enclosing classes, this is likely a bug!`) (see #637)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/45676946", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/45676946/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/45676946/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.20.0", "id": 45676946, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ1Njc2OTQ2", "tag_name": "v0.20.0", "target_commitish": "release-0.20.0", "name": "ArchUnit 0.20.0", "draft": false, "prerelease": false, "created_at": "2021-07-04T16:15:45Z", "published_at": "2021-07-04T16:16:44Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.20.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.20.0", "body": "# Bug Fixes\r\n\r\n* `onionArchitecture()` no longer loses ignored dependencies, if the description is changed afterwards (see #623; thanks a lot to @thmuch)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* added support for JDK 18 (see #625; thanks a lot to @hankem)\r\n* new method `JavaCodeUnit.getTypeParameters()`. Also the bounds of these type parameters have been added to `JavaClass.directDependencies{From/To}Self` (see #616; thanks a lot to @hankem for extensive reviews)\r\n* `JavaMethod` now knows its generic return type (retrievable via `JavaMethod.getReturnType()`). Furthermore type arguments of generic method return types are now part of the `JavaClass.directDependencies{From/To}Self` (see #616; thanks a lot to @hankem for extensive reviews)\r\n\r\n## JUnit\r\n\r\n* upgraded JUnit Platform dependency from `1.7.1` to `1.7.2` (see #628)", "reactions": {"url": "https://api.github.com/repos/TNG/ArchUnit/releases/45676946/reactions", "total_count": 24, "+1": 16, "-1": 0, "laugh": 0, "hooray": 8, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/43814935", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/43814935/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/43814935/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.19.0", "id": 43814935, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQzODE0OTM1", "tag_name": "v0.19.0", "target_commitish": "release-0.19.0", "name": "ArchUnit 0.19.0", "draft": false, "prerelease": false, "created_at": "2021-05-30T15:22:21Z", "published_at": "2021-05-30T16:06:40Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.19.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.19.0", "body": "# Bug Fixes\r\n\r\n* The last release archive contained a couple of classes from dependencies that were not relocated and thus lead to duplicate classes warnings in some environments. These classes have been removed (see #593)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* `JavaField` now knows its generic type (retrievable via `JavaField.getType()`). Furthermore type arguments of generic field types are now part of the `JavaClass.directDependencies{From/To}Self` (see #595; thanks a lot to @hankem for extensive reviews)\r\n\r\n## Lang\r\n\r\n* new method `noClasses()...should().transitivelyDependOnClassesThat(..)...` (see #575; thanks a lot to @hankem)\r\n* the failure descriptions of `ArchRules` can not be customized (see #343; thanks a lot to @Farbauti89)\r\n\r\n## Library\r\n\r\n* new method `layeredArchitecture()...mayOnlyAccessLayers(..)...` (see #592; thanks a lot to @GiorgadzeLuka)\r\n* improved readability for cycle rule violations (see #369; thanks a lot to @jzheaux)\r\n* `FreezingArchRule` can now refreeze all violations, if current violations should simply be added to the `ViolationStore` without any failure (see #510)\r\n\r\n## JUnit\r\n\r\n* annotations of test methods and fields are now passed to the `TestDescription` by the JUnit 4 test support (see #552)\r\n\r\n## Further Acknowledgement\r\n\r\n* Thanks a lot to @GiorgadzeLuka and @OLibutzki for improving the documentation"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/41442816", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/41442816/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/41442816/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.18.0", "id": 41442816, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQxNDQyODE2", "tag_name": "v0.18.0", "target_commitish": "release-0.18.0", "name": "ArchUnit 0.18.0", "draft": false, "prerelease": false, "created_at": "2021-04-14T21:57:43Z", "published_at": "2021-04-14T22:42:26Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.18.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.18.0", "body": "# Breaking Changes\r\n\r\n* `JavaClass.get{All}Interfaces()` is now `JavaClass.get{All}RawInterfaces()` to be consistent with regards to the generic `JavaClass.getInterfaces()`. We decided that this is still a less painful way than deprecating `getInterfaces()`, introducting a new `getGenericInterfaces()`, then deprecate `getGenericInterfaces()` in favor of `getInterfaces()` in a later release. To be consistent with other places in ArchUnit `JavaClass.getInterfaces()` needs to provide the generic version of the interfaces (compare e.g. `JavaClass.getSuperclass()`).\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* Support for Java Records (see #295; thanks a lot to @rweisleder)\r\n* `JavaClass` now knows its generic interfaces (retrievable via `JavaClass.getInterfaces()`). Furthermore type arguments of generic interfaces are now part of the JavaClass.directDependencies{From/To}Self (see #551)\r\n\r\n## Lang\r\n\r\n* New syntax methods `classes().that().containAny{Members,Fields,Methods,...}That(..)` (see #553; thanks a lot to @nils-christian)\r\n\r\n## Library\r\n\r\n* Added an API to calculate Software Architecture Metrics inspired by John Lakos, Robert C. Martin and Herbert Dowalil. For further details check the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_software_architecture_metrics) (see #572; thanks a lot to @hankem and @stefanhechtltng and to @hdowalil for the inspiration and support)\r\n\r\n## Further Acknowledgement\r\n\r\n* Thanks a lot to @rweisleder and @Strohgelaender for improving the documentation"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/38396767", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/38396767/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/38396767/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.17.0", "id": 38396767, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM4Mzk2NzY3", "tag_name": "v0.17.0", "target_commitish": "release-0.17.0", "name": "ArchUnit 0.17.0", "draft": false, "prerelease": false, "created_at": "2021-02-21T23:15:39Z", "published_at": "2021-02-21T23:31:32Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.17.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.17.0", "body": "# Breaking Changes\r\n\r\n* The `metaAnnotatedWith(..)` predicate, as well as all syntax elements like `classes().that().areMetaAnnotatedWith(..)` or `classes().should().beMetaAnnotatedWith(..)`, now all also count direct annotations as matching. The background is, that the typical use case always seemed to be \"either directly annotated or annotated with some meta-annotated annotation\", so we decided to cover this directly. \r\n  * If your rule has `metaAnnotatedWith(..).or(annotatedWith(..))` it still works, but you can now drop the `annotatedWith(..)` part\r\n  * If your rule really wanted to test that the annotation is not a direct annotation, but **only** meta-annotated on another annotation, this can still be asserted by `metaAnnotatedWith(..).and(not(annotatedWith(..)))` (see #527)\r\n\r\n# Enhancements\r\n\r\n* Classes appearing in member signatures (like field types or method return values) are now automatically resolved in import (see #530)\r\n* Support for Java 17 (see #535)\r\n* New API to check if a `JavaAnnotation` has *explicitly* declared a certain property, i.e. it is set in the annotation and not taken from the default value (see #499)\r\n\r\n# Lang\r\n\r\n* Improved Javadoc and error message to better explain the difference of `classes().that().implement(..)` and `classes().that().areAssignableTo(..)`\r\n\r\n# Library\r\n\r\n* New rule to assert no proxy bypasses, e.g. if a Spring bean internally calls an `@Async` method and thus bypasses the proxy (see #539)\r\n\r\n# JUnit\r\n\r\n* We decided to rename `ArchRules.in(..)` to `ArchTests.in(..)`, because `ArchRules` was considered confusing, if the actual behavior is to collect all `@ArchTest` members of the other class. `ArchRules` is still present (yet deprecated), so this will not break existing `ArchTest` suites (see #525)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/37147971", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/37147971/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/37147971/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.16.0", "id": 37147971, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM3MTQ3OTcx", "tag_name": "v0.16.0", "target_commitish": "release-0.16.0", "name": "ArchUnit 0.16.0", "draft": false, "prerelease": false, "created_at": "2021-01-31T20:04:47Z", "published_at": "2021-01-31T20:27:03Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.16.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.16.0", "body": "# Bug Fixes\r\n\r\n* Fix modulepath issue where sometimes classes on the modulepath would not be imported correctly (see #497)\r\n* `FreezingArchRule` default violation store now works correctly cross-platform with regards to line separators (see #458, #508)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* `JavaClass` now knows its generic superclass (retrievable via `JavaClass.getSuperclass()`). Furthermore type arguments of generic superclasses are now part of the `JavaClass.directDependencies{From/To}Self` (see #503)\r\n* `JavaClass`/`JavaCodeUnit` now know their references to other class objects (e.g. `Example` in `List.of(Example.class)`). Furthermore class objects are now part of the `JavaClass.directDependencies{From/To}Self` (see #518)\r\n* Added new `ImportOption.OnlyIncludeTests` to execute `ArchRules` only on test classes (see #501; thanks a lot to @pstanoev)\r\n\r\n# Further Acknowledgement\r\n* Thanks a lot to @rweisleder for improving the ArchUnit CI\r\n* Thanks a lot to @perlun for improving the Imprint\r\n* Thanks a lot to @sullis for upgrading the SLF4J dependency\r\n* Thanks a lot to @Bananeweizen for improving the user guide"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/35314274", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/35314274/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/35314274/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.15.0", "id": 35314274, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM1MzE0Mjc0", "tag_name": "v0.15.0", "target_commitish": "release-0.15.0", "name": "ArchUnit 0.15.0", "draft": false, "prerelease": false, "created_at": "2020-12-16T23:49:40Z", "published_at": "2020-12-16T23:58:25Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.15.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.15.0", "body": "# Bug Fixes\r\n\r\n* `TextFileBasedViolationStore` now correctly handles empty violation store files (see #456; thanks a lot to @hankem)\r\n* Fix URL scheme part issue on Windows when reading classpath URLs from manifest files (see #414; thanks a lot to @eriklumme)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* Reduce excessive logging if `archunit.properties` are overwritten by system properties (see #375; thanks a lot to @ldebruijn)\r\n* New method `JavaClass.tryGetConstructor()` (see #386; thanks a lot to @rweisleder)\r\n* `JavaClass` now provides generic type information, i.e. there is now `JavaClass.getTypeParameters()` (see #398). Furthermore `JavaClass` now reports type parameter bounds as `Dependencies` (see #484)\r\n* `JavaClass` now offers `JavaClass.getInstanceofChecks()`, which are also reported as `Dependencies` (see #371; thanks a lot to @t-h-e)\r\n* Support for Java 15 and 16-ea (see #409)\r\n* Resolve imported annotations transitively with the configured `ClassResolver` (i.e. by default from the classpath). This will make detection of meta-annotations work out of the box now in many cases, without the need to explicitly import these meta-annotation types as well (see #342, #450; thanks a lot to @KorSin)\r\n* New method `JavaClass.getBaseComponentType()` (see #441; thanks a lot to @hankem)\r\n* Component types (i.e. `String` for an array `String[]`) are now detected as dependencies of `JavaClass` (see #257; thanks a lot to @wengertj)\r\n* New method `..archunit..Optional.getOrThrow(Supplier)` (see #391; thanks a lot to @idosal)\r\n* New method `JavaClass.getTransitiveDependenciesFromSelf()` (see #401; thanks a lot to @hankem)\r\n\r\n## Lang\r\n\r\n* New syntax `members().that().haveName{StartingWith/Containing/EndingWith}(..)` and `members().should().haveName{StartingWith/Containing/EndingWith}(..)` (see #239; thanks a lot to @kamer)\r\n* Improve `CompositeArchRule.of(..)` to accept an `Iterable` of `ArchRule` (see #384; thanks a lot to @sullis) \r\n* Clarify difference between `access` and `depend` in rule Javadocs (see #313; thanks a lot to @idosal)\r\n* New syntax `classes().that().are{Not}Annotations()` (see #468)\r\n* New syntax `classes().that().doNotBelongToAnyOf(..)` (see #422; thanks a lot to @perlun)\r\n\r\n# Further Acknowledgement\r\n\r\n* Thanks a lot to @rweisleder for improving the ArchUnit user guide, development documentation and build\r\n* Thanks a lot to @spanierm for improving OS-JDK-matrix CI builds with GitHub Actions\r\n* Thanks a lot to @gernotstarke for website and documentation improvements (see #478 and #479)\r\n* Thanks a lot to @kamilszymanski and @dariuszzbyrad for Javadoc improvements and code cleanups\r\n* Thanks a lot to @sullis for upgrading various build dependencies\r\n* Thanks a lot to @cristiangreco for introducing Upgrade Gradle Wrapper Action (see #486)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/26833198", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/26833198/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/26833198/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.14.1", "id": 26833198, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2ODMzMTk4", "tag_name": "v0.14.1", "target_commitish": "release-0.14.1", "name": "ArchUnit 0.14.1", "draft": false, "prerelease": false, "created_at": "2020-05-23T23:16:21Z", "published_at": "2020-05-23T23:43:01Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.14.1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.14.1", "body": "# Bug Fixes\r\n\r\n* Fix broken Gradle metadata: Migrating the legacy Maven Plugin to the Publish Plugin caused some broken Gradle metadata published to Maven Central by accident. While `0.14.0` should work fine with any other build tool like Maven, Gradle will complain about a missing artifact `archunit-junit`, which does in fact not exist. This release fixes this by removing the broken metadata."}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/26125669", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/26125669/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/26125669/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.14.0", "id": 26125669, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2MTI1NjY5", "tag_name": "v0.14.0", "target_commitish": "release-0.14.0", "name": "ArchUnit 0.14.0", "draft": false, "prerelease": false, "created_at": "2020-05-23T21:07:36Z", "published_at": "2020-05-23T22:09:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.14.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.14.0", "body": "# Breaking Changes\r\n\r\n* All methods that have been deprecated up to ArchUnit `0.12.0` have been removed. It might make sense to look through your code for usage of deprecated methods and follow the advice in the Javadoc before upgrading (see #329; thanks a lot to @rweisleder for removing the old deprecations)\r\n\r\n# Bug Fixes\r\n\r\n* Fix for Android where some classes were not imported correctly when run from the command line (see #319; also thanks a lot to @rweisleder for fixing the subsequent URI problems on Windows)\r\n* Fixed surprising behavior when using `only{Call/Access}...That()...` where the target of the call could not be resolved from the imported classes (see #340)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* `JavaPackage` now offers methods to retrieve the annotations of the respective `package-info` (see #263; thanks a lot to @rweisleder)\r\n* `ClassFileImporter.importClasspath()` now respects any `ImportOptions` passed via `withImportOption(..)` (see #296; thanks a lot to @rweisleder)\r\n* `JavaMethod` and `JavaConstructor` now have a heuristic line number instead of constant `0` (see #344; thanks a lot to @hankem)\r\n\r\n## Library\r\n\r\n* The algorithm to detect cycles between slices has been improved from BFS to Johnson/Tarjan (see #138; thanks a lot to @torfmaster)\r\n* Cycle detection now has a configurable limit for the max number of cycles to detect (by default 100) and a max number of violations reported (by default 20 dependencies per edge). This can be reconfigured according to [the user guide](https://www.archunit.org/userguide/html/000_Index.html#_configurations) (see #326)\r\n* `onionArchitecture()` now supports to `ignoreDependency(..)` analogously to `layeredArchitecture()` (see #318; thanks a lot to @hankem)\r\n* There now is a rule to forbid field injection in favor of constructor injection (see #288; thanks a lot to @rweisleder)\r\n* There now is a rule to forbid dependencies on upper packages (see #151; thanks a lot to @qoomon for the initiative and POC)\r\n\r\n## JUnit\r\n\r\n* `@ArchIgnore`, `@ArchTag` and `@ArchTags` are now usable as meta-annotations to compose custom annotations that inherit the behavior (analogous to https://junit.org/junit5/docs/current/user-guide/#writing-tests-meta-annotations; see #282; thanks a lot to @daniel-shuy)\r\n* Upgraded dependencies `junit-platform-*` from `1.5.2` to `1.6.2`\r\n\r\n# Further Acknowledgement\r\n\r\n* Thanks a lot to @aaschmid for extensive work to upgrade Gradle to the current version and to @jangalinski for the original initiative and draft (see #192, #284, #306 and #345)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/23386054", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/23386054/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/23386054/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.13.1", "id": 23386054, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzMzg2MDU0", "tag_name": "v0.13.1", "target_commitish": "release-0.13.1", "name": "ArchUnit 0.13.1", "draft": false, "prerelease": false, "created_at": "2020-02-04T19:03:46Z", "published_at": "2020-02-04T19:21:31Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.13.1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.13.1", "body": "# Bug Fixes\r\n\r\n* Fixed `java.lang.IllegalStateException: Couldn't find module modules of URI jrt:/...` being thrown when trying to import JDK classes where JDK version >= `13`. The path handling of `JrtFileSystemProvider` has been fixed according to `JEP-220` with JDK 13. Unfortunately ArchUnit was dependent on the old behavior. (see #303)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/22755434", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/22755434/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/22755434/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.13.0", "id": 22755434, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIyNzU1NDM0", "tag_name": "v0.13.0", "target_commitish": "release-0.13.0", "name": "ArchUnit 0.13.0", "draft": false, "prerelease": false, "created_at": "2020-01-10T21:01:25Z", "published_at": "2020-01-10T22:23:46Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.13.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.13.0", "body": "# Breaking Changes\r\n\r\n* While technically a very slim chance of really \"breaking\" anything, the log level of some details during the class file import has been reduced from `DEBUG` to `TRACE` (field, method, access and call details, ...) (see #291)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* Annotations and annotation parameters are now detected as dependencies. This could cause new findings when using the rules or library API. In particular `JavaClass.getDirectDependencies{From/To}Self()` will now also return `Dependencies` that originate from `@FormerlyNotDetected` or `@Foo(someEnum = SomeEnumFormerlyNotDetected.FOO)` or `@Foo(bar = @Bar(type = SomeTypeFormerlyNotDetected.class))` (see #136; thanks a lot to @kosani)\r\n\r\n## Lang\r\n\r\n* Some rule API method parameter types were invariant instead of contravariant (effectively preventing a predicate for a super type to be passed). These methods should now be fixed (see #262)\r\n* The rules API now offers more methods to filter and assert the type of class declaration (\"top level class\", \"nested class\", \"member class\", \"inner class\", \"anonymous class\" and \"local class\") (see #207; many thanks to @rweisleder)\r\n\r\n## Library\r\n\r\n* `FreezingArchRule` by default now not only ignores line numbers, but also numbers after `$` which effectively makes the `ViolationStore` resilient against changes in compiled lambda and anonymous class names (see #248; thanks a lot to @hankem) \r\n* `LayeredArchitecture` and `OnionArchitecture` now allow to configure `optionalLayers()`. In version `0.12.0` the behavior was made more strict, forbidding empty layers / parts of `LayeredArchitecture` and `OnionArchitecture` to prevent misconfiguration. This in turn unfortunately broke some valid use cases where empty / optional layers were in fact okay. In version `0.13.0` this is now completely configurable. By default it will still fail to prevent misconfiguration, but a switch of `withOptionalLayers(true)` or `optionalLayer(\"Some Layer\")` will allow empty layers (and in turn empty parts of `OnionArchitecture`) (see #267 and #271; many thanks to @hankem)\r\n\r\n## JUnit\r\n\r\n* there is now a ArchUnit JUnit 5 aggregator POM, i.e. instead of two dependencies `archunit-junit5-api` and `archunit-junit5-engine`, it is now also possible to simply add a single dependency `archunit-junit5` with scope `test` / `testCompile`. Compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_junit_5) (see #272; thanks a lot to @eddumelendez)\r\n* Dependency upgrades (see #292)\r\n  * `junit-platform-*` from `1.5.1` to `1.5.2`\r\n  * `junit4` from `4.12` to `4.13` (in case of problems with `archunit-junit4` it should be possible to exclude the transitive dependency to JUnit `4.13` and replace it by a custom `4.12` one)\r\n\r\n# Further Acknowledgement\r\n\r\n* Many thanks to @Bananeweizen for fixing spelling and grammar mistakes in Javadoc / methods"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/21177489", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/21177489/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/21177489/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.12.0", "id": 21177489, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxMTc3NDg5", "tag_name": "v0.12.0", "target_commitish": "release-0.12.0", "name": "ArchUnit 0.12.0", "draft": false, "prerelease": false, "created_at": "2019-11-03T21:15:49Z", "published_at": "2019-11-03T23:19:33Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.12.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.12.0", "body": "# Breaking Changes\r\n\r\n* So far ArchUnit's terminology has been a little sloppy with respect to the naming of inner and nested classes. By the [JLS](https://docs.oracle.com/javase/specs/jls/se13/html/jls-8.html#jls-8.1.3) \"inner classes\" are those classes that are nested and not static. ArchUnit's API now reflects this via `JavaClass.isNestedClass()` versus `JavaClass.isInnerClass()`. Unfortunately this means that the method formerly called `JavaClass.isInnerClass()` will now return a different result, i.e. it will only return `true`, if the class is non-static. On the other hand, the method `JavaClass.isNestedClass()` will behave exactly like `isInnerClass()` did in ArchUnit 0.11.0 (see #224; thanks a lot to @rweisleder for the clarification and PR)\r\n* `JavaAccessCondition` does not filter self-accesses anymore. This was confusing behavior that did not solve the issue it was originally intended for. However, this might lead to additional violations showing up (see #209)\r\n\r\n# Bug Fixes\r\n\r\n* Fixed bug where simple name of local classes was incorrect (see #216; thanks a lot to @rweisleder)\r\n* `static` modifier was missing from nested classes (see #219; thanks a lot to @rweisleder)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* Support for Java 14 (see #230; thanks a lot to @hankem)\r\n* `JavaModifier` now contains `SYNTHETIC` and `BRIDGE` allowing more introspection and filtering of synthetic members (see #243; thanks a lot to @alexfedorenchik)\r\n* Every property in `archunit.properties` can now be overwritten by passing a system property. This can be valuable in CI environments, e.g. to specify the `ViolationStore` path for `FreezingArchRule`. Compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_overriding_configuration) (see #252)\r\n* A `JavaClass` representing an array can now be queried for its component type (see #187; thanks a lot to @alexfedorenchik)\r\n* `JavaClass` now offers a classpath independent version of `getMethod(..)` and `getConstructor(..)` (see #236; thanks a lot to @rweisleder)\r\n\r\n## Lang\r\n\r\n* Extended syntax for `classes().thatAreEnums()` and `classes()...should().beEnums()` (see #172; thanks a lot to @rweisleder)\r\n\r\n## Library\r\n\r\n* `LayeredArchitecture` now also checks that no layer is empty. While originally with good intentions, the ability to define empty layers turned out to do more harm than good (see #177; thanks a lot to @mikomatic)\r\n* `LayeredArchitecture` now allows layers to be defined by predicate. This allows for a way more flexible definition than simple package patterns (see #228; thanks a lot to @mikomatic)\r\n* `FreezingArchRule` can now be configured to be more strict, when checking rules. In particular it is possible to forbid updates of the `ViolationStore` or the creation of a new `ViolationStore`. This can serve as a safeguard in CI environments, where a missing `ViolationStore` is typically a misconfiguration. Compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_configuration) (see #211; thanks a lot to @hankem for reviewing and providing valuable improvements) "}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/18940491", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/18940491/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/18940491/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.11.0", "id": 18940491, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE4OTQwNDkx", "tag_name": "v0.11.0", "target_commitish": "release-0.11.0", "name": "ArchUnit 0.11.0", "draft": false, "prerelease": false, "created_at": "2019-07-30T18:06:31Z", "published_at": "2019-07-30T18:06:58Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.11.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.11.0", "body": "# Enhancements\r\n\r\n## Core\r\n\r\n* `DescribedPredicate` now offers a more lambda compatible factory method `DescribedPredicate.describe(description, predicate)` (see #188; thanks a lot to @jzheaux)\r\n* New factory method `DescribedPredicate.allElements(..)` to complement `DescribedPredicate.anyElementThat(..)` (see https://github.com/TNG/ArchUnit/commit/b8890f447c3621cb16cb21e636b2a5397722c9ec)\r\n* Support for JDK 13 (see #195; thanks a lot to @jqno)\r\n* ArchUnits configuration (`archunit.properties`) and ignore patterns (`archunit_ignore_patterns.txt`) are now loaded with the `ContextClassLoader` instead of the `ClassLoader` of the respective class (see https://github.com/TNG/ArchUnit/commit/81c31f6b7ffd9c4836e1f8a0303724eb7f05ce83)\r\n\r\n## Lang\r\n\r\n* New method `classes().that().belongToAnyOf(..)` to match any class *or inner class* of the passed classes (see #173; thanks a lot to @moboa)\r\n* New method `classes().should().haveOnlyPrivateConstructors()` (see #204; thanks a lot to @sullis)\r\n* New methods `members().should().{have,notHave}FullName[Not][Matching](..)` (see #205; thanks a lot to @hankem)\r\n\r\n## Library\r\n\r\n* New `FreezingArchRule` to wrap any other `ArchRule` and change the behavior (see #181):\r\n  * on the first run record all existing violations\r\n  * on further runs only fail by unknown violations\r\n  * also on further runs automatically decrease the stored violation count if existing violations are solved\r\n  * compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_freezing_arch_rules)\r\n* New `Architectures.onionArchitecture()` API offering a predefined API for Onion or Hexagonal Architectures, compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_onion_architecture) (see #174; thanks a lot to @spanierm)\r\n\r\n# JUnit\r\n\r\n* The JUnit 5 platform dependency has been upgraded to version 1.5.1\r\n\r\n# Further Acknowledgement\r\n\r\n* Thanks a lot to @hankem for adjusting Spotbugs to ignore false positives with JDK 9\r\n* Thanks a lot to @hankem for fixing incompatibilities of some tests with JDK 12\r\n* Thanks a lot to @vincent-fuchs for improving ArchUnit's logging\r\n* Thanks a lot to @sullis for upgrading dependencies"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/16459596", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/16459596/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/16459596/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.10.2", "id": 16459596, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NDU5NTk2", "tag_name": "v0.10.2", "target_commitish": "release-0.10.2", "name": "ArchUnit 0.10.2", "draft": false, "prerelease": false, "created_at": "2019-03-31T12:54:30Z", "published_at": "2019-03-31T13:11:19Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.10.2", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.10.2", "body": "# Bug Fixes\r\n\r\n* Fixed `JavaPackage.getPackageDependenciesFromSelf()` containing the package itself if there was a dependency in the same package but not directly imported (e.g. `importer.importClasses(Foo.class)` where `some.pkg.Foo` would depend on `some.pkg.Bar`, which was not imported)\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* Some methods now return `Collection` types instead of `Iterable` to integrate nicer with streams\r\n\r\n## Lang\r\n\r\n* `FieldsShould` now contains the negation `notHaveRawTypes` (see #162; thanks a lot to @asbachb)\r\n* `CodeUnitsShould` now contains the negations `notHaveRawParameterTypes`, `notHaveRawReturnType` and `notDeclareThrowableOfType`\r\n* The syntax now contains `{methods,fields}().should().{be,notBe}{Static,Final}` (see #164; thanks a lot to @hankem)\r\n\r\n## Library\r\n\r\n* `Slice` now also offers `dependenciesToSelf` additionally to `dependenciesFromSelf`\r\n\r\n# Further Acknowledgement\r\n\r\n* Thanks a lot to @hankem for reviewing and improving the user guide"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/16165078", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/16165078/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/16165078/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.10.1", "id": 16165078, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MTY1MDc4", "tag_name": "v0.10.1", "target_commitish": "release-0.10.1", "name": "ArchUnit 0.10.1", "draft": false, "prerelease": false, "created_at": "2019-03-17T17:29:47Z", "published_at": "2019-03-17T17:48:40Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.10.1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.10.1", "body": "# Bug Fixes\r\n\r\n* `JavaPackage.PackageVisitor` and `JavaPackage.ClassVisitor` are now public instead of package-private to be usable as public API"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/16155983", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/16155983/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/16155983/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.10.0", "id": 16155983, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MTU1OTgz", "tag_name": "v0.10.0", "target_commitish": "release-0.10.0", "name": "ArchUnit 0.10.0", "draft": false, "prerelease": false, "created_at": "2019-03-17T15:27:01Z", "published_at": "2019-03-17T16:45:52Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.10.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.10.0", "body": "# Breaking Changes\r\n\r\n* The deprecated method `String JavaClass.getPackage()` was replaced by `JavaPackage JavaClass.getPackage()`. To query the package name, please use `String JavaClass.getPackageName()`.\r\n* The deprecated method `JavaClass.getDirectDependencies()` has been removed -> use `JavaClass.getDirectDependenciesFromSelf()` instead\r\n* The deprecated field `JavaClass.Functions.SIMPLE_NAME` has been removed, please use `JavaClass.Functions.GET_SIMPLE_NAME`\r\n\r\n# New Deprecation\r\n\r\n* ArchUnit does not use contractions anymore within the rules API. So far many methods were phrased like `dontHave...()` instead of `doNotHave...()`. In general this seems to be more trouble than worth it and does not read that well without an apostrophe, so all those methods were declared deprecated and have a new counter part without the contraction. A simple search & replace of `dont` by `doNot` should fix all those deprecations.\r\n* Some methods were deprecated because they were not precise enough, if generics come into play. For example `JavaClass JavaField.getType()` is not precise enough, because the type of a field is something else than a `JavaClass` (like `T someField` or `List<? extends T> someField`). Thus all those methods have been deprecated to make room for a future extension with generics and instead got a new version explicitly stating that the \"raw type\" is meant. For example `JavaField.getType()` -> `JavaField.getRawType()`, `JavaMethod.getParameters()` -> `JavaMethod.getRawParameterTypes()`.\r\n* `Formatters.formatLocation(JavaClass, lineNumber)` was deprecated in favor of the newly introduced `SourceCodeLocation.of(JavaClass, lineNumber)` which will report the correct location (i.e. link for IDEs) via `toString()`\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* The default class resolution behavior for classes missing from the import was changed. Before by default missing classes were replaced by stubs, now by default they will be resolved from the classpath. Compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_dealing_with_missing_classes) (see #111)\r\n* `JavaClass` can now be queried for declared throws clauses, any `Throwables` declared on methods or constructors count as dependencies of a `JavaClass` (see #126; thanks a lot to @tngwoerleij)\r\n* `JavaClass` can now be queried if it is an array (see #114; thanks a lot to @wengertj)\r\n* The resolution of classes from the classpath will now use the context `ClassLoader` if set (should usually not make any difference, but allows to control the `ClassLoader` used by ArchUnit for class resolution)\r\n* `JavaClass` now has a more sophisticated `JavaPackage` attached to it. It is also possible to retrieve any `JavaPackage` from `JavaClasses`. `JavaPackage` offers a more convenient API for dependencies between packages (see #158; thanks a lot to @goetzd for reviewing and user guide adjustment)\r\n* For arrays `JavaClass.getPackageName()` now returns the package of the component type instead of empty. While empty is closer to the Java Reflection API, it is not really useful from a point of view of dependencies. Using an array of a type in a package should cause a dependency to that package (see #161)\r\n\r\n## Lang\r\n\r\n* The rules API now provides an extensive support for checks of members / methods / fields (see #38; thanks a lot to @hankem for an extensive review and many improvements)\r\n\r\n## Library\r\n\r\n* It is now possible to create a `CompositeArchRule` from several `ArchRules` to check multiple rules at once (see #78; thanks a lot to @bogsi17)\r\n* The PlantUML rules API now understands more types of arrows (description on arrows, arrows from right to left, arrow colors), compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_plantuml_component_diagrams_as_rules) (see #135)\r\n* New predefined rule to avoid the use of `org.joda.time` in favor of the `java.time` API (see #145; thanks a lot to @sullis)\r\n* The slices API is now more configurable to deal with inconsistent package structures and legacy projects. It is now possible to customize the assignment of `JavaClasses` to `Slices` by a simple function `JavaClass` -> `Identifier`, compare the [user guide](https://www.archunit.org/userguide/html/000_Index.html#_slices) (see #156)\r\n\r\n## JUnit\r\n\r\n* The JUnit 5 platform dependency has been upgraded to version `1.4.0`.\r\n\r\n# Further Acknowledgement\r\n\r\n* Thanks a lot to @alanktwong for improving the CONTRIBUTING docs on how to build the project\r\n* Thanks a lot to @wengertj for removing use of deprecated Gradle API\r\n* Thanks a lot to @olleolleolle for replacing the PNG build badge by SVG\r\n* Thanks a lot to @sullis for updating the Travis build to use OpenJDK 11"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/14102005", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/14102005/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/14102005/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.9.3", "id": 14102005, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0MTAyMDA1", "tag_name": "v0.9.3", "target_commitish": "release-0.9.3", "name": "ArchUnit 0.9.3", "draft": false, "prerelease": false, "created_at": "2018-11-20T16:16:05Z", "published_at": "2018-11-20T16:28:53Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.9.3", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.9.3", "body": "# Bug Fixes\r\n\r\nFixed memory leak in combination of the newly added `ArchRule.AssertionError` and JUnit 4. JUnit 4 keeps references to all thrown `AssertionErrors` through the whole run. Since `ArchRule.AssertionError` kept a reference to `EvaluationResult` this could consume a lot of memory, if the respective results were big.\r\nThis release removes `ArchRule.AssertionError` (introduced in version 0.9.0).\r\n\r\nNote that this is in theory a **breaking change**, since it would have been possible to catch and process `ArchRule.AssertionError`. There does not seem to be any clean solution to this problem though, and due to the slim probability that the removal of this part of the API will in fact affect any user, the step seems justified.\r\n\r\nIf anybody should against all odds have a problem with this, feel free to open an issue and we will find a different solution.\r\n\r\nAlso `ArchUnitTestEngine`'s engine id has been adjusted from `junit-archunit` to `archunit` to get rid of the warning JUnit 5 emits since version `1.3.0`."}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/13939472", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/13939472/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/13939472/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.9.2", "id": 13939472, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzOTM5NDcy", "tag_name": "v0.9.2", "target_commitish": "release-0.9.2", "name": "ArchUnit 0.9.2", "draft": false, "prerelease": false, "created_at": "2018-11-11T11:00:44Z", "published_at": "2018-11-11T14:48:18Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.9.2", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.9.2", "body": "# Enhancements\r\n* Added Java 11 support (see #117; thanks a lot to @hankem)\r\n* `ArchUnitTestEngine`'s UniqueId is now `archunit` instead of `junit-archunit` to make it clear that it is not maintained by the JUnit 5 team"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/12479706", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/12479706/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/12479706/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.9.1", "id": 12479706, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNDc5NzA2", "tag_name": "v0.9.1", "target_commitish": "release-0.9.1", "name": "ArchUnit 0.9.1", "draft": false, "prerelease": false, "created_at": "2018-08-20T09:59:44Z", "published_at": "2018-08-20T11:05:36Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.9.1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.9.1", "body": "# Bug Fixes\r\n\r\n* Fixed a bug where classes in Jars with white spaces (like Kotlin class files could have) cause an exception during the import (see #103)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/12470773", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/12470773/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/12470773/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.9.0", "id": 12470773, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNDcwNzcz", "tag_name": "v0.9.0", "target_commitish": "release-0.9.0", "name": "ArchUnit 0.9.0", "draft": false, "prerelease": false, "created_at": "2018-08-19T14:06:32Z", "published_at": "2018-08-19T14:56:59Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.9.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.9.0", "body": "# Important\r\n\r\nThe Maven coordinates for `com.tngtech.archunit:archunit-junit` have changed, since there is now support for JUnit 4 and JUnit 5. The new coordinates for the equivalent artifact are now \r\n\r\n```\r\ncom.tngtech.archunit:archunit-junit4:0.9.0\r\n```\r\n\r\n# Enhancements\r\n\r\n## Core\r\n\r\n* `archunit-ignore-patterns.txt` can now contain comments (see #88; many thanks to @bedla)\r\n* a `JavaClass`' `directDependenciesFromSelf` and `directDependenciesToSelf` now contain further dependencies. This affects many rules as well, like `layeredArchitecture()` which might now detect more violations than before. In particular dependencies now contain dependencies from\r\n  * fields of a certain type\r\n  * method/constructor parameters of a certain type\r\n  * method return types \r\n\r\n  (see #92 and #96; many thanks to @msherman32)\r\n* the plugin mechanism activating Java >= 9 support now supports EA versions (see #93; many thanks to @jqno)\r\n\r\n## Lang\r\n\r\n* the rule API now supports a concise way to assert properties of a single class (see #60; many thanks to @msherman32)\r\n* the rule API can now assert that classes `haveOnlyFinalFields()` (see #86; many thanks to @bgalek)\r\n* the rule API now allows to assert that there are at least / at most / exactly `x` classes matched by a rule (see #83; many thanks to @bedla)\r\n* rules can now be derived from PlantUML component diagrams (compare the [User Guide](https://www.archunit.org/userguide/html/000_Index.html#_plantuml_component_diagrams_as_rules); see #4; many thanks to @msherman32)\r\n* the rule API now allows to check more general for dependencies instead of just accesses (like interfaces, field types, method parameters, ...) (see #69)\r\n* the rule API now includes several methods to restrict what classes should \"only\" do, i.e. `classes().should().onlyDependOnClassesThat()...` or `onlyCallMethodsThat(..)`, etc. (see #84)\r\n\r\n## JUnit\r\n\r\n* ArchUnit now offers extended JUnit 5 support (compare the [User Guide](https://www.archunit.org/userguide/html/000_Index.html#_junit_4_5_support); see #34)\r\n\r\n## Kotlin\r\n\r\n* rule suits with JUnit 4 / JUnit 5 can now be written in a concise way and source locations are reported correctly (compare the [User Guide](https://www.archunit.org/userguide/html/000_Index.html#_using_junit_support_with_kotlin); see #77)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/12032011", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/12032011/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/12032011/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.8.3", "id": 12032011, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyMDMyMDEx", "tag_name": "v0.8.3", "target_commitish": "v0.8.3", "name": "ArchUnit 0.8.3", "draft": false, "prerelease": false, "created_at": "2018-07-20T18:00:57Z", "published_at": "2018-07-20T18:09:03Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.8.3", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.8.3", "body": "# Bug Fixes\r\n\r\nFixed bug where deeply nested super classes missing from the import were not resolved correctly from the classpath (see #91; many thanks to @svenackermann for reporting and debugging)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/11512246", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/11512246/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/11512246/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.8.2", "id": 11512246, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExNTEyMjQ2", "tag_name": "v0.8.2", "target_commitish": "release-0.8.2", "name": "ArchUnit 0.8.2", "draft": false, "prerelease": false, "created_at": "2018-06-16T11:24:56Z", "published_at": "2018-06-16T11:32:55Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.8.2", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.8.2", "body": "# Bug Fixes\r\nFixed a bug where the classpath property could not be parsed on Windows when using Eclipse Neon. Former versions of ArchUnit assumed all entries would be of the form `C:\\some\\path` (which seems to be the case for most IDEs/build tools), now also entries of the form `/C:/some/path` can be processed (see #79)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/11292836", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/11292836/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/11292836/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.8.1", "id": 11292836, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExMjkyODM2", "tag_name": "v0.8.1", "target_commitish": "master", "name": "ArchUnit 0.8.1", "draft": false, "prerelease": false, "created_at": "2018-06-02T12:51:50Z", "published_at": "2018-06-02T13:04:05Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.8.1", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.8.1", "body": "# Bug Fixes\r\n* Fixed a bug where classes in Jars would not be imported on Windows, if Java version >= 9 and the whole classpath is imported; this only affects an import of the whole classpath with Jars, it does not affect `importPackages(..)`, `importPaths(..)` or `importJars(..)` (see #73)\r\n\r\n# Enhancements\r\n* When specifying a `layeredArchitecture()`, referring to a missing layer within `onlyBeAccessedBy(..)` will now throw an exception with a better error message (see #74)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/11034314", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/11034314/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/11034314/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.8.0", "id": 11034314, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExMDM0MzE0", "tag_name": "v0.8.0", "target_commitish": "master", "name": "ArchUnit 0.8.0", "draft": false, "prerelease": false, "created_at": "2018-05-16T19:37:49Z", "published_at": "2018-05-16T19:38:48Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.8.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.8.0", "body": "# Enhancements\r\n\r\n## Core\r\n* ArchUnit now supports classes compiled with JDK 9 and JDK 10 (see #47)\r\n  * this includes a new URL type for JDK >= 9 runtime images, i.e. ArchUnit now supports URLs of the form `jrt:/java.base/...`\r\n  * support for JDK 9 / 10 classes is loaded dynamically, thus ArchUnit can still run with any JDK >= 7 and the change should be fully backwards compatible\r\n\r\n## Lang\r\n* the rule API now allows to assert properties of simple class names (see #41; many thanks to @SteluHH)\r\n* the rule API now fails, if `annotatedWith(..)` is called with an annotation type with `@Retention(SOURCE)` (see #48)\r\n* the rule API now supports testing for meta-annotations (e.g. custom annotations annotated with some stereotype like the Spring framework likes to use) (see #57; many thanks to @rweisleder)\r\n* the rule API now creates hyperlinks within error messages that refer to whole classes (like wrong simple class name) (see #61)\r\n\r\n\r\n## JUnit 4\r\n* `@AnalyzeClasses` now allows to specify a `CacheMode` to disable caching by location between different test classes (see #45)"}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/8659673", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/8659673/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/8659673/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.5.0", "id": 8659673, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg2NTk2NzM=", "tag_name": "v0.5.0", "target_commitish": "master", "name": "ArchUnit 0.5.0", "draft": false, "prerelease": false, "created_at": "2017-11-26T20:36:50Z", "published_at": "2017-11-26T20:39:01Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.5.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.5.0", "body": "# Minor Breaking Changes\r\n\r\nThere were two minor things that were changed in an incompatible way (the migration should literally only take 1 minute, otherwise this ugliness would have had to be dragged on for a long time):\r\n\r\n* `@AnalyzeClasses(importOption = )` is now a varargs `@AnalyzeClasses(importOptions = )` that accepts a variable number of import options (a simple rename of \"importOption\" to \"importOptions\" should fix this). Changed in #2.\r\n* `SimpleConditionEvent` had a rather useless type parameter (since wherever it would be evaluated, the type would be '?' anyway, providing no further use), which was removed. This can be fixed, by performing a regex replace of \"SimpleConditionEvent<[^>]*>\" with \"SimpleConditionEvent\"\r\n\r\nApologies for any inconvenience this causes! This was mainly due to the fact, that the last release was the very first one and it should not happen again with the next release.\r\n\r\n# Bug Fixes\r\n\r\n* The `ClassFileImporter` now imports packages from JARs, even if the respective JAR entry is missing (it used to skip those, since `classLoader.getResource(packagePathWithoutJarEntry)` would return nothing; fixed in #11)\r\n* The `ArchUnitRunner` didn't evaluate `@ArchIgnore` on rule sets (i.e. fields of type `ArchRules` used to include other rules; fixed in #29)\r\n\r\n# Enhancements\r\n\r\nThere were enhancements in different areas:\r\n\r\n## Core\r\n\r\n* `JavaClass` has now a method `JavaClass#isEnum` (added in #5; many thanks to @storozhukBM )\r\n* The `ClassFileImporter` can now import multiple JARs at once (added in #8) and multiple paths at once (added in #10)\r\n* The `ClassFileImporter` is now more resilient, if a single class file is corrupt (before the whole import would fail, if a broken class file was encountered; added in #9)\r\n\r\n## Lang\r\n\r\n* `should().onlyAccessedBy()` now ignores self accesses (changed in #3)\r\n* Failing rules now report the number of violations in the error message (added in #24; many thanks to @hankem)\r\n* classes syntax now allows to filter and assert implementing interfaces (i.e. select classes that implement an interface or assert that certain classes should implement an interface; added in #36; many thanks to @hajotka)\r\n* classes syntax now allows to filter and assert `startsWith`/`endsWith`/`contains` on simple class names (added in #40 and #43; many thanks to @SteluHH)\r\n* `layeredArchitecture()` now allowes to ignore certain dependencies programmatically (added in #42)\r\n* slice rules (`slices()...should().beFreeOfCycles()` and `slices()...should().notDependOnEachOther()`) now allow to ignore certain dependencies programmatically (added in #46)\r\n\r\n## JUnit\r\n\r\n* `@AnalyzeClasses` now allows to specify custom `LocationProviders`, which can return any set of `Locations` (added in #37).\r\n* The cache used by `ArchUnitRunner` now uses soft references, thus the garbage collector should free the heap of imported classes, if the heap runs low, while keeping the classes cached by URL as long as there is enough heap (changed in #45)\r\n\r\n# Experimental Features\r\n\r\nThe following features are marked with `@PublicAPI(state = EXPERIMENTAL)` which means, that any method / class may change in any release at will. Use only at your own risk.\r\n\r\n* Added a new API to programmatically handle violations (i.e. react to the `ConditionEvents` and their corresponding objects, like `JavaAccess`; added in #16)\r\n* Added a new API to register custom extensions to react to violated rules. The idea is, to perform some custom reporting or visualization, but as long as there is no released part of ArchUnit that uses this API, it will remain experimental (added in #18)\r\n "}
{"url": "https://api.github.com/repos/TNG/ArchUnit/releases/6160073", "assets_url": "https://api.github.com/repos/TNG/ArchUnit/releases/6160073/assets", "upload_url": "https://uploads.github.com/repos/TNG/ArchUnit/releases/6160073/assets{?name,label}", "html_url": "https://github.com/TNG/ArchUnit/releases/tag/v0.4.0", "id": 6160073, "author": {"login": "codecholeric", "id": 4095015, "node_id": "MDQ6VXNlcjQwOTUwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4095015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codecholeric", "html_url": "https://github.com/codecholeric", "followers_url": "https://api.github.com/users/codecholeric/followers", "following_url": "https://api.github.com/users/codecholeric/following{/other_user}", "gists_url": "https://api.github.com/users/codecholeric/gists{/gist_id}", "starred_url": "https://api.github.com/users/codecholeric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codecholeric/subscriptions", "organizations_url": "https://api.github.com/users/codecholeric/orgs", "repos_url": "https://api.github.com/users/codecholeric/repos", "events_url": "https://api.github.com/users/codecholeric/events{/privacy}", "received_events_url": "https://api.github.com/users/codecholeric/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTYxNjAwNzM=", "tag_name": "v0.4.0", "target_commitish": "master", "name": "First release of ArchUnit", "draft": false, "prerelease": false, "created_at": "2017-04-23T12:05:16Z", "published_at": "2017-04-23T11:59:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/TNG/ArchUnit/tarball/v0.4.0", "zipball_url": "https://api.github.com/repos/TNG/ArchUnit/zipball/v0.4.0", "body": "This is the initial release of ArchUnit, it consists of\r\n\r\n- ArchUnit core (an importer for class files and an API to analyse imported classes)\r\n- ArchUnit lang (an API to specify rules on code structures, like package dependencies, method calls, field accesses, ...)\r\n- ArchUnit library (some extensions, e.g. a compact API to specify layered architectures or rules on package slices, ...)\r\n- ArchUnit JUnit (integration with JUnit 4, providing a custom runner to evaluate ArchRules declared as test fields and to cache imported URLs in between test runs)"}
