{"url": "https://api.github.com/repos/whirvis/JRakNet/releases/34553959", "assets_url": "https://api.github.com/repos/whirvis/JRakNet/releases/34553959/assets", "upload_url": "https://uploads.github.com/repos/whirvis/JRakNet/releases/34553959/assets{?name,label}", "html_url": "https://github.com/whirvis/JRakNet/releases/tag/v2.12.3", "id": 34553959, "author": {"login": "whirvis", "id": 5157755, "node_id": "MDQ6VXNlcjUxNTc3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5157755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whirvis", "html_url": "https://github.com/whirvis", "followers_url": "https://api.github.com/users/whirvis/followers", "following_url": "https://api.github.com/users/whirvis/following{/other_user}", "gists_url": "https://api.github.com/users/whirvis/gists{/gist_id}", "starred_url": "https://api.github.com/users/whirvis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whirvis/subscriptions", "organizations_url": "https://api.github.com/users/whirvis/orgs", "repos_url": "https://api.github.com/users/whirvis/repos", "events_url": "https://api.github.com/users/whirvis/events{/privacy}", "received_events_url": "https://api.github.com/users/whirvis/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0NTUzOTU5", "tag_name": "v2.12.3", "target_commitish": "master", "name": "JRakNet v2.12.3", "draft": false, "prerelease": false, "created_at": "2020-11-29T22:34:44Z", "published_at": "2020-11-29T22:38:57Z", "assets": [{"url": "https://api.github.com/repos/whirvis/JRakNet/releases/assets/28921067", "id": 28921067, "node_id": "MDEyOlJlbGVhc2VBc3NldDI4OTIxMDY3", "name": "jraknet-2.12.3-javadoc.jar", "label": null, "uploader": {"login": "whirvis", "id": 5157755, "node_id": "MDQ6VXNlcjUxNTc3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5157755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whirvis", "html_url": "https://github.com/whirvis", "followers_url": "https://api.github.com/users/whirvis/followers", "following_url": "https://api.github.com/users/whirvis/following{/other_user}", "gists_url": "https://api.github.com/users/whirvis/gists{/gist_id}", "starred_url": "https://api.github.com/users/whirvis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whirvis/subscriptions", "organizations_url": "https://api.github.com/users/whirvis/orgs", "repos_url": "https://api.github.com/users/whirvis/repos", "events_url": "https://api.github.com/users/whirvis/events{/privacy}", "received_events_url": "https://api.github.com/users/whirvis/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 811657, "download_count": 26, "created_at": "2020-11-29T22:38:54Z", "updated_at": "2020-11-29T22:38:54Z", "browser_download_url": "https://github.com/whirvis/JRakNet/releases/download/v2.12.3/jraknet-2.12.3-javadoc.jar"}, {"url": "https://api.github.com/repos/whirvis/JRakNet/releases/assets/28921066", "id": 28921066, "node_id": "MDEyOlJlbGVhc2VBc3NldDI4OTIxMDY2", "name": "jraknet-2.12.3-shaded.jar", "label": null, "uploader": {"login": "whirvis", "id": 5157755, "node_id": "MDQ6VXNlcjUxNTc3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5157755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whirvis", "html_url": "https://github.com/whirvis", "followers_url": "https://api.github.com/users/whirvis/followers", "following_url": "https://api.github.com/users/whirvis/following{/other_user}", "gists_url": "https://api.github.com/users/whirvis/gists{/gist_id}", "starred_url": "https://api.github.com/users/whirvis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whirvis/subscriptions", "organizations_url": "https://api.github.com/users/whirvis/orgs", "repos_url": "https://api.github.com/users/whirvis/repos", "events_url": "https://api.github.com/users/whirvis/events{/privacy}", "received_events_url": "https://api.github.com/users/whirvis/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 4360098, "download_count": 45, "created_at": "2020-11-29T22:38:52Z", "updated_at": "2020-11-29T22:38:54Z", "browser_download_url": "https://github.com/whirvis/JRakNet/releases/download/v2.12.3/jraknet-2.12.3-shaded.jar"}, {"url": "https://api.github.com/repos/whirvis/JRakNet/releases/assets/28921068", "id": 28921068, "node_id": "MDEyOlJlbGVhc2VBc3NldDI4OTIxMDY4", "name": "jraknet-2.12.3-sources.jar", "label": null, "uploader": {"login": "whirvis", "id": 5157755, "node_id": "MDQ6VXNlcjUxNTc3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5157755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whirvis", "html_url": "https://github.com/whirvis", "followers_url": "https://api.github.com/users/whirvis/followers", "following_url": "https://api.github.com/users/whirvis/following{/other_user}", "gists_url": "https://api.github.com/users/whirvis/gists{/gist_id}", "starred_url": "https://api.github.com/users/whirvis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whirvis/subscriptions", "organizations_url": "https://api.github.com/users/whirvis/orgs", "repos_url": "https://api.github.com/users/whirvis/repos", "events_url": "https://api.github.com/users/whirvis/events{/privacy}", "received_events_url": "https://api.github.com/users/whirvis/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 240112, "download_count": 21, "created_at": "2020-11-29T22:38:54Z", "updated_at": "2020-11-29T22:38:54Z", "browser_download_url": "https://github.com/whirvis/JRakNet/releases/download/v2.12.3/jraknet-2.12.3-sources.jar"}], "tarball_url": "https://api.github.com/repos/whirvis/JRakNet/tarball/v2.12.3", "zipball_url": "https://api.github.com/repos/whirvis/JRakNet/zipball/v2.12.3", "body": "The final version of JRakNet version 2. This version does little except mark the end of this major version and remove a constant that has been unused since its implementation in the ``ConnectionType`` class. For more information please refer to this [commit](https://github.com/JRakNet/JRakNet/commit/e369d3d17bc106ede7d022d9b67d8234648a0d92). All previous versions except this one will have their tag deleted and will no longer be hosted for download.\r\n\r\nHowever, this major version will still be supported. This means that if a bug is found in this version, it will be fixed and a new version will be released. However, no new features will be added. Instead, I plan to begin work on JRakNet version 3 which will overhaul the API to make it better in areas where I feel it is mediocre and could use improvements. If you wish to propose a change for JRakNet version 3, please create an issue in the repository with the tag \"v3.0 proposal\". I greatly appreciate any and all feedback!\r\n\r\n<details>\r\n<summary>Click here to see the changelogs for each release beforehand.</summary>\r\n\r\n# JRakNet v2.11.8 (April 1st, 2019)\r\nThis version of JRakNet completely overhauls the documentation, cleans up code, improves performance, and also adds some new features!\r\n\r\n- Revamped documentation. So much was redocumented that I will not bother to list it all here.\r\n    - Removed the now unnecessary \"doc\" folder as the JavaDocs are now hosted on CodeMC.\r\n- Added many ``throws`` to methods for the sake of making sure methods are not incorrectly called. Once again, this was done to so many methods that I will not bother to list them all here.\r\n- Reworked many internals. I will not bother to mention all the changes with these either as they either simply clean up code or improve performance.\r\n- Update logging to make use of trace where needed to prevent debug spam.\r\n- Removed example classes and moved all contents from the ``com.whirvis.jraknet.example`` package to the ``com.whirivs.jraknet`` package.\r\n    - Fixed some bugginess in both the chat server and chat client.\r\n- Listeners\r\n    - Added ``ThreadedListener``. This allows for listener event methods to be called on their own dedicated thread. In order to use this, all one has to do is annotate their listener class with it.\r\n    - All client listener methods now take the calling client as the first parameter.\r\n    - All server listener methods now take the calling server as the first parameter.\r\n- Client\r\n    - Clients can now specify an address to bind to when connecting to servers via the constructor.\r\n    - Renamed ``SessionPreparation`` to ``PeerFactory`` and reworked ``PeerFactory`` internals.\r\n    - Moved exceptions relating to connection failure from the ``com.whirivs.jraknet.client`` package to the ``com.whirvis.jraknet.client.peer`` package.\r\n    - Removed ``connectThreaded()`` method as the client will now always use its own thread.\r\n    - Removed ``shutdown()`` method. Clients can now also disconnect from a server and then connect to another one.\r\n- Discovery\r\n    - Decoupled discovery system from the client. Anything relating to discovery will now be found in the ``Discovery`` class or in ``com.whirvis.jraknet.discovery`` package.\r\n    - Added ``DiscoveryListener``. Like ``RakNetServerListener`` and ``RakNetClientListener``, this listener class also supports the ``ThreadedListener`` annotation.\r\n- Peer\r\n    - Sessions are now referred to as peers.\r\n    - Added ability to set timeout for peers.\r\n- Server\r\n    - Servers can now specify an address to bind to during startup via the constructor.\r\n    - Servers can now automatically forward the port they are running on through UPnP via the ``forwardPort()`` method! Likewise, they can then have these ports closed via the ``closePort()`` method.\r\n    - Renamed methods that ended with \"client\" by simply removing the \"client\" suffix. For example, ``disconnectClient()`` is now simply ``disconnect()``.\r\n    - Removed ``startThread()`` method as the server will now always use its own thread.\r\n    - Servers can now startup after they have already been shutdown.\r\n- Streams\r\n    - ``PacketDataInputStream`` now supports ``readLine()`` and ``readUTF()``.\r\n    - ``PacketDataOutputStream`` now supports ``writeLine()`` and ``writeUTF()``.\r\n- Added many new utility methods to the ``RakNet`` class such as the ``forwardPort()`` and ``closePort()``. method.\r\n- Removed ``NoListenerException``.\r\n- Removed ``MessageIdentifier``, all of its' fields and methods can now be found in ``RakNetPacket``.\r\n- Moved ``InvalidChannelException`` to the ``com.whirvis.jraknet`` package.\r\n- Removed all uses of streams for performance purposes.\r\n- Most likely more changes I cannot remember.\r\n- Fixed #105 \r\n- Fixed #106 \r\n- Fixed #107\r\n- Fixed #109\r\n- Fixed #110 \r\n- Fixed #112 \r\n- Fixed #113 \r\n- Fixed #114\r\n- Fixed #117\r\n- Fixed #118 \r\n- Fixed #119 \r\n- Fixed #120 \r\n- Fixed #121\r\n- Fixed #122\r\n- Fixed #123 \r\n- Fixed #124\r\n\r\n# JRakNet v2.10.7 (August 3rd, 2018)\r\nThis release adds the ability to manage loopback exemptions using the ``UniversalWindowsProgram`` class that will now come pre-packaged with JRakNet. I decided to add this so server developers working on server softwares for games like Minecraft which run on the Universal Windows Program framework can have the server automatically enable loopback exemption itself so server owners can connect to their server even if it's running on the same machine as they are playing on.\r\n\r\n- Changed logging system from SLF4J to Log4J2\r\n- Moved all methods and fields from ``ArrayUtils`` and ``RakNetUtils`` to ``RakNet``.\r\n- Renamed ``com.whirvis.jraknet.utils.map`` package to ``com.whirvis.jraknet.map``.\r\n- Client\r\n    - Loosened maximum transfer unit restrictions and handling during login as to prevent login from failing with third party servers with their own version of RakNet implemented.\r\n- Protocol\r\n    - Bumped protocol version for both server and client from 8 to 9.\r\n    - Improved MTU negotiation methods for both server and client.\r\n- Windows\r\n    - Added ``UniversalWindowsProgram``.\r\n    - Added ``PowerShellCommand``.\r\n    - Added ``PowerShellAdministrativeClient``.\r\n- Exceptions\r\n    - Added ``PowerShellException``.\r\n- Fixed #95 \r\n- Fixed #97 \r\n- Fixed #98\r\n- Fixed #99 \r\n- Fixed #100\r\n\r\n# JRakNet v2.9.8  (February 17th, 2018)\r\nThis release is mainly an update that updates the root package and maven project settings to conform with my new domain, however there are some new features and bug fixes.\r\n\r\n- Updated project structure\r\n- Changed root package to ``com.whirvis.jraknet``.\r\n- Made major changes to POM to allow for Jenkins builds on the CodeMC servers.\r\n- Client\r\n   - Added ``removeExternalServer(DiscoveredServer)``.\r\n   - Added ``getLocalServers()``.\r\n- Protocol\r\n   - Rewrote the connection type system to be more flexible.\r\n- Fixed #71 \r\n- Fixed #72 \r\n- Fixed #74 \r\n- Fixed #77 \r\n- Fixed #78 \r\n- Fixed #79 \r\n- Fixed #82 \r\n- Fixed #86 \r\n- Fixed #93 \r\n- Fixed #94\r\n\r\n# JRakNet v2.8.4  (November 23rd, 2017)\r\nThis release adds manual logging to using SLF4J thanks to [CausticCoder](https://github.com/CausticCoder) along with fixing a few bugs and optimizations.\r\n\r\n- Replaced manual logging with SLF4J logging.\r\n- Server\r\n  - The server now uses 97% less CPU (Determined on a machine using an Intel i7-6700K @4.0Ghz with 8 cores).\r\n  - Servers can now have multiple listeners! Use ``addListener()`` to add a listener to the server and `removeListener` to remove a listener from the server.\r\n  - Servers are now allowed to start without any registered listeners.\r\n  - Setting the maximum connection count to ``-1`` will now allow for an unlimited amount of players to connect to the server.\r\n- Client\r\n  - The client now uses 99% less CPU (Determined on a machine using an Intel i7-6700K @4.0Ghz with 8 cores).\r\n  - Clients can now have multiple listeners! Use ``addListener()`` to add a listener to the client and ``removeListener()`` to remove a listener from the client.\r\n  - Clients are now allowed to attempt to connect to servers without any registered listeners.\r\n  - Maximum transfer unit determination is now more consistent with the official RakNet specifications.\r\n  - Removed ``addMaximumTranferUnit()`` and ``removeMaximumTransferUnit()`` methods, they have been replaced with ``setMaximumTransferUnits()``.\r\n- Protocol\r\n  - Added JungleTree connection type.\r\n  - Renamed ``getMaximumTransferUnit()`` method to ``getSize()`` in ``MaximumTransferUnit``.\r\n  - Renamed ``MCPEIdentifier`` to ``MinecraftIdentifier`` due to the 1.2 better together update redefining the the definition of Minecraft from the Java version to what was previously known as Pocket Edition or its C++ counterpart.\r\n- Utilities\r\n  - Added ``ConcurrentByteMap``.\r\n  - Added ``ConcurrentShortMap``.\r\n  - Added ``ConcurrentIntMap``.\r\n  - Added ``ConcurrentLongMap``.\r\n- Fixed #61\r\n- Fixed #63\r\n- Fixed #64\r\n- Fixed #69\r\n- Fixed #70\r\n\r\n# JRakNet v2.7.6  (August 8th, 2017)\r\n- Server\r\n   - The server now makes use of the new logger system.\r\n   - It is now possible to to get the protocol implementation of a client when a ping is received (E.G.: JRakNet, RakLib, JRakLib+, etc.)\r\n   - Added ``handleUnknownMessage()`` to ``RakNetServerListener`` which can be used to implement RakNet protocol functionality that is not present in JRakNet.\r\n- Client\r\n   - The client now makes use of the new logger system.\r\n   - The client now uses the ``RELIABLE_ORDERED_WITH_ACK_RECEIPT`` reliability for it's ``NewIncomingConnectionPacket`` and waits until it is acknowledged before calling the ``onConnect()`` method.\r\n   - It is now possible to to get the protocol implementation of a discovered server (E.G.: JRakNet, RakLib, JRakLib+, etc.)\r\n   - Added ``handleUnknownMessage()`` to ``RakNetClientListener`` which can be used to implement RakNet protocol functionality that is not present in JRakNet.\r\n- Session\r\n    - It is now possible to get the protocol implementation of a session (E.G.: JRakNet, RakLib, JRakLib+, etc.)\r\n    - All ``sendMessage()`` methods now return a copy of the generated encapsuated packet, which can be used to detect when a packet has been sent or lost in the now **functioning** and **undeprecated** ``onAcknowledge()`` and ``onNotAcknowledge()`` methods. \r\n- Protocol\r\n    - Fixed broken reliability IDs.\r\n    - ``MessageIdentifier`` packet name's and ID's are now cached once instead of cycling through them every time a packet name or ID is requested with ``getName()`` or ``getId()``.\r\n    - ``RakNetState`` has been converted from an enum to a regular class.\r\n    - ``RakNetState`` ``equals()`` method will now return ``true`` if the state given to it has an order ID greater than or equal to it.\r\n    - Changed all ``readU`` and ``writeU`` function prefixes to ``readUnsigned`` and ``writeUnsigned`` in the ``Packet``\r\nclass.\r\n    - Added ``writeUnsignedLong()`` and ``readUnsignedLong()`` functions.\r\n- Utilities\r\n    - Added ``toHexStringId()`` method which can be used to easily get ID's according to the \"0xXX\" format.\r\n    - Added ``RakNetLogger``, which can be used to debug and is enabled through the ``RakNet`` class.\r\n    equal to it.\r\n- Tests\r\n    - All tests now make use of the new logging feature.\r\n    - ChatServer\r\n        - Added \"help\" command.\r\n        - All commands now have descriptions, which are used by the \"help\" command.\r\n- Fixed #41 \r\n- Fixed #43 \r\n- Fixed #44 \r\n- Fixed #45 \r\n- Fixed #47 \r\n- Fixed #48 \r\n- Fixed #49 \r\n- Fixed #50 \r\n- Fixed #51 \r\n- Fixed #52 \r\n- Fixed #53 \r\n- Fixed #54 \r\n- Fixed #55 \r\n- Fixed #59 \r\n\r\n# JRakNet v2.6.6  (February 21st, 2017)\r\n- Server\r\n  - Added ``handleNettyMessage()`` to allow implementation of modified protocols that do not interface with the main server protocol.\r\n  - The ``onAddressBlocked()`` method now has an argument for the reason as to why the address was blocked.\r\n  - Renamed ``sendRawMessage()`` to ``sendNettyMessage()``.\r\n  - Renamed ``handlePacket()`` to ``handleMessage()``.\r\n  - Publicized ``sendNettyMessage()``.\r\n  - Deprecated ``onAcknowledge()``.\r\n  - Deprecated ``onNotAcknowledge()``.\r\n- Client\r\n  - Added ``handleNettyMessage()`` to allow implementation of modified protocols that do not interface with the main client protocol.\r\n  - Renamed ``sendRawMessage()`` to ``sendNettyMessage()``.\r\n  - Renamed ``handlePacket()`` to ``handleMessage()``.\r\n  - Publicized ``sendNettyMessage()``.\r\n  - Deprecated ``onAcknowledge()``.\r\n  - Deprecated ``onNotAcknowledge()``.\r\n  - Removed ``UseSecurityException``.\r\n  - Removed ``EncryptionEnabledException``.\r\n- Bundles\r\n  - All server and client bundles must set the listener to themselves before starting from now on. This is what helped fix bug #38 and will also prevent confusion for newcomers in the future. An easy way to do is to call ``setListenerSelf()`` before calling ``start()``, you can even  do ``setListenerSelf().start()`` to make it fit all into one line!\r\n- Utilities\r\n  - Added documentation to the ``ByteMap``, ``ShortMap``, ``IntMap``, ``LongMap,`` and ``DynamicKey`` classes.\r\n- Examples\r\n  - Fixed broken server ID in ``RakNetServerExample`` that would cause an infinite amount of the server to appear in the MCPE server list.\r\n  - Fixed client example so that it uses the ``shutdown()`` method instead of ``System.exit()`` when it disconnects from the server.\r\n- Fixed #29 \r\n- Fixed #30 \r\n- Fixed #31 \r\n- Fixed #32 \r\n- Fixed #34\r\n- Fixed #35 \r\n- Fixed #36 \r\n- Fixed #38 \r\n- Fixed #39 \r\n- Fixed #40\r\n\r\n# JRakNet v2.5.1  (December 27th, 2016)\r\n- Exceptions\r\n  - Updated exception messages.\r\n  - Updated exception packages.\r\n- Server\r\n  - If a client attempts to rejoin the server while it is logged in, the connection is reset and the existing session is removed with the reason \"Client reinstantiated connection\".\r\n  - Finalized all server methods that do not need to be overridden by the API.\r\n  - The ``startThreaded()`` method now catches all **Throwables** instead of just ``Exception``s.\r\n  - The ``causeAddress`` for handler exceptions is now cleared after the packet has been successfully handled with no errors.\r\n  - Added ability to listen for exceptions thrown by session using the ``onSessionException()`` method.\r\n  - Renamed ``stop()`` method to ``shutdown()``.\r\n- Client\r\n  - Finalized all client methods that do not need to be overridden by the API.\r\n  - The ``startThreaded()`` method now catches all **Throwables** instead of just ``Exception``s.\r\n  - The ``causeAddress`` for handler exceptions is now cleared after the packet has been successfully handled with no errors..\r\n  - Added ability to add and remove maximum transfer unit's for more flexible login.\r\n  - Added ``sort()`` method to the ``MaximumTransferUnit`` class.\r\n  - ``RakNetClientTest`` now waits until it recieves an ``ACK`` or ``NACK`` packet before disconnecting and shutting down\r\n- Packet\r\n  - Added ``flip()`` method.\r\n  - Added ``setBuffer()`` method in Packet and RakNetPacket.\r\n- Fixed #21 \r\n- Fixed #22 \r\n- Fixed #23 \r\n- Fixed #24 \r\n- Fixed #26 \r\n- Fixed #27 \r\n- Fixed #28 \r\n\r\n# JRakNet v2.4.2  (December 17th, 2016)\r\nThis update is mostly an internal rewrite of the RakNetSession class, and the results are astounding to how much faster data sends! There are also some new features, too :)\r\n- RakNetSession\r\n  - Cleaner and now optimized to run much faster.\r\n  - Added ``setKeepAliveState()`` and ``getKeepAliveState()`` which allows for the user to set when the session should start checking to make sure the client is still alive. This is useful for games that have logins that go farther than the stock RakNet connection. An important note is that latency detection will be disabled if keep alive is also disabled (Set the keep alive state to ``-1`` to have it disabled no matter what state the session is in).\r\n  - Added ``getInetAddress()``, which returns the InetAddress of the session.\r\n  - Added ``getInetPort()``, which returns the port of the session.\r\n  - Moved some of the variables from ``RakNetSession`` to ``RakNet``.\r\n  - At the moment, ``onPacketAcknowledge()`` and ``onPacketNotAcknowledge()`` are existent functions but are never called due to how finicky they can be at the moment. I have yet to decide whether or not to deprecate these or actually implement their functionality.\r\n- RakNetServer\r\n  - Added ``onClientPreDisconnect()`` which allows the server to listen for login failures.\r\n- Protocol\r\n  - Removed acknowledge receipt support.\r\n  - Removed ``AcknowledgeReceipt`` class.\r\n  - Removed ``AcknowledgeReceiptType`` class.\r\n  - Added ``getSplitIndex()``, ``getSplitCount()``, ``getReliability()``, ``needsSplit()``, and ``splitPacket()`` methods.\r\n- Utilities\r\n  - Added the ``DynamicKey`` class, which allows keys to be easily renamed in map types that support them\r\n- Removed many unneeded \"synchronized\" method modifiers.\r\n- Fixed #14 \r\n- Fixed #15 \r\n- Fixed #16 \r\n- Fixed #17 \r\n- Fixed #20\r\n\r\n# JRakNet v2.3    (December 3rd, 2016)\r\n- Client\r\n  - Added the ability for clients to ping external servers.\r\n  - ``RakNetClient`` is now able to return it's own protocol version.\r\n- Server\r\n  - ``RakNetServer`` can now enable and disable broadcasting, it is enabled by default.\r\n- It is now possible to retrieve the release version, major version, and minor version of JRakNet through the ``RakNet`` interface.\r\n- Fixed #13\r\n\r\n# JRakNet v2.2.5  (November 27th, 2016)\r\nThis release makes some changes that I overlooked in version v2.2.4, it's not a bug fix update but more tweaks.\r\n- Changed root package from ``net.marfgamer.raknet`` to ``net.marfgamer.jraknet``.\r\n- Added documentation to some classes and methods that previously did not have it.\r\n- Removed pesky ``main(String[] args)`` methods I forget to remove after testing in non-test programs.\r\n\r\n# JRakNet v2.2.4  (November 25th, 2016)\r\nThis update is just some small features and fixes like v2.2\r\n- Client\r\n  - Client is now able to shutdown.\r\n- Session\r\n  - Added ``getLastLatency()`` method.\r\n  - ``ID_DETECT_LOST_CONNECTIONS`` is now used in place of ``CONNECTED_PING`` to make sure connections are not lost.\r\n  - Latency detection is now optional for sessions (These still use ``CONNECTED_PING``, and is enabled by default)\r\n  - Disconnection reasons are now more consistent and cleaner.\r\n- Packets\r\n  - Added ``clear() ``method, which removes all the data from the read and write buffers.\r\n  - Added the ``Failable`` interface, which is implemented by packets critical to connection or login. If the ``failed()`` method returns ``true`` after it has been encoded or decoded something has gone wrong.\r\n  - The ``writeAddress()`` and ``readAddress()`` now throw ``UnknownHostException`` instead of returning ``null`` when encountering such an error.\r\n  - Removed the ``DisconnectionNotification`` packet class.\r\n- Tests\r\n  - ``RakNetClientTest`` now calls ``disconnectAndShutdown()`` instead of ``disconnect()``.\r\n- Fixes\r\n  - Fixed #9\r\n  - Fixed #10 \r\n  - Fixed #11\r\n\r\n# JRakNet v2.2    (November 23rd, 2016)\r\nIn this release, I added a few new features and fixed some nasty bugs :)\r\nHere is the list of changes and additions to this release:\r\n- ``RakNetClient`` now implements ``RakNetClientListener``, allowing classes to extend it and act as all in one bundles!\r\n- ``RakNetServer`` now implements ``RakNetServerListener``, allowing classes to extend it and act as all in one bundles!\r\n- Packet\r\n  - Fixed IPv6 reading/writing.\r\n- Identifiers\r\n  - Fixed ``MCPEIdentifier``, timestamp should've been server GUID.\r\n  - Fixed identifier inconsistencies between tests and examples.\r\n- Examples\r\n  - Added client bundle example.\r\n  - Added server bundle example.\r\n  \r\n# JRakNet v2.1    (November 10th, 2016)\r\nThis is a minor update that adds a few new features and fixes a bug or two :)\r\n- Session\r\n  - Added ``onNotAcknowledge()`` method for ``RakNetClientListener`` and ``RakNetServerListener``\r\n- Protocol\r\n  - Fixed the ``ConnectionBanned`` (0x17) packet.\r\n  - Added ``getDataInput()`` and ``getDataOutput()`` to the ``Packet`` class, allowing them to act as input streams or output streams.\r\n- Documentation\r\n  - Removed the unnecessary ``-``s from the ``@param`` tag definitions.\r\n\r\n# JRakNet v2.0    (November 6th, 2016)\r\nJRakNet 2 has been finished, and over 7 weeks early too! This version contains all the features of the last, but improved! However, it is more reliable, has significant speed increases, and more!\r\n</details>"}
