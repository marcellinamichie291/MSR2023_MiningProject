{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/78445091", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/78445091/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/78445091/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.12.1", "id": 78445091, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4ErPoj", "tag_name": "1.12.1", "target_commitish": "main", "name": "ART 1.12.1", "draft": false, "prerelease": false, "created_at": "2022-09-28T10:49:44Z", "published_at": "2022-09-28T13:31:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.12.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.12.1", "body": "This release of ART 1.12.1 provides updates to ART 1.12.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n[None]\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed object detection estimator `PyTorchYolo` to not modify tracked statistics of batch-norm layers of the YOLO model during loss and loss gradient calculations (#1860)\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1862"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/78032240", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/78032240/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/78032240/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.12.0", "id": 78032240, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4Epq1w", "tag_name": "1.12.0", "target_commitish": "main", "name": "ART 1.12.0", "draft": false, "prerelease": false, "created_at": "2022-09-23T23:28:16Z", "published_at": "2022-09-24T00:24:25Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.12.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.12.0", "body": "This release of ART 1.12.0 introduces the first black-box adversarial patch attack, overlapping shadow datasets for membership inference, certified adversarial training, and more.\r\n\r\n# Added\r\n\r\n- Added Sleeper Agent poisoning attack in TensorFlow in `art.attacks.poisoning.SleeperAgentAttack` (#1769)\r\n- Added support for overlapping shadow models and black-box model predictions as input in membership inference attacks (#1778)\r\n- Added adversarial accuracy as a metric (#1779)\r\n- Added function `art.utils.uniform_sample_from_sphere_or_ball` to sample uniformly from either the ball or the sphere with a given norm and radii (#1804)\r\n- Added GRAPHITE, black- and white-box evasion attacks generating adversarial patches (#1828)\r\n- Added certified adversarial training (#1841)\r\n\r\n# Changed\r\n\r\n- Changed `art.attacks.evasion.DPatch` to accept true labels (#1780)\r\n- Changed `art.utils.random_sphere` to use a different, faster algorithm for norm=1 based on exponential distribution (#1805)\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n[None] \r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1856"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/76361399", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/76361399/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/76361399/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.11.1", "id": 76361399, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4EjS63", "tag_name": "1.11.1", "target_commitish": "main", "name": "ART 1.11.1", "draft": false, "prerelease": false, "created_at": "2022-09-06T09:53:39Z", "published_at": "2022-09-06T10:11:02Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.11.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.11.1", "body": "This release of ART 1.11.1 provides updates to ART 1.11.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n[None]\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed unecessary check for targeted attacks in `AdversarialPatch` and delegated check to framework-specific implementations (#1768)\r\n- Fixed missing transfer to device in `AdversarialPatchPyTorch.apply_patch()` (#1771)\r\n- Fix redundant call to detach().cpu().numpy() in `PyTorchClassifier.predict()` (#1785)\r\n- Fixed `art.utils.random_sphere()` for `norm=1` to sample uniformly in the L1 ball (#1802)\r\n- Fixed PyTorch detach() call on Numpy arrays in ` PyTorchRegressor` (#1824)\r\n- Fixed probability check for multi-dimensional arrays + out of bounds error in binning in the pointwise differential training privacy metric `PDTP` (#1825)\r\n- Fixed learning rate decay in `ElasticNet` evasion attack (#1833)\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1846"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/71086402", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/71086402/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/71086402/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.11.0", "id": 71086402, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4EPLFC", "tag_name": "1.11.0", "target_commitish": "main", "name": "ART 1.11.0", "draft": false, "prerelease": false, "created_at": "2022-07-01T09:32:09Z", "published_at": "2022-07-01T15:43:19Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.11.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.11.0", "body": "This release of ART 1.11.0 introduces estimators for YOLO object detection and regression models, the first audio poisoning attack, new query-efficient black-box evasion attacks, certified defenses against adversarial patch attacks, metrics quantifying membership inference and more. \r\n\r\n# Added\r\n\r\n- Added Momentum-Iterative FGSM evasion attack in `MomentumIterativeMethod` and added optional momentum to loss gradients in `ProjectedGradientDescent*` attacks. (#1614)\r\n- Added metrics measuring worst-case scores of membership inference attacks. (#1709)\r\n- Added estimator for YOLO v3 models in PyTorch in `PyTorchYolo`. (#1715)\r\n- Added estimators for de-randomized smoothing certification against patch attacks in `PyTorchDeRandomizedSmoothing` and `TensorFlowV2DeRandomizedSmoothing`. (#1729)\r\n- Added query-efficient hard-label black-box evasion attack Sign-Opt in `SignOPTAttack`. (#1730)\r\n- Added Sleeper Agent poisoning attack PyTorch in `SleeperAgentAttack`. (#1736)\r\n- Added exclusionary reclassification to `ActivationDefence`. (#1738)\r\n- Added dirty-label backdoor poisoning attack on audio classification in `art.attacks.poisoning.perturbations.audio_perturbations`. (#1740)\r\n- Added estimators for regression in `PyTorchRegressor` and `KerasRegressor` for PyTorch and Keras. (#1651)\r\n- Added option for targeted attacks to `AdversarialPatch` and `AdversarialPatchNumpy`. (#1759)\r\n\r\n# Changed\r\n\r\n- Changed `check_and_transform_label_format` for `nb_classes=None` to automatically determine the number of classes in the provided labels. (#1747)\r\n- Added additional documentation to `ZOOAttack` and cleaned up the code of method `compare`. (#1648)\r\n- Changed default value for number of epochs `nb_epochs` in `AdversarialTrainerMadryPGD` to match 80'000 training steps of Madry et al. (#1758)\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed `PyTorchClassifier.clone_fore_refitting` by deleting optimizer from parameters before calling `set_param()` to avoid creating the cloned model with the old optimizer. (#1742)\r\n- Fixed missing propagation of `nb_classes` to method `check_and_transform_label_format` in inference attacks. (#1713)\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1765"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/68628578", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/68628578/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/68628578/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.10.3", "id": 68628578, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4EFzBi", "tag_name": "1.10.3", "target_commitish": "main", "name": "ART 1.10.3", "draft": false, "prerelease": false, "created_at": "2022-06-04T10:16:08Z", "published_at": "2022-06-04T10:53:03Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.10.3", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.10.3", "body": "This release of ART 1.10.3 provides updates to ART 1.10.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n[None]\r\n\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed missing zeroing of gradients in PyTorch variable of the adversarial patch in `art.attacks.evasion.AdversarialTexturePyTorch` (#1724, #1726 )\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1728"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/67648143", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/67648143/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/67648143/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.10.2", "id": 67648143, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4ECDqP", "tag_name": "1.10.2", "target_commitish": "main", "name": "ART 1.10.2", "draft": false, "prerelease": false, "created_at": "2022-05-24T10:08:52Z", "published_at": "2022-05-24T10:46:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.10.2", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.10.2", "body": "This release of ART 1.10.2 provides updates to ART 1.10.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n- Changed `PyTorchClassifier` to use a new optimizer when cloned with `clone_for_refitting` (#1580)\r\n- Changed class names of `art.estimators.gan.*` and `art.estimators.generator.*` to follow naming convention (#1655)\r\n- Changed `Mp3CompressionPyTorch` and `PyTorchDeepSpeech` to add support for samples in 2D non-object arrays (#1680, #1702)\r\n- Changed file name `python_object_detector.py` to `pytorch_object_detector.py` to follow naming convention (#1687)\r\n- Changed `CarliniLInfMethod` by adding argument for `batch_size` (#1699).\r\n\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed required dependency on TensorFlow (#1655)\r\n- Fixed bug in `ImperceptibleASRPyTorch` by adding missing `.detach().cpu()` and `.cpu()` calls (#1677)\r\n- Fixed bug in `art.estimators.certification.randomized_smoothing` estimators to correctly apply Gaussian noise (#1678)\r\n- Fixed bug in `GaussianNoise` the post-processing defence to keep number of dimensions constant during normalisation (#1684)\r\n- Fixed bug in `RobustDPatch` for channels first images to correctly un-transform loss gradients (#1693)\r\n- Fixed bug in support for numpy arrays in logger of `PoisoningAttackCleanLabelBackdoor` (#1698)\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1711"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/65060692", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/65060692/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/65060692/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.10.1", "id": 65060692, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4D4L9U", "tag_name": "1.10.1", "target_commitish": "main", "name": "ART 1.10.1", "draft": false, "prerelease": false, "created_at": "2022-04-22T10:51:46Z", "published_at": "2022-04-22T11:11:56Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.10.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.10.1", "body": "This release of ART 1.10.1 provides updates to ART 1.10.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n- Changed `AdversarialTrainerMadryPGD.fit` to support arguments `nb_epochs` and `batch_size` (#1612)\r\n- Changed `GradientMatchingAttack` to add support for models with undefined input shape by abstracting the shape information from the input data (#1624)\r\n- Changed `PyTorchObjectDetector ` to support inputs with number of channels other than 1 and 3 (#1633)\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed incorrect handling of true regression labels in attribute inference attacks (#1598)\r\n- Fixed `AdversarialPatchPyTorch.apply_patch` to correctly check if `mask` is `None` (#1607)\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1647", "reactions": {"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/65060692/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/62023587", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/62023587/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/62023587/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.10.0", "id": 62023587, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4Dsmej", "tag_name": "1.10.0", "target_commitish": "main", "name": "ART 1.10.0", "draft": false, "prerelease": false, "created_at": "2022-03-16T15:14:51Z", "published_at": "2022-03-16T17:12:08Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.10.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.10.0", "body": "This release of ART 1.10.0 introduces multiple poisoning attacks on image classification and deep generative models, the first attack with dynamic patches on object tracking in videos, classification certification based on zonotope representations, EoT support for object detection in image rotation and center cropping, new features for attribute inference attacks and more.\r\n\r\n# Added\r\n\r\n- Added Gradient Matching (Witches' Brew) attack `art.attacks.poisoning.GradientMatchingAttack` in TensorFlow (#1587)\r\n- Added functions `projection_l1_1` and `projection_l1_2` to `art.utils` for two algorithms computing orthogonal projections on L1-norm balls (#1586)\r\n- Added perspective transformations to `art.attacks.evasion.AdversarialTexturePyTorch` attack to enable dynamic texture/patches (#1557)\r\n- Added support for object detection in `art.attacks.evasion.AdversarialPatchPyTorch` (#1535)\r\n- Added new features to attribute inference attacks including support for optional use of true labels in black-box attribute inference attacks, automatic calculation of values in fit() method, additional scaling method for labels/predictions and an additional attack model type (random forest) (#1534)\r\n- Added estimator `art.estimators.certification.PytorchDeepZ` based on DeepZ for robustness certification using zonotope representations datapoints (#1531)\r\n- Added Expectation over Transformation (EoT) for rotation and centre crop with support for classification and object detection (#1516)\r\n- Added support for SummaryWriter in `art.attacks.evasion.RobustDpatch` (#1513)\r\n- Added PGD L-Inf optimizer to `art.attacks.evasion.AdversarialPatch*` attacks (#1495)\r\n- Added two backdoor poisoning attacks, Red in `art.attacks.poisoning.BackdoorAttackDGMReD` and Trail in `art.attacks.poisoning.BackdoorAttackDGMTrail`, targeting Deep Generative Models (#1490)\r\n- Added Hidden Trigger Backdoor Poisoning Attack in Keras and PyTorch in `art.attacks.poisoning.HiddenTriggerBackdoor` (#1487)\r\n- Added Feature Collision Poisoning Attack in PyTorch  in `art.attacks.poisoning.FeatureCollisionAttack` (#1435 )\r\n\r\n# Changed\r\n\r\n- Changed imports of TensorFlow v2 in `TensorFlowClassifier` to support TensorFlow v1 compatibility mode (#1560)\r\n- Changed Python used for unit testing to newer versions, upgraded style checks and improved code quality (#1517)\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed import of Scipy in `PixelThreshold` attack to support `scipy>=1.8` (#1589)\r\n- Fixed bug of missing attribute in `PixelAttack` for scaled images (#1574)\r\n- Fixed use of `torchaudio.functional.magphase` in `PyTorchDeepSpeech` to support Deep Speech 2 version 3 with `torch>=1.10` (#1550)\r\n- Fixed method `fit`of `ScikitlearnRegressor` to process labels correctly (#1537)\r\n- Fixed scalar names of Indicators of Attack Failure 2 and 3 for aggregated losses (#1512)\r\n- Fixed raising of DataConversionWarning in fitting black box membership inference attacks with attack_model_type 'rf' or 'gb (#1488)\r\n\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1592"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/56612735", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/56612735/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/56612735/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.9.1", "id": 56612735, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4DX9d_", "tag_name": "1.9.1", "target_commitish": "main", "name": "ART 1.9.1", "draft": false, "prerelease": false, "created_at": "2022-01-07T13:16:59Z", "published_at": "2022-01-07T13:51:53Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.9.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.9.1", "body": "This release of ART 1.9.1 provides updates to ART 1.9.\r\n\r\n# Added\r\n\r\n- Added support for TensorFlow 1.15 as backend in `KerasClassifier.compute_loss`. (#1466)\r\n- Added support for input range [0, 1] in  `art.defences.preprocessor.VideoCompression*`. (#1470)\r\n\r\n# Changed\r\n\r\n[None]\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed bug in `art.utils.load_nursery` for loading nursery dataset with argument `raw=True`. (#1460)\r\n- Fixed import of `matplotlib` to keep it an optional dependency. (#1467)\r\n- Fixed bug to allow preprocessing defences to be applied in `PyTorchGoturn.predict` by adding back missing sample dimension. (#1470)\r\n- Fixed bug in `PyTorchClassifier.get_activations` to also apply preprocessing if argument `framework=True`. This fix likely changes the results obtained with `BullseyePolytopeAttackPyTorch`, the main attack using `framework=True`. (#1471)", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1479"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/55607162", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/55607162/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/55607162/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.9.0", "id": 55607162, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4DUH96", "tag_name": "1.9.0", "target_commitish": "main", "name": "ART 1.9.0", "draft": false, "prerelease": false, "created_at": "2021-12-18T20:54:19Z", "published_at": "2021-12-18T22:14:37Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.9.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.9.0", "body": "This release of ART 1.9.0 introduces the first evasion attack specifically designed against object tracking applications and able to distinguish foreground and background objects, the first evasion attack against image classifiers simulating attacks with laser beams on target objects, the new Summary Writer API to collect attack internal custom metrics, a defense against general poisoning attacks and tools for shadow model training to support membership inference attacks.\r\n\r\n# Added\r\n\r\n- Added tools for training shadow models and generating shadow-datasets in support of membership inference attacks in `art.attacks.inference.membership_inference.shadow_models`. (#1345, #1395)\r\n- Added hill-climbing synthetic data generation algorithm (Shokri et al., 2017) to train shadow models without access to actual data. (#1345, #1395)\r\n- Added experimental estimator for classification models in JAX in `art.experimental.estimators.classification.JaxClassifier` (#1360)\r\n- Added Deep Partition Aggregation as classification estimator in `art.estimators.classification.DeepPartitionEnsemble` to defend against general poisoning attacks (#1397)\r\n- Added Adversarial Laser Beam attack in `art.attacks.evasion.LaserAttack` as a easy to realize physical evasion attack (#1398)\r\n- Added customizable Summary Writer API in `art.summary_writer.SummaryWriter` to collect attack internal metrics in supported attacks providing collected  metrics in TensorBoard format for analysis (#1416 )\r\n- Added Indicators of Attack Failure (Pintor et al., 2021) as metrics in default summary writer `art.summary_writer.SummaryWriterDefault` (#1416)\r\n- Added Adversarial Texture Attack against object tracking models in `art.attacks.evasion.AdversarialTexturePyTorch`. The attack distinguishes foreground and background objects to create textures/patches that work even if partially covered. (#1430)\r\n\r\n# Changed\r\n\r\n- Changed implementation of Carlini & WAgner L_inf attack in `art.attacks.evasion.CarliniLInfMethod` to exactly reproduce performance of reference implementation (#1380)\r\n- Changed `art.defences.preprocessor.preprocessor.PreprocessorPyTorch` to accept `device_type` in `__init__` to set attribute `_device` for all PyTorch preprocessors in a single location (#1444)\r\n\r\n# Removed\r\n\r\n- Removed deprecated Numpy scalar type names (#1296)\r\n- Removed outdated comments in `tests.attacks.test_simba` that SimBA would not support PyTorch (#1423)\r\n\r\n# Fixed\r\n\r\n- Fixed missing support for input with more than one input image in `art.attacks.evasion.SimBA.generate`, so far only the first sample had been attacked if more than one image was provided. (#1422)\r\n- Fixed `art.attacks.poisoning.perturbations.insert_image` to preserve dtype of input images in the returned output images (#1441)\r\n- Fixed missing transformation of binary index to one-hot encoded labels in `art.utils.check_and_transform_label_format` for argument `return_one_hot=True` (#1443)\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1452"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/51442407", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/51442407/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/51442407/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.8.1", "id": 51442407, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4DEPLn", "tag_name": "1.8.1", "target_commitish": "main", "name": "ART 1.8.1", "draft": false, "prerelease": false, "created_at": "2021-10-15T15:34:38Z", "published_at": "2021-10-15T15:52:28Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.8.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.8.1", "body": "This release of ART 1.8.1 provides updates to ART 1.8.\r\n\r\n# Added\r\n\r\n- Added support for `torch.Tensor` inputs and required argument `input_shape` to `art.estimators.object_tracking.PyTorchGoturn`. (#1348)\r\n\r\n# Changed\r\n\r\n- Changed supported PyTorch version check to include `torch==1.9` and `torchvision==0.10` to exception in `art.estimators.object_detection.PyTorchObjectDetector`. (#1356)\r\n\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed docstring and cuda device support in `art.attacks.evasion.AdversarialPatchPyTorch`. (#1333)", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1363"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/50259915", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/50259915/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/50259915/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.8.0", "id": 50259915, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB3kqxs4C_ufL", "tag_name": "1.8.0", "target_commitish": "main", "name": "ART 1.8.0", "draft": false, "prerelease": false, "created_at": "2021-09-25T22:35:20Z", "published_at": "2021-09-25T23:12:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.8.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.8.0", "body": "This release of ART v1.8.0 introduces the first estimators for object tracking and regression, adds a general model-independent object detection estimator and new membership inference attacks.\r\n\r\n# Added\r\n\r\n- Added estimator for object tracker GOTURN in PyTorch in `art.estimators.object_tracking.PyTorchGoturn` (#1318)\r\n- Added estimator for scikit-learn DecisionTreeRegressor in `art.estimators.regression.ScikitlearnDecistionTreeRegressor` and added compatibility in attacks `AttributeInferenceBlackBox` and `MembershipInferenceBlackBox` (#1272)\r\n- Added general estimator for all object detection models of `torchvision` in `art.estimators.object_detection.PyTorchObjectDetector` (#1295)\r\n- Added membership inference attack based on boundary attacks with general threshold selection by Li and Zhang (#1197)\r\n\r\n# Changed\r\n\r\n- Changed `art.estimators.classification.BlackboxClassifier*` to also accept recorded input/prediction data pairs, instead of a callable providing predictions by evaluating the attacked model, enabling attacks on prediction data only without the necessity for direct access to the attacked model (#1247)\r\n- Moved patched Lingvo decoder to `art.contrib` (#1261)\r\n\r\n# Removed\r\n\r\n- Removed `art.classifiers` and `art.wappers`, both modules have been replaced with tools in `art.preprocessing.expectation_over_transformation`, `art.estimators.classification` and  `art.estimators.classification.QueryEfficientGradientEstimationClassifier` (#1256)\r\n\r\n# Fixed\r\n\r\n[None]\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1322"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/48707258", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/48707258/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/48707258/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.7.2", "id": 48707258, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ4NzA3MjU4", "tag_name": "1.7.2", "target_commitish": "main", "name": "ART 1.7.2", "draft": false, "prerelease": false, "created_at": "2021-08-30T23:11:24Z", "published_at": "2021-08-30T23:26:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.7.2", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.7.2", "body": "This release of ART 1.7.2 provides updates to ART 1.7.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n[None]\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed missing support for index labels in `PyTorchClassifier.compute_loss`. (#1264)\r\n- Fixed missing support for `float` in argument `min_epsilon` of  `BoundaryAttack`. (#1262)\r\n- Fixed support for channels first images in `art/attacks/poisoning/perturbations/image_perturbations.insert_image`. (#1290)", "reactions": {"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/48707258/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/46052756", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/46052756/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/46052756/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.7.1", "id": 46052756, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ2MDUyNzU2", "tag_name": "1.7.1", "target_commitish": "main", "name": "ART 1.7.1", "draft": false, "prerelease": false, "created_at": "2021-07-12T11:13:15Z", "published_at": "2021-07-12T12:12:56Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.7.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.7.1", "body": "This release of ART 1.7.1 provides updates to ART 1.7.\r\n\r\n# Added\r\n\r\n- Added wrapper `Mp3CompressionPyTorch` for `Mp3Compression` to make it compatible with PyTorch-specific attack implementations. (#1210)\r\n- Added new install option `non-framework` to `setup.py` to install all non-framework dependencies of ART. (#1209)\r\n- Added wrapper `VideoCompressionPyTorch` for `VideoCompression` to make it compatible with PyTorch-specific attack implementations. (#1210)\r\n\r\n# Changed\r\n\r\n- Changed `Mp3Compression` to add back reapplication of normalization to the compressed result. (#1210)\r\n- Changed `KerasClassifier.fit` to use batching provided by the method `fit` of the Keras model. (#1182)\r\n\r\n# Removed\r\n\r\n[None] \r\n\r\n# Fixed\r\n\r\n- Fixed bug of not passing user-provided device type, and instead always using default `gpu`, to standardisation preprocessor in all `PyTorchEstimator` by using user-provided device type. (#1223)\r\n- Fixed bug in method `BaseEstimator.fit_generator` for fitting generators in cases where preprocessing is defined to not apply preprocessing twice. (#1219)\r\n- Fixed bug in `ImperceptibleASRPyTorch` to prevent NaN loss value for batch size larger than 1 by removing unnecessary zero-padding. (#1198)\r\n- Fixed two bugs in `OverTheAirFlickeringPyTorch` by making sure that the regularization norms are computed over the whole batch of perturbations, rather than per sample's perturbation and second that the \"roll\" operations are performed over the batch samples, rather than over the frames. (#1192)\r\n- Fixed bug in `SpectralSignatureDefense`, that lead to rejections of all clean images, by correctly indexing the label data. (#1189)\r\n- Fixed bug of accidentally removed checks for `apply_fit` and `apply_predict` properties of framework-independent `Preprocessor` tools in `PyTorchEstimator` and `TensorFlowV2Estimator`. With the bug the `Preprocessor` tools were always applied in methods `fit` and `predict` independent of the values of `apply_fit` and `apply_predict`. (#1181)\r\n- Fixed bug in `MembershipInferenceBlackBoxRemove.infer` by removing unnecessary shuffling of the test data. (#1173)\r\n- Fixed bug in `PixelAttack` and `ThresholdAttack` by casting input data to correct dtype. (#1175)\r\n", "discussion_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/discussions/1227"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/44678230", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/44678230/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/44678230/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.7.0", "id": 44678230, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ0Njc4MjMw", "tag_name": "1.7.0", "target_commitish": "main", "name": "ART 1.7.0", "draft": false, "prerelease": false, "created_at": "2021-06-15T19:13:12Z", "published_at": "2021-06-15T22:01:59Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.7.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.7.0", "body": "This release of ART v1.7.0 introduces many new evasion and inference attacks providing support for the evaluation of malware or tabular data classification, new query-efficient black-box (GeoDA) and strong white-box (Feature Adversaries) evaluation methods. Furthermore, this release introduces an easy to use estimator for Espresso ASR models to facilitate ASR research and connect Espresso and ART. This release also introduces support for binary classification with single outputs in neural networks classifiers and selected attacks. Many more new features and details can be found below:\r\n\r\n# Added\r\n\r\n- Added LowProFool evasion attack for imperceptible attacks on tabular data classification in `art.attacks.evasion.LowProFool`. (#1063)\r\n- Added Over-the-Air-Flickering attack in PyTorch for evasion on video classifiers in `art.attacks.evasion.OverTheAirFlickeringPyTorch`. (#1077, #1102)\r\n- Added API for speech recognition estimators compatible with Imperceptible ASR attack in PyTorch. (#1052)\r\n- Added Carlini&Wagner evasion attack with perturbations in L0-norm in `art.attacks.evasion.CarliniL0Method`. (#844, #1109)\r\n- Added support for Deep Speech v3 in `PyTorchDeepSpeech` estimator. (#1107)\r\n- Added support for TensorBoard collecting evolution of norms (L1, L2, and Linf) of loss gradients per batch, adversarial patch, and total loss and its model-specific components where available (e.g. PyTochFasterRCNN) in `AdversarialPatchPyTorch`, `AdversarialPatchTensorFlow`, `FastGradientMethod`, and all `ProjectedGradientDescent*` attacks. (#1071)\r\n- Added `MalwareGDTensorFlow` attack for evasion on malware classification of portable executables supporting append based, section insertion, slack manipulation, and DOS header attacks. (#1015)\r\n- Added Geometric Decision-based Attack (GeoDA) in `art.attacks.evasion.GeoDA` for query-efficient black-box attacks on decision labels using DCT noise. (#1001)\r\n- Added Feature Adversaries framework-specific in PyTorch and TensorFlow v2 as efficient white-box attack generating adversarial examples imitating intermediate representations at multiple layers in `art.attacks.evasion.FeatureAdversaries*`. (#1128, #1142, #1156)\r\n- Added attribute inference attack based on membership inference in `art.attacks.inference.AttributeInferenceMembership`. (#1132)\r\n- Added support for binary classification with neural networks with a single output neuron in `FastGradientMethod`, and all `ProjectedGradientDescent*` attacks. Neural network binary classifiers with a single output require setting `nb_classes=2` and labels `y` in shape (nb_samples, 1) or (nb_samples,) containing 0 or 1. Backward compatibility for binary classifiers with two outputs is guaranteed with `nb_classes=2` and labels `y` one-hot-encoded in shape (nb_samples, 2). (#1118)\r\n- Added estimator for Espresso ASR models in `art.estimators.speech_recognition.PyTorchEspresso` with support for attacks with `FastGradientMethod`, `ProjectedGradientDescent` and `ImperceptibleASRPyTorch`. (#1036)\r\n- Added deprecation warnings for `art.classifiers` and `art.wrappers` to be replace with `art.estimators`. (#1154)\r\n\r\n# Changed\r\n\r\n- Changed `art.utils.load_iris` to use Iris dataset from `sklearn.datasets` instead of `archive.ics.uci.edu`. (#1097 )\r\n- Changed `HopSkipJump` to check for NaN in the adversarial example candidates and return original (benign) sample if at least one NaN is detected. (#1124)\r\n- Changed `SquareAttack` to accept user-defined loss and adversarial criterium definitions to enable black-box attacks on all machine learning tasks on images beyond classification. (#1127)\r\n- Changed `PyTorchFasterRCNN.loss_gradients` to process each sample separately to avoid issues with gradient propagation with `torch>=1.7`. (#1138)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed workaround in `art.defences.preprocessor.Mp3Compression` related to a bug in earlier versions of `pydub`. (#419)\r\n- Fixed bug in Pixel Attack and Threshold Attack for images with pixels in range [0, 1]. (#990)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/43320633", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/43320633/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/43320633/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.6.2", "id": 43320633, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQzMzIwNjMz", "tag_name": "1.6.2", "target_commitish": "main", "name": "ART 1.6.2", "draft": false, "prerelease": false, "created_at": "2021-05-20T21:46:25Z", "published_at": "2021-05-20T22:47:40Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.6.2", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.6.2", "body": "This release of ART 1.6.2 provides updates to ART 1.6.\r\n\r\n# Added\r\n\r\n- Added targeted option to `RobustDpatch` (#1069)\r\n- Added option `standardise_output` to define provided label format (#1069)\r\n- Added property `native_label_is_pytorch_format` to object detectors to define label format expected by the model (#1069)\r\n\r\n# Changed\r\n\r\n- Changed `Dpatch` and `RobustDpatch` to work internally with PyTorchFasterRCNN's object detection label format and convert labels if provided in `TensorFlowFasterRCNN`'s format accordingly using option `standardise_output` (#1069)\r\n- Change `setup.py` to only contain core dependencies in `install_requires` and added additional install options `tensorflow_image`, `tensorflow_audio`, `pytorch_image`, and `pytorch_audio` (#1116)\r\n- Changed check for version of `torch` and `torchvision` in `AdversarialPatchPyTorch` to account for suffixes like `+cu102` (#1115)\r\n- Changed `art.utils.load_iris` to use `sklearn.datasets.load_iris` instead of download from `https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data` (#1097)\r\n\r\n# Removed\r\n\r\n- Removed unnecessary requirement for `scores` in labels `y` for `TensorFlowFasterRCNN.loss_gradient` and `PyTorchFasterRCNN.loss_gradient` (#1069)\r\n\r\n# Fixed\r\n\r\n- Fixed docstrings of methods `predict` and `loss_gradient` to correctly describe the expected and provided label format (#1069)\r\n- Fixed bug of missing transfer of tensor to device `ProjectedGradientDescentPyTorch` (#1076)\r\n- Fixed bug resulting in wrong loss gradients calculated with `ScikitlearnLogisticRegression.loss_gradient` (#1065)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/41573714", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/41573714/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/41573714/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.6.1", "id": 41573714, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQxNTczNzE0", "tag_name": "1.6.1", "target_commitish": "main", "name": "ART 1.6.1", "draft": false, "prerelease": false, "created_at": "2021-04-16T22:58:24Z", "published_at": "2021-04-16T23:43:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.6.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.6.1", "body": "This release of ART 1.6.1 provides updates to ART 1.6.\r\n\r\n# Added\r\n\r\n- Added a notebook showing an example of Expectation over Transformation (EoT) sampling with ART to generate adversarial examples that are robust against rotation in image classification tasks. (#1051)\r\n- Added a check for valid combinations of `stride`, `freq_dim` and image size in `SimBA` attack. (#1037)\r\n- Added accurate gradient estimation to `LFilter` audio preprocessing. (#1002)\r\n- Added  support for multiple layers to be targeted by `BullseyePolytopeAttackPyTorch` attack to increase effectiveness in end-to-end scenarios. (#1003)\r\n- Added check and ValueError to provide explanation for too large `nb_parallel` values in `ZooAttack`. (#988)\r\n\r\n# Changed\r\n\r\n- Changed `TensorFlowV2Classifier.get_activations` to accept negative layer indexes. (#1054)\r\n- Tested `BoundaryAttack` and `HopSkipJump` attacks with `batch_size` larger than 1 and changed default value to `batch_size=64`. (#971)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed bug in `Dpatch` attack which did not update the patch, being optimised, onto the images used for loss gradient calculation leading to iterations with the constant, initially, applied patches. (#1049)\r\n- Fixed bug in `BullseyePolytopeAttackPyTorch` attack where attacking multiple layers of the underlying model only perturbed the first of all input images. (#1046)\r\n- Fixed return value of TensorFlowV2Classifier.get_activations to a list of strings. (#1011)\r\n- Fixed bug in `TensorFlowV2Classifier.loss_gradient` by adding labels to application of preprocessing step to enable EoT preprocessing steps that increase the number of samples and labels. This change does not affect the accuracy of previously calculated loss gradients. (#1010)\r\n- Fixed bug in `ElasticNet` attack to apply the `confidence` parameter when generating adversarial examples. (#995)\r\n- Fixed bug in `art.attacks.poisoning.perturbations.image_perturbations.insert_image` to correctly transpose input images when `channels_first=True`. (#1009)\r\n- Fixed bug of missing method `compute_loss` in `PyTorchDeepSpeech`, `TensorFlowFasterRCNN` and `BlackBoxClassifier`. (#994, #1000)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/39894924", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/39894924/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/39894924/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.6.0", "id": 39894924, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM5ODk0OTI0", "tag_name": "1.6.0", "target_commitish": "main", "name": "ART 1.6.0", "draft": false, "prerelease": false, "created_at": "2021-03-16T14:27:36Z", "published_at": "2021-03-16T17:32:26Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.6.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.6.0", "body": "This release of ART v1.6.0 introduces with the clean-label poisoning attack Bullseye Polytope, a baseline attribute inference attack, and a PyTorch-specific implementation of Adversarial Patch attack with perspective transformation sampling, new evaluation tools in the three different threats types of poisoning, inference and evasion. Furthermore, this release contains the first set of Expectation over Transformation (EoT) preprocessing tools for image processing and natural corruptions.\r\n\r\n# Added\r\n\r\n- Added the Bullseye Polytope clean-label poisoning attack in `art.attacks.poisoning.BullseyePolytopeAttackPyTorch` (#962)\r\n- Added the Pointwise Differential Training Privacy (PDTP) metric measuring training data membership leakage of trained model in `art.metrics.PDTP` (#958)\r\n- Added a attribute inference base line attack `art.attacks.inference.attribute_inference.AttributeInferenceBaseline` defining a minimal attribute inference performance that can be achieved without access to the evaluated model (#956)\r\n- Added a first set of Expectation over Transformation (EoT) preprocessing in `art.preprocessing.expectation_over_transformation` for image processing and natural image corruptions including brightness, contrast, Gaussian noise, shot noise, and zoom blur. These EoTs enable sampling multiple transformed samples in each forward pass and are fully differentiable for accurate loss gradient calculation in PyTorch and TensorFlow v2. They can be chained together in sequence and are implemented fully framework-specific (#919)\r\n- Added a function for image trigger perturbations blending images (#913)\r\n- Added a method `insert_transformed_patch` to all adversarial patch attacks `art.attacks.evasion.AdversarialPatch*` applying adversarial patches onto a perspective transformed square defined by the coordinates of its four corners (#891)\r\n- Added the Adversarial Patch attack framework-specific in PyTorch in `art.attacks.evasion.AdversarialPatchPyTorch` with additional functionality to support sampling over perspective transformations (#876)\r\n\r\n# Changed\r\n\r\n- Changed handling of NaN values in loss gradients in `art.attacks.evasion.FastGradientMethod` and `art.attacks.evasion.ProjectedGradientDescent*` by replacing NaN values with 0.0 and log a warning message. This should prevent losing expensive attack runs in late iterations and still return an adversarial example, but log a warning to alert the user. (#883)\r\n- Changed permitted ranges for `eps_step` and `eps` in `art.attacks.evasion.ProjectedGradientDescent*` to allow `eps_step` to be larger than `eps` for all norms, allow `eps_step=np.inf` to immediately project towards the norm ball or clip_values, and support `eps=0.0` to run the attack without any attack budget. The latter two changes are intended to facilitate the verification of attack setups. (#882)\r\n- Changed in the unit tests the marker `skipMlFramework` to `skip_framework` and the pytest argument `mlFramework` to `framework` (#961)\r\n- Changed `art.preprocessing.standardisation_mean_std` for standardisation with `mean` and `std` to provide extended support for broadcasting by automatically adapting 1-dimensional arrays for `mean` and `std` to be broadcastable on NCHW inputs (#839)\r\n- Changed `art.estimators.object_detection.PyTorchFasterRCNN.loss_gradient` to not overwrite the input label array with tensors (#954)\r\n- Changed and automated the setting of model states by removing method `set_learning_phase` from all estimators and automating setting the model into the most likely appropriate state for each operation in methods `predict` (eval mode, `training_mode=False`) , `fit` (train mode, `training_mode=True`) , `loss_gradient` (eval mode) , `class_gradient`(eval mode) , etc. The default is defined by a new method argument `training_mode` which can be changed for example for debugging purposes. An exception are RNN-type models in PyTorch where `loss_gradient` and `class_gradient` will run the model in train mode but freeze the model's batch-norm and dropout layers if `training_mode=False`. (#781)\r\n- Changed `art.attacks.evasion.BoundaryAttack` in normal (L282) and a suboptimal (L287) termination to return the adversarial example candidate with the smallest norm of the perturbation instead of returning the first adversarial example candidate in its list, this will facilitate the finding the minimum L2 perturbation adversarial examples (#948)\r\n- Changed `art.attacks.inference.attribute_inference.AttributeInferenceBlackBox` to support one-hot encoded features that have been scaled and lie in-between 0 and 1 instead of just 0 and 1 (#927)\r\n- Changed imports of `tensorflow` in TensorFlow v1 specific tools to enable backward compatibility and application with TensorFlow v2 (#880)\r\n- Changed optimizer of `art.attacks.evasion.AdversarialPatchTensorFlowV2` from `SGD` to `Adam` for better performance (#878)\r\n- Changed `art.attacks.evasion.BrendelBethgeAttack` to include support for `numba`, following the reference implementation, which leads to great acceleration of the attack (#868)\r\n- Changed `art.estimators.classification.ScikitlearnClassifier` and all model specific scikit-learn estimators to provide the new argument `use_logits` to define returning probability or logit predictions in their methods `predict` (#872)\r\n- Changed metrics `clever_t` and depending on it `clever` and `clever_u` to reduce long runtimes by computing the class gradients of all samples in `rand_pool` before looping through the batches. To reduce the risk of `ResourceExhasutedError`, batching is now also applied on `rand_pool` to compute class gradients on smaller batches of size `pool_factor` (#762)\r\n\r\n# Removed\r\n\r\n- Removed deprecated argument and property `channel_index` from all estimators. `channel_index` has been replaced by `channels_first`. (#869)\r\n\r\n# Fixed\r\n\r\n- Fixed the criterion of targeted `art.attacks.evasion.BoundaryAttack` to now correctly check that adversarial predictions are different from the original image prediction during sampling instead of the same (#948)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/39771175", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/39771175/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/39771175/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.5.3", "id": 39771175, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM5NzcxMTc1", "tag_name": "1.5.3", "target_commitish": "main", "name": "ART 1.5.3", "draft": false, "prerelease": false, "created_at": "2021-03-13T21:37:57Z", "published_at": "2021-03-14T00:14:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.5.3", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.5.3", "body": "This release of ART 1.5.3 provides updates to ART 1.5.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n- Changed argument names of `art.attacks.evasion.ImperceptibleASR`, `art.attacks.evasion.ImperceptibleASRPyTorch` and `art.attacks.evasion.CarliniWagnerASR` where necessary to use the same names in all three attacks. (#955, #959)\r\n- Changed optimisation in `art.attacks.evasion.ImperceptibleASRPyTorch` to use `torch.float64` instead of `torch.float32` to prevent NaN as loss value. (#931)\r\n- Changed `art.attacks.evasion.ImperceptibleASR` to improve the psychoacoustic model and stabilize the imperceptible loss by switching to librosa's STFT and using scalar PSD maximum. (#930)\r\n- Changed `art.attacks.evasion.ImperceptibleASR` to use periodic window for STFT instead symmetric window option. (#930)\r\n- Changed `art.attacks.evasion.ImperceptibleASR` with early stopping if loss theta < 0.05 to avoid running into gradients with NaN values. (#930)\r\n- Changed `art.attacks.evasion.ImperceptibleASRPyTorch` to reset its optimisers for each internal batch in method `generate` to guarantee the same optimiser performance on each batch, this is especially important for adaptive optimisers. (#917)\r\n- Changed `art.attacks.evasion.ImperceptibleASRPyTorch` to use `torch.stft` instead of `torchaudio.transforms.Spectrogram` to correctly compute the spectrogram. (#914)\r\n- Changed `art.estimators.speech_recognition.PyTorchDeepSpeech` to freeze batch-norm layers of the Deep Speech model in method `loss_gradient` to obtain gradients using dataset statistics instead of batch statistics and avoid changing dataset statistics of the batch-norm layers with each call. (#912)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed bug of missing argument `model` in `art.estimators.object_detection.TensorFlowFasterRCNN` which caused instantiation to fail. (#951)\r\n- Fixed bug of missing square in calculation of loss and class gradients for `art.estimators.classification.ScikitlearnSVC` using Radial Basis Function (RBF) kernels. (#921)\r\n- Fixed missing support for `preprocessing=None` in `art.estimators.BaseEstimator`. (#916)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/38343591", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/38343591/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/38343591/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.5.2", "id": 38343591, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM4MzQzNTkx", "tag_name": "1.5.2", "target_commitish": "main", "name": "ART 1.5.2", "draft": false, "prerelease": false, "created_at": "2021-02-19T23:53:35Z", "published_at": "2021-02-20T01:11:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.5.2", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.5.2", "body": "This release of ART 1.5.2 provides updates to ART 1.5.\r\n\r\n# Added\r\n\r\n- Added new method `reset_patch` to `art.attacks.evasion.adversarial_patch.*` to reset patch (#863)\r\n- Added passing `kwargs` to internal attacks of  `art.attacks.evasion.AutoAttack` (#850)\r\n- Added `art.estimators.classification.BlackBoxClassifierNeuralNetwork` as black-box classifier for neural network models (#849)\r\n- Added support for `channels_first=False ` for `art.attacks.evasion.ShadowAttack` in PyTorch (#848)\r\n\r\n# Changed\r\n\r\n- Changed Numpy requirements to be less strict to resolve conflicts in dependencies (#879)\r\n- Changed estimator requirements for `art.attacks.evasion.SquareAttack` and `art.attacks.evasion.SimBA` to include `NeuralNetworkMixin` requiring neural network models (#849)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed `BaseEstimator.set_params` to set `preprocessing` and `preprocessing_defences` correctly by accounting for `art.preprocessing.standardisation_mean_std` (#901)\r\n- Fixed support for CUDA in `art.attacks.inference.membership_inference.MembershipInferenceBlackBox.infer` (#899)\r\n- Fixed return in `art.preprocessing.standardisation_mean_std.StandardisationMeanStdPyTorch` to maintain correct dtype (#890)\r\n- Fixed type conversion in `art.evaluations.security_curve.SecurityCurve` to be explicit (#886)\r\n- Fixed dtype in `art.attacks.evasion.SquareAttack` for `norm=2` to maintain correct type (#877)\r\n- Fixed missing `CarliniWagnerASR` in `art.attacks.evasion` namespace (#873)\r\n- Fixed support for CUDA i `art.estimators.classification.PyTorchClassifier.loss (#862)\r\n- Fixed bug in `art.attacks.evasion.AutoProjectedGradientDescent` for targeted attack to correctly detect successful iteration steps and added robust stopping criteria if loss becomes zero (#860)\r\n- Fixed bug in initialisation of search space in  `art.attacks.evasion.SaliencyMapMethod` (#843)\r\n- Fixed bug in support for video data in `art.attacks.evasion.adversarial_patch.AdversarialPatchNumpy` (#838)\r\n- Fixed bug in logged success rate of `art.attacks.evasion.ProjectedGradientDescentPyTorch` and `art.attacks.evasion.ProjectedGradientDescentTensorFlowV2` to use correct labels (#833)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/36169391", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/36169391/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/36169391/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.5.1", "id": 36169391, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM2MTY5Mzkx", "tag_name": "1.5.1", "target_commitish": "main", "name": "ART 1.5.1", "draft": false, "prerelease": false, "created_at": "2021-01-09T01:16:26Z", "published_at": "2021-01-09T02:02:53Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.5.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.5.1", "body": "This release of ART 1.5.1 provides updates to ART 1.5.\r\n\r\n# Added\r\n\r\n- Added an option to select to probability values for model extraction attacks in addition to index labels in `art.attacks.extraction.CopycatCNN` and `art.attacks.extraction.KnockoffNets`. (#825)\r\n- Added a new notebook demonstrating model extraction attacks and defences. (#825)\r\n- Added `art.attacks.evasion.CarliniWagnerASR` as a special case of `art.attacks.evasion.ImperceptibleASR` where `max_iter_stage_2=0` skipping the second stage of the `ImperceptibleASR`. (#784)\r\n\r\n# Changed\r\n\r\n- Changed method `generate` of `art.attacks.evasion.ProjectedGradientDescentPyTorch` and `art.attacks.evasion.ProjectedGradientDescentTensorFlowV2` to create a copy of the input data to guard the input data from being overwritten by a model that unexpectedly overwrites its input data. This change follows the implementation of  `art.attacks.evasion.ProjectedGradientDescentNumpy` and provides an extra layer of protection against unexpected model behavior. (#805)\r\n- Change numerical precision in `art.attacks.evasion.Wasserstein` from `float` to `double` to reduce numerical overflow in `numpy.log` and replace input pixel values of 0 with EPS_LOG=10^-10 to prevent division by zero in `numpy.log`. (#780)\r\n- Changed `tqdm` imports to use `tqdm.auto` to automatically run its Jupyter widgets where supported. (#799)\r\n- Improved documentation, argument value checks and added support for index labels in `art.attacks.inference.member_ship.LabelOnlyDecisionBoundary`. (#790)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed bug in `art.estimators.classification.KerasClassifier.custom_loss_gradient()` to support `keras` and `tensorflow.keras`. (#810)\r\n- Fixed bug in `art.attacks.evasion.PixelThreshold.generate` to correctly scale images in range [0, 255]. (#802)\r\n- Fixed bug in `art.attacks.evasion.PixelThreshold` to run CMA Evolution Strategy `max_iter` iterations instead of 1 iteration. (#802)\r\n- Fixed bug in `art.estimators.object_detection.PyTorchFasterRCNN` by adding missing argument `model` in super().__init__. (#789)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/34609897", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/34609897/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/34609897/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.5.0", "id": 34609897, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0NjA5ODk3", "tag_name": "1.5.0", "target_commitish": "main", "name": "ART 1.5.0", "draft": false, "prerelease": false, "created_at": "2020-12-01T00:45:19Z", "published_at": "2020-12-01T01:59:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.5.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.5.0", "body": "# Added \r\n\r\n- Added a new module `art.evaluations` for evaluation tools that go beyond creating adversarial examples and create insights into the robustness of machine learning models beyond adversarial accuracy and build on `art.estimators` and `art.attacks` as much as possible. The first implemented evaluation tool is `art.evaluations.SecurityCurve` which calculates the security curve, a popular tool to evaluate robustness against evasion, using `art.attacks.evasion.ProjectedGradientDescent` and provides evaluation of potential gradient masking in the evaluated model. (#654) \r\n\r\n- Added support for perturbation masks in `art.attacks.evasion.AutoProjectedGradientDescent` similar as in `art.attacks.evasion.ProjectedGradientDescent` and added Boolean masks for patch location sampling in `Dpatch` and all `AdversarialPatch` attacks to enable pixel masks defining regions where patch locations are sampled from during patch training or where trained patches can be applied. \r\n\r\n- Added preprocessing for Infinite (IIR) and Finite Impulse Response (FIR) filtering for Room Acoustics Modelling in framework-agnostic (`art.preprocessing.audio.LFilter`) and PyTorch-specific (`art.preprocessing.audio.LFilterPyTorch`) implementations as the first tool for physical environment simulation for audio data in `art.preprocessing.audio`. Additional tools will be added in future releases. (#744) \r\n\r\n- Added Expectation over Transformation (EoT) to `art.preprocessing.expectation_over_transformation` with a first implementation of sampling image rotation for classification tasks framework-specific for TensorFlow v2 (`art.preprocessing.expectation_over_transformation.EOTImageRotationTensorFlowV2`) providing full support for gradient backpropagation through EoT. Additional EoTs will be added in future releases. (#744)\r\n\r\n- Added support for multi-modal inputs in `ProjectedGradientDescent` attacks and `FastGradientMethod` attack with broadcastable arguments `eps` and `eps_step` as `np.ndarray` to enable attacks against, for example, images with multi-modal color channels. (#691) \r\n\r\n- Added Database Reconstruction attack in the new module `art.attacks.inference.reconstruction.DatabaseReconstruction` enabling evaluation of the privacy of machine learning models by reconstructing one removed sample of the training dataset. The attack is demonstrated in a new notebook on models trained non-privately and with differential privacy using the Differential Privacy Library ([DiffPrivLib](https://github.com/IBM/differential-privacy-library)) as defense. (#759) \r\n\r\n- Added support for one-hot encoded feature definition in black-box attribute inference attacks. (#768) \r\n\r\n- Added a new model-specific speech recognition estimator for Lingvo ASR in `art.estimators.speech_recognition.TensorFlowLingvoASR`. (#584) \r\n\r\n- Added a framework-independent implementation of the Imperceptible ASR attack with loss support for TensorFlow and PyTorch in `art.attacks.evasion.ImperceptibleASR`. (#719, #760) \r\n\r\n- Added Clean Label Backdoor poisoning attack in `art.attacks.poisoning.PoisoningAttackCleanLabelBackdoor`. (#725) \r\n\r\n- Added Strong Intentional Perturbation (STRIP) defense against poisoning attacks in `art.defences..transformer.poisoning.STRIP`. (#656) \r\n\r\n- Added Label-only Boundary Distance Attack `art.attacks.inference.membership_inference.LabelOnlyDecisionBoundary` and Label-only Gap Attack `art.attacks.inference.membership_inference.LabelOnlyGapAttack` for membership inference attacks on classification estimators. (#720) \r\n\r\n- Added support for preprocessing and preprocessing defences in the PyTorch-specific implementation of the Imperceptible ASR attack in `art.attacks.evasion.ImperceptibleASRPyTorch`. (#763) \r\n\r\n- Added a robust version of evasion attack DPatch in `art.attacks.evasion.RobustDPatch` against object detectors by adding improvements like expectation over transformation steps, fixed patch location, etc. (#751) \r\n\r\n- Added optional support for Automatic Mixed Precision (AMP) in `art.estimators.classification.PyTochClassifier` to facilitate mix-precision computations and increase performance. (#619) \r\n\r\n- Added the Brendel & Bethge evasion attack in `art.attacks.evasion.BrendelBethgeAttack` based on the original reference implementation. (#626) \r\n\r\n- Added framework-agnostic support for Randomized Smoothing estimators in addition to framework-specific implementations in TensorFlow v2 and PyTorch. (#738) \r\n\r\n- Added an optional progress bar to `art.utils.get_file` to facilitate downloading large files. (#698) \r\n\r\n- Added support for perturbation masks in HopSkipJump evasion attack in `art.attacks.evasion.HopSkipJump`. (#653) \r\n\r\n# Changed \r\n\r\n- Changed preprocessing defenses and input standardisation with mean and standard deviation by combining all preprocessing into a single preprocessing API defined in the new module `art.preprocessing`. Existing preprocessing defenses remain in `art.defences.preprocessor`, but are treated as equal and run with the same API and code as general preprocessing tools in `art.preprocessing`. The standardisation is now a preprocessing tool that is implemented framework-specific for PyTorch and TensorFlow v2 in forward and backward direction. Estimators for `art.estimators.classification` and `art.estimators.object_detection` in TensorFlow v2 and PyTorch set up with all framework-specific preprocessing steps will prepend the preprocessing directly to the model to evaluate output and backpropagate gradients in a single step through the model and (chained) preprocessing instead of previously two separate steps for improved performance. Framework independent preprocessing tools will continue to be evaluated in a step separate from the model. This change also enable full support for any model-specific standardisation/normalisation functions for the model inputs and their gradients. (#629) \r\n\r\n- Changed `Preprocessor` and `Postprocessor` APIs to simplify them by defining reused methods and the most common property values as defaults in the API. The default for `art.defences.preprocessor.preprocessor.Preprocessor.estimate_gradient` in framework-agnostic preprocessing is Backward Pass Differentiable Approximation (BPDA) with identity function, which can be customized with accurate or better approximations by implementing `estimate_gradient`. (#752) \r\n\r\n- Changed random restarts in all `ProjectedGradientDescent` implementations to collect the successful adversarial examples of each random restart instead of previously only keeping the adversarial examples of the most successful random restart. Adversarial examples of previous random restart iterations are overwritten by adversarial examples of later random restart iterations. This leads to equal or better adversarial accuracies compared to previous releases and changes the order of processing the input samples to first complete all random restarts of a batch before processing the next batch instead of looping over all batches in each random restart. (#765) \r\n\r\n- Changed order of mask application and normalization of the perturbation in all `ProjectedGradientDescent` and `FastGradientMethod` attacks to now first apply the mask to the `loss_gradients` and subsequently normalize only the remaining, un-masked perturbation. That way the resulting perturbation can directly be compared to the attack budget `eps`. (#711) \r\n\r\n- Changed location of implementation and default values of properties `channels_first`, `clip_values`, and `input_shape` in `art.estimators` to facilitate the creation of customs estimators not present in `art.estimators`. \r\n\r\n- Changed Spectral Signature Defense by removing argument `num_classes` and replacing it with the estimator\u2019s `nb_classes` property and renaming parameter `ub_pct_poison` to `expected_pp_poison`. (#678) \r\n\r\n- Changed the ART directory path for datasets and model data stored in `ART_DATA_PATH` to be configurable after importing ART. (#701) \r\n\r\n- Changed preprocessing defence `art.defences.preprocessor.JpegCompression` to support any number of channels in addition to the already supported inputs with 1 and 3 channels. (#700)\r\n\r\n- Changed calculation of perturbation and direction in `art.attacks.evasion.BoundaryAttack` to follow the reference implementation. These changes result in faster convergence and smaller perturbations. (#761)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed bug in definition and application of norm `p` in cost matrix in Wasserstein evasion attack `art.attacks.evasion.Wasserstein` present in the reference implementation. (#712) \r\n\r\n- Fixed handling of fractional batches in Zeroth Order Optimization (ZOO) attack in `art.attacks.evasion.ZOOAttack` to prevent errors caused by shape mismatches for batches smaller than `batch_size`. (#755)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/34255479", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/34255479/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/34255479/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.4.3", "id": 34255479, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0MjU1NDc5", "tag_name": "1.4.3", "target_commitish": "main", "name": "ART 1.4.3", "draft": false, "prerelease": false, "created_at": "2020-11-21T01:08:34Z", "published_at": "2020-11-21T01:23:37Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.4.3", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.4.3", "body": "This release of ART v1.4.3 provides updates to ART 1.4.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n- Changed argument `y` of method `infer` of `art.attacks.inference.attribute_inference.AttributeInferenceBlackBox` from optional to required. (#750)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed bug in `art.data_generators.PyTorchDataGenerator` and `art.data_generators.MXDataGenerator` where method `get_batch` always returned the same first batch of the dataset to return different batches for each method call by iterating over the entire dataset. (#731)\r\n- Fixed format of return value of method `infer` of `art.attacks.inference.membership_inference.MembershipInferenceBlackBox` for  `attack_model_type=\"nn\"`. (#741)\r\n\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/33455649", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/33455649/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/33455649/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.4.2", "id": 33455649, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMzNDU1NjQ5", "tag_name": "1.4.2", "target_commitish": "main", "name": "ART 1.4.2", "draft": false, "prerelease": false, "created_at": "2020-11-04T13:17:58Z", "published_at": "2020-11-04T14:27:03Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.4.2", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.4.2", "body": "This release of ART v1.4.2 provides updates to ART 1.4.\r\n\r\n# Added\r\n\r\n- Added implementation of method `loss` for `art.estimators.classification.TensorFlowClassifer`. (#685)\r\n- Added support for variable length input to `art.defences.preprocessor.MP3Compression` to make it compatible with estimator `art.estimators.speech_recognition.PyTorchDeepSpeech`. (#684)\r\n- Added support for `mask` in non-classification tasks with `art.attacks.evasion.ProjectedGradientDescent`. (#682)\r\n- Added support for `torch.Tensor` as input for `loss_gradient` of `art.estimators.object_detection.PyTorchFasterRCNN`. (#679)\r\n- Added support for `art.attacks.evasion.ProjectedGradientDescent` and `art.attacks.evasion.FasGradientMethod` attacks on `art.estimators.speech_recognition.PyTorchDeepSpeech`. (#669)\r\n- Added exception and explanation if target labels are not provided in `generate` of `art.attacks.evasion.ImperceptibleASRPytorch`. (#677)\r\n- Added support for preprocessing defences in `art.estimators.speech_recognition.PyTorchDeepSpeech`. (#663)\r\n- Added support for type `List` in argument `patch_shape` of `art.attacks.evasion.DPatch`. (#662)\r\n- Added support for option `verbose` to all `art.attacks` and `art.defences` to adjust output of progress bars. (#647)\r\n\r\n# Changed\r\n\r\n- Changed `art.attacks.evasion.AutoProjectedGradientDescent` to to support estimators for classification of all frameworks using the estimator's loss function, to use the new method `loss` of the Estimator API replacing internal custom loss functions and to disable for now the loss type `difference_logits_ratio` for `art.estimators.classification.TensorFlowClassifer` (TensorFlow v1.x) because of inaccurate loss calculation. (#685)\r\n- Changed default format of returned values of method `predict` in `art.estimators.speech_recognition.PyTorchDeepSpeech` from a tuple of probabilities and sequence lengths to an array of transcriptions (array of predicted strings) which is the same format as labels `y` and the returned values of other estimators in `art.estimators.speech_recognition`. The former output can still be obtained with option `transcription_output=False`. This change also enables using `PyTorchDeepSpeech` with `ProjectedGradientDescent` and `FastGradientMethod` in cases where no labels are provided to their method `generate` and these attacks use the labels predicted by `PyTorchDeepSpeech`'s method predict. (#689)\r\n- Changed `art.attacks.evasion.DPatch` to improve initialisation of the patch for input ranges other than [0, 255] and updated the iteration over batches. (#681)\r\n- Changed `art.attacks.evasion.DPatch` to accept the updated return format of method `predict` of estimators in `art.estimators.object_detection`. (#667)\r\n- Changed return format of method `predict` of estimators in `art.estimators.object_detection` to follow the format of `art.estimators.object_detection.PyTorchFasterRCNN` and type `np.ndarray`. (#660)\r\n\r\n# Removed\r\n\r\n- Removed unsupported argument `loss_scale` in `art.estimators.speech_recognition.PyTorchDeepSpeech`. (#642)\r\n\r\n# Fixed\r\n\r\n- Fixed missing setting of property `targeted` in `art.attacks.evasion.ImperceptibleASRPytorch`. (#676)\r\n- Fixed bug in method `loss` of `art.estimators.classification.KerasClassifier`. (#651)\r\n- Fixed missing attribute `batch_size` in `art.attacks.evasion.SquareAttack`. (#646)\r\n- Fixed missing imports in `art.estimators.object_detection.TensorFlowFasterRCNN`. (#648)\r\n- Fixed bug in `art.attacks.evasion.ImperceptibleASRPytorch` to correctly apply `learning_rate_2nd_stage` instead of `learning_rate_1st_stage` in the second stage. (#642)\r\n\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/32110225", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/32110225/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/32110225/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.4.1", "id": 32110225, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMyMTEwMjI1", "tag_name": "1.4.1", "target_commitish": "main", "name": "ART 1.4.1", "draft": false, "prerelease": false, "created_at": "2020-10-02T19:51:31Z", "published_at": "2020-10-02T20:14:06Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.4.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.4.1", "body": "This release of ART v1.4.1 provides updates to ART 1.4.\r\n\r\n# Added\r\n\r\n- Added a notebook demonstrating the Imperceptible ASR evasion attack on the DeepSpeech model for speech recognition tasks. (#639)\r\n\r\n\r\n# Changed\r\n\r\n- Changed the detection of Keras type (`keras` vs. `tensorflow.keras`) in `art.estimators.classification.KerasClassifier` to enable customised models inheriting from the Keras base models (#631) \r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed bug in model-specific estimator for DeepSpeech `art.estimators.speech_recognition.PyTorchDeepSpeech` to correctly handle the case of batches of samples with identical length including the special case of a batch of a single sample. (#635)\r\n- Fixed bug in model-specific estimator for DeepSpeech `art.estimators.speech_recognition.PyTorchDeepSpeech`  by adding missing imports (#621)\r\n- Fixed bug to make all tools of ART accessible using `import art` (#612)\r\n- Fixed bug by removing top-level imports of tool-specific dependencies and adapting default values (#613)\r\n- Fixed wrong progress bar description in `art.attacks.evasion.projected_gradient_descent.*` from iterations to batches (#611)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/31581706", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/31581706/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/31581706/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.4.0", "id": 31581706, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMxNTgxNzA2", "tag_name": "1.4.0", "target_commitish": "main", "name": "ART 1.4.0", "draft": false, "prerelease": false, "created_at": "2020-09-20T21:06:28Z", "published_at": "2020-09-20T22:24:47Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.4.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.4.0", "body": "This release of ART v1.4.0 introduces framework-specific preprocessing defences, Membership Inference attacks, and support for attacks on Automatic Speech Recognition (ASR) tasks to ART. This release also adds and improves multiple evasion and poisoning attacks and defenses.\r\n\r\n# Added\r\n\r\n- Added framework-specific preprocessing defences for PyTorch and TensorFlow v2 in all estimators. This extends the preprocessing defences of ART beyond the framework-independent implementations in Numpy of earlier ART versions and enables to use the automatic differentiation of a framework to pass accurate loss gradients backwards through the preprocessing defences. Furthermore this also adds first framework-specific implementations of preprocessing Spatial Smoothing defences in PyTorch and TensorFlow v2, `art.defences.preprocessor.SpatialSmoothingPyTorch` and `art.defences.preprocessor.SpatialSmoothingTensorFlowV2`. (#510, #574) \r\n- Added Membership Inference attacks to evaluate leaks of information about individual training data records`art.attacks.inference.membership_inference` (#573)\r\n- Added Neural Cleanse defense against poisoned models. This is the first transformation defense against poisoning which accept a potentially poisoned model and returns a transformed version of the model defended against the effects of the poisoning `art.defences.transformer.poison.NeuralCleanse` (#604)\r\n- Added Imperceptible ASR evasion attack against Automatic Speech Recognition in Pytorch `art.attacks.evasion.ImperceptibleASRPytorch` (#605)\r\n- Added Adversarial Embedding poisoning attack `art.attacks.poisoning.PoisoningAttackAdversarialEmbedding` (#561)\r\n- Added new framework- and model-specific estimator for DeepSpeech in PyTorch `art.estimators.speech_recognition.PyTorchDeepSpeech` (#581)\r\n- Added support for string type for infinity norm in evasion attacks to facilitate serialisation of arguments (#575)\r\n- Added support for targeted attack in `art.attacks.evasion.AutoAttack` (#494)\r\n- Added targeted version of `DPatch` evasion attack against object detectors `art.attacks.evasion.DPatch` (#599)\r\n- Added property `targeted` to evasion attacks representing if attack is targeted `art.attacks.EvasionAttack` (#500)\r\n- Added new framework- and model-specific estimator for Faster-RCNN in TensorFlow `art.estimators.object_detection.TensorFlowFasterRCNN` (#487)\r\n- Added `ShapeShifter` evasion attack against object detectors `art.attacks.evasion.ShapeShifter` (#487)\r\n- Added Simple Black-box Adversarial (SimBA) evasion attack `art.attacks.evasion.SimBA` (#469)\r\n\r\n# Changed\r\n\r\n- Changed progress bars to adversarial trainer and Projected Gradient Descent implementations (#603)\r\n- Changed import paths of Attribute Inference and Model Inversion attacks (#592)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed bug in Thermometer Encoding preprocessor defense and extended it to support channels first data and video data formats (#591)\r\n- Fixed denormalizing in `create_generator_layers` in `utils/resources/create_inverse_gan_models.py` (#491)\r\n\r\n\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/29996051", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/29996051/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/29996051/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.3.3", "id": 29996051, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5OTk2MDUx", "tag_name": "1.3.3", "target_commitish": "main", "name": "ART 1.3.3", "draft": false, "prerelease": false, "created_at": "2020-08-21T19:32:20Z", "published_at": "2020-08-21T19:59:57Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.3.3", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.3.3", "body": "This release of ART 1.3.3 provides updates to ART 1.3.\r\n\r\n# Added\r\n\r\n- Added support for rectangular images and videos (with square and rectangular frames) to the attacks in `art.attacks.evasion.adversarial_patch.AdversarialPatch`. The framework-independent implementation `AdversarialPatchNumpy` supports videos of shape `NFCHW` or `NFHWC` and the framework-specific implementation for TensorFlow v2 `AdversarialPatchTensorFlowV2` supports videos of shape `NFHWC`. For video data the same patch will be located at the same position on all frames. (#567)\r\n- Added a warning to `ShadowAttack` to inform users that this implementation currently only works on a single sample in a batch size of one. (#556)\r\n\r\n\r\n# Changed\r\n\r\n- The `Dockerfile` will now automatically check if `requirements.txt` contains newer versions of the dependencies.\r\n- Changed the CLEVER metric `art.metric.clever_t` to only calculate required class gradients which results in a speed up of a factor of ~4. (#539)\r\n- Changed the metric `art.metrics.wasserstein_distance` to automatically flatten the weights of the two inputs. (#545)\r\n- Changed `art.attacks.evasion.SquareAttack` to use model predictions if true labels are not provided to method `generate` to follow the convention of the other attacks in ART. (#537)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed method `set_params` in `art.attacks.evasion.projected_gradient_descent.ProjectedGradientDescent` to correctly update the attributes of the parent class. The attributes of the actual attack implementation have been set correctly before this fix. (#560)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/29466054", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/29466054/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/29466054/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.3.2", "id": 29466054, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5NDY2MDU0", "tag_name": "1.3.2", "target_commitish": "main", "name": "ART 1.3.2", "draft": false, "prerelease": false, "created_at": "2020-08-07T19:03:53Z", "published_at": "2020-08-07T21:28:28Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.3.2", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.3.2", "body": "This release of ART 1.3.2 provides updates to ART 1.3.1.\r\n\r\n# Added\r\n\r\n- Added verbose parameter for `CarliniL2Method`, `CarliniLInfMethod`, and `DeepFool` attacks to disable progress bars.\r\n\r\n# Changed\r\n\r\n- Changed the `Wasserstein` attack to support rectangular images as input (#527) \r\n- Changed `UniversalPerturbation` attack to use true labels if provided in internal attacks (#526)\r\n- Allow `None` as input for parameter `preprocessing of estimators (#493)\r\n- Allow `eps` to be larger than `eps_step` in `ProjectedGradientDescent` attacks if norm is not `np.inf` (#495)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed import path for `ProjectedGradientDescend` option in `UniversalPerturbation` attack (#525)\r\n- Fixed support for arrays as `clip_values` in `ProjectedGradientDescentPyTorch` attack for PyTorch (#521)\r\n- Fixed success criteria for targeted attacks with `AutoProjectedGradientDescend` (#513)\r\n- Fixed success criteria for attacks used in `AutoAttack` (#508)\r\n- Fixed example for Fast-is-better-than-Free adversarial training (#506)\r\n- Fixed dtype in `AutoProjectedGradientDescent` and `SquareAttack` for testing output type of estimator (#499)\r\n- Fixed parameters in `_augment_images_with_patch` calls of attack `DPatch` (#493)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/27831144", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/27831144/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/27831144/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.3.1", "id": 27831144, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI3ODMxMTQ0", "tag_name": "1.3.1", "target_commitish": "master", "name": "ART 1.3.1", "draft": false, "prerelease": false, "created_at": "2020-06-23T13:27:50Z", "published_at": "2020-06-23T14:17:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.3.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.3.1", "body": "This release of ART 1.3.1 provides updates to ART 1.3.0.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n- Changed the method `fit` of the deep-learning classifiers `KerasClassifier`, `TensorFlowClassifier`, `TensorFlowV2Classifier`, `PyTorchClassifier`, and `MXClassifier` in `art.estimators.classification` to support index labels in addition to one-hot-encoded labels. (#479)\r\n- Changed the preprocessing defence `art.defences.preprocessing.Mp3Compression` to support input in format `np.float32` in addition to `np.int16` and updated related notebooks. (#482)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed `art.attacks.evasion.DeepFool` to correctly apply the over-shoot step, previously the over-shoot vector was alwasy zero independent of `epsilon`. (#476)\r\n- Fixed method `set_params` for attacks with multiple framework-specific implementations (`art.attacks.evasion.AdversarialPatch`, and `art.attacks.evasion.ProjectedGradientDescent`) to set attributes correctly and updated related notebooks, previously these set attributes would have been ignored by the attack. (#481)\r\n\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/27569407", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/27569407/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/27569407/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.3.0", "id": 27569407, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI3NTY5NDA3", "tag_name": "1.3.0", "target_commitish": "master", "name": "ART 1.3.0", "draft": false, "prerelease": false, "created_at": "2020-06-15T18:19:57Z", "published_at": "2020-06-15T19:17:58Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.3.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.3.0", "body": "This release of ART v1.3.0 is extending ART to a library for machine learning security covering Evasion, Poisoning, Extraction and Inference. The Inference module is a new addition and includes implementations of attribute inference and model inversion attacks. A new Estimator API has been implemented and extends ART 1.3.0 from a library for classification tasks towards a library supporting all possible machine learning tasks including object detection. Multiple state-of-the-art attacks and defenses have been implemented. The READMEs have been redesigned and new Wiki pages have been created.\r\n\r\n# Added\r\n\r\n- Added a new Estimator API `art.estimators` to abstract machine learning models in ART. It is replacing the previous Classifier API `art.classifiers`. The new Estimators API is flexible and extensible to support all possible machine learning tasks. The estimator API currently contains implementations for classification, object detection, certification, encoding, generation models. (#350)\r\n- Added a framework-specific and model-specific estimator implementation for PyTorch FasterRCNN (torchvision.model.detection.fasterrcnn_resnet50_fpn` as first object detector estimator. All object detector estimators currently support DPatch, ProjectedGradientDescent, BasicIterativeMethod, and FastGradientMethod evasion attacks. (#350)\r\n- Add a new type of attacks with Inference in `art.attacks.inference` and first implementations of Attribute Inference and Model Inversion attacks (#439, #428)\r\n- Added progress bars using `tqdm` to all attacks and defenses to provide information about progress to the user. (#447)\r\n- Added install options to `setup.py` for frameworks and complete installs. So far ART only installed general non-framework dependencies. This update provides complete install for options all, tensorflow, pytorch, keras, mxnet, xgboost, lightgm, catboost, gpy, and docs. (#446)\r\n- Added dependabot.yml to use GitHub\u2019s Dependabot to propose updates to ART\u2019s dependencies. (#449)\r\n- Added AutoAttack as a new evasion attack. AutoAttack applies a group of white- and back-box attacks (default: AutoPGD with cross-entropy and with difference-logits-ratio loss, SquareAttack, DeepFool) and is an attack approach that achieves state-of-the-art performance in defense evaluations. (#400)\r\n- Added Auto Projected Gradient Descent (AutoPGD) as a new evasion attack. AutoPGD adapts its step size to guarantee increasing loss in each step. (#400)\r\n- Added SquareAttack as a new evasion attack. SquareAttack is a black-box attack based on random search and achieves white-box performance. (#400)\r\n- Added ShadowAttack as new evasion attack. ShadowAttack creates large, but naturally looking perturbations that can to spoof certificates of classifiers certified for example by Randomised Smoothing. (#409)\r\n- Added Wasserstein Attack as a new evasion attack. Wasserstein Attack generates adversarial examples with minimized Wasserstein distances which allow large Lp perturbations in still naturally looking examples. (#422)\r\n- Added DefenceGAN and InverseGAN as new preprocessor defenses. These defenses are based on Generative Adversarial Networks to remove adversarial perturbations. (#411)\r\n- Added the adversarial training protocol Fast Is Better Than Free as a trainer defense for PyTorch models. The Fast Is Better Than Free protocol allows very fast training of adversarially robust models. (#435)\r\n- Added H.264/MPEG-4 AVC video compression as preprocessor defense. This defense attempts to remove adversarial perturbations with compression of video data. (#438)\r\n- Added Feature Collision Clean Label attack as a new poisoning attack for KerasClassifier. This attack allows poisoning the training of a model without modifying the training labels just by adding a modified training example. (#389)\r\n- Added support for custom loss gradients at any layer of neural network in KerasClassifier. This method allows very sophisticated loss functions to create adversarial examples that imitate the feature representation of benign samples at any layer of the neural networks. Support of this method will be extended to other frameworks in future releases. (#389)\r\n- Added framework-specific implementations of ProjectedGradientDescent (PGD) evasion attack for TensorFlow v2 and PyTorch. It follows a new concept in ART where an attack implementation based on Numpy, if available, is compatible with all frameworks and framework-specific implementations can be added that take full advantage of a certain framework and only must support ART estimators for this framework. This enables ART to provide attack implementations that run as fast and accurate as possible and it will facilitate integration of original implementations by the attacks\u2019 creators without the need to translate them into implementations based on Numpy. (#390)\r\n- Added utilities for deprecation of methods and arguments. (#421)\r\n- Added new metric for Wasserstein distance. (#410)\r\n- Added the Spectral Signature Defense as a new detector defense against poisoning. This defense uses spectral signatures to detect and defeat backdoor attacks. (#398)\r\n- Added Mp3 compression as a new preprocessor defense. This defense attempts to remove adversarial perturbations in audio data using MP3 compression. (#391)\r\n- Added resampling as a new preprocessor defense. This defense attempts to remove adversarial perturbations in audio data by resampling the data. (#397)\r\n- Added Feature Adversaries attack as a new evasion attack. This attack generates adversarial examples that minimize the difference in feature representation to a benign sample at a certain layer of a neural networks. (#364)\r\n- Added DPatch as new evasion attack against object detectors. This attack creates digital patches that draw the attention of object detectors to the patch area to prevent the detection of object outside of the patched area. (#362)\r\n- Added a new Docker image providing installations of all machine learning frameworks supported by ART and the dependencies of ART. (#386)\r\n- Added a new method to check a model for obfuscated/vanishing/masked gradients. (#376)\r\n- Added a framework-specific implementation of the AdversarialPatch physical evasion attack for TensorFlow v2. This implementation provides more accurate loss gradients than the Numpy implementation. (#357)\r\n- Added Frame Saliency Attack as a new evasion attack. This attack creates adversarial examples with sparse and imperceptible perturbations, primarily intended for video data. (#358)\r\n- Added Python typing to all source files of ART and a mypy check to all Travis CI runs. (#425)\r\n\r\n# Changed\r\n\r\n- Extended notebooks demonstrating attacks and defenses with audio and video data. (#463)\r\n- Changed `KerasClassifier` to accept wildcards in the models input shape. (#458)\r\n- Deactivated the gradients computation during model evaluation in `PyTorchClassifier.predict` which accelerates the prediction by a factor of ~2 or more. (#452)\r\n- Changed `art.defence.detector.poison.ActivationDefence` to also support data provided with `art.data_generators` to support datasets larger than the available memory. (#442)\r\n- Changed default value of `apply_predict` for `art.defences.preprocessor.JpegCompression` to True to apply it during prediction by default. (#440)\r\n- Removed smoothing factor in tanh to original transformation in `CarliniL2Method` and `CarliniLInfMethod` attacks to prevent input values that are extremely close to either of the clip values to be transformed to values outside of the clip values. (#428)\r\n- Changed `art.defences.preprocessor.SpatialSmoothing` preprocessor defense to support video data. (#415)\r\n- Changed `art.defences.preprocessor.JpegCompression` preprocessor defense to support video data. (#412)\r\n- Changed copyright notice to \u201cThe Adversarial Robustness Toolbox (ART) Authors\u201d and listed original copyright holders in new file AUTHORS. (#406)\r\n- Changed internal format of `clip_values` from tuple of `int` or `float` to `numpy.nadarray` with `dtpye=np.float32`. (#392)\r\n- Moved poison detection defences to new module `art.defences.detector.poison`. (#399)\r\n- Moved Randomized Smoothing from wrapper `art.wrappers` to new estimators in module `art.estimators.certification` for TensorFlow and PyTorch and removed `art.wrappers.RandomizedSmoothing`. (#409)\r\n\r\n# Removed\r\n\r\n- Deprecated argument `channel_index` of `art.classifiers` and replaced it with argument `channels_first` in `art.estimators`. The new argument `channels_first` follows usage in the frameworks to describe as a Boolean if the channels dimension is the first or last dimension of a sample. The argument `channel_index` will be removed after ART 1.4. (#429)\r\n\r\n# Fixed\r\n\r\n- Fixed several bugs in `ThermometerEncoding` preprocessor defense, implementing the correct forward pass and implemented `estimate_gradients` to provide gradients in the original space instead of the discretized/encoded space. (#467, #468)\r\n- Fixed bug in Boundary Attack to ensure that the adversarial example is projected back to the sphere in each iteration. (#426)\r\n- Fixed memory leak in `KerasClassifier.get_activations` by reusing the Keras function calculating the activations. (#417)\r\n- Fixed RGB-BGR conversion bug in Boundary attack notebook. (#402)\r\n- Fixed bug in `ActivationDefence` for RGB images. (#388)\r\n- Fixed bug in `PixelAttack` and `ThresholdAttack` to now return the benign image if no adversarial example has been found. (#384)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/24540952", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/24540952/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/24540952/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.2.0", "id": 24540952, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0NTQwOTUy", "tag_name": "1.2.0", "target_commitish": "master", "name": "ART 1.2.0", "draft": false, "prerelease": false, "created_at": "2020-03-15T19:16:28Z", "published_at": "2020-03-15T19:30:31Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.2.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.2.0", "body": "This release of ART v1.2.0 introduces new APIs and implementations of model transforming, model training and output post-processing defences, along with new APIs and implementations of poisoning attacks and new implementations of evasion and extraction attacks. Furthermore, ART now also supports Pandas Dataframe as input to its classifier and attack methods.\r\n\r\n# Added\r\n\r\n- Added support for Pandas Dataframe as input to Classifiers and Attacks in addition to numpy.ndarray enabling defences and attacks on models expecting dataframes as input (#244)\r\n- Started a collection of notebooks of adversarial robustness evaluations by adding the evaluation of the EMPIR defence (#319)\r\n- Added an example notebook for adversarial attacks on video data classification (#321)\r\n- Added an example notebook for adversarial attacks on audio data classification (#271)\r\n- Added Backdoor Poisoning Attack (#292)\r\n- Added new API for Transformer defences (#293)\r\n- Added Defensive Distillation as a transformation defence (#293)\r\n- Added new API for Trainer defences (#)\r\n- Added Madry's Protocol for adversarial training as training defence (#294)\r\n- Added new API for Postprocessor defences (#267)\r\n- Added KnockoffNets as extraction attack (#230)\r\n- Added Few Pixel Attack as evasion attack (#280)\r\n- Added Threshold Attack as evasion attack (#281)\r\n- Added option for random epsilon as parameter to the projected gradient descent attack which selects the epsilon from a truncated normal distribution ranging [0, eps] with sigma of eps/2 (#257)\r\n\r\n# Changed\r\n\r\n- Started to refactor the unittests. The tests of `KerasClassifier`, `TensorFlowClassifier`, `TensorFlowV2Classifier`, `Boundary attack` and `Fast Gradient Method` have been moved to the new testing system based on pytest with the other tests planned to follow in future releases. (#270)\r\n- `Boundary` and `HopSkipJump` attack work now with non-square images (#288)\r\n- Applied Black style formatting\r\n- `PyTorchClassifier` now allows the user to select a specific GPU (#290)\r\n- The classifiers now accept soft-labels (probabilities) as input in their `fit` methods in addition to hard-labels (one-hot encoded or index labels) (#251)\r\n- Integrated the post-processing defences into the classifiers following the pre-processing defences (#267)\r\n- Run unittests with TensorFlow everywhere in v2 mode instead of compatibility mode (#264)\r\n- Updated Poisoning attack API (#305)\r\n- Increased definitions of test requirements (#302)\r\n\r\n# Removed\r\n\r\n- Removed implementations of post-processing defences as classifier wrappers (#267)\r\n\r\n# Fixed\r\n\r\n- Improved the logging of unitttests (#227)\r\n- Updated method `fit_generator` in all neural network classifiers (#323)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/23499197", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/23499197/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/23499197/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.1.1", "id": 23499197, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzNDk5MTk3", "tag_name": "1.1.1", "target_commitish": "master", "name": "ART 1.1.1", "draft": false, "prerelease": false, "created_at": "2020-02-08T01:11:18Z", "published_at": "2020-02-08T02:12:25Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.1.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.1.1", "body": "This release of ART v1.1.1 fixes two bugs in `TensorFlowV2Classifier` and `KerasClassifier`.\r\n\r\n# Added\r\n\r\n[None]\r\n\r\n# Changed\r\n\r\n[None]\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed a bug in `TensorFlowV2Classifier` resulting in incorrect loss calculation for loss_gradients except for `tensorflow.keras.losses.SparseCategoricalCrossentropy`. (#279)\r\n- Fixed a bug in `KerasClassifier` that allowed predicting the model with wrong input data shapes without raising any exceptions. We have now added checks for input data shape or are using the model's predict method where possible. This bug did not affect any classifier evaluated with the correct input data shape expected by the model. (#283)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/22664389", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/22664389/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/22664389/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.1.0", "id": 22664389, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIyNjY0Mzg5", "tag_name": "1.1.0", "target_commitish": "master", "name": "ART 1.1.0", "draft": false, "prerelease": false, "created_at": "2020-01-08T00:06:01Z", "published_at": "2020-01-08T00:57:01Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.1.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.1.0", "body": "This release of ART v1.1.0 introduces a new class of attacks and defences for model extraction threats in addition to the existing attacks and defences for evasion and poisoning, enables top level package import of ART, and includes a Kubeflow component demonstrating an example application of ART for robustness evaluation of machine learning models.\r\n\r\n# Added\r\n\r\n- Added separate base classes for evasion, extraction, and poisoning attacks (#250)\r\n- Added the Functionally Equivalent Extraction attack for neural networks with two dense layers and ReLU activation (#231)\r\n- Added the Copycat CNN extraction attack (#232)\r\n- Added defences against model extraction attacks including output modification with reverse sigmoid, random noise, class labels, and high confidence (#234)\r\n- Added support for top level package import to enable `import art` (#240)\r\n- Added references to current limitations of defences (#228)\r\n- Added version to the ART package (#239)\r\n- Added a Kubeflow component using ART to run a robustness evaluation of PyTorch models with FGSM. This is a simple example and does not intend to represent a comprehensive robustness evaluation. (#206)\r\n- Added class gradients to `art.classifiers.ScikitlearnSVC` to enable targeted white-box attacks on SVM (#215)\r\n- Added checks to all classifiers raising an exception if the input data is of format `np.uint8`, `np.uint16`, `np.uint32`, or `np.uint64` to avoid unexpected outcomes during input preprocessing (#226)\r\n- Added support for Keras 2.3 and later with TensorFlow v2 as backend (#200)\r\n\r\n# Changed\r\n\r\n- Changed the Fast Gradient Sign Method attack minimal perturbation implementation to prevent it from modifying the original input data (#213)\r\n- Changed the reporting of attack success rates to always report percentages across all attacks (#202) \r\n- Changed and improved the detection of the loss function in `KerasClassifier` (#212)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed a bug in the logging configuration (#190)\r\n- Fixed a bug in the HCLU attack by replacing the hard-coded confidence parameter (#228)\r\n- Fixed a bug in `TensorFlowV2Classifier` by adding the missing attribute `_input_shape` (#249)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/20549974", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/20549974/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/20549974/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.0.1", "id": 20549974, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwNTQ5OTc0", "tag_name": "1.0.1", "target_commitish": "master", "name": "ART 1.0.1", "draft": false, "prerelease": false, "created_at": "2019-10-08T14:07:23Z", "published_at": "2019-10-08T14:34:00Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.0.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.0.1", "body": "This release of ART 1.0.1 accounts for initial user feedback on v1.0.0\r\n\r\n# Added\r\n\r\n- add support for binary logistic regression with `sklearn.linear_model.LogisticRegression` in addition to the existing support for multi-class logistic regression (#171)\r\n\r\n# Changed\r\n\r\n- extended exception messages inside of attacks checking for valid combinations of attacks and classifiers to provide better explanations of the reason for the raised exception (#174)\r\n\r\n- update Travis unit-testing to use TensorFlow 2.0.0 (#183)\r\n\r\n# Removed\r\n\r\n[None]\r\n\r\n# Fixed\r\n\r\n- Fixed an issue in `art.attacks.PoisoningAttackSVM`where sometimes a certain class label wouldn't create unique poison points (#168)\r\n\r\n- Fixed typos in README (#170, #184)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/19959252", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/19959252/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/19959252/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/1.0.0", "id": 19959252, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5OTU5MjUy", "tag_name": "1.0.0", "target_commitish": "master", "name": "ART 1.0.0", "draft": false, "prerelease": false, "created_at": "2019-09-12T18:54:27Z", "published_at": "2019-09-12T23:29:59Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/1.0.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/1.0.0", "body": "This is the first major release of the Adversarial Robustness 360 Toolbox (ART v1.0)!\r\n\r\nThis release generalises ART to support all possible classifier models, in addition to its existing support for neural networks. Furthermore, it generalises the label format, to accept index labels as well as one-hot encoded labels, and the input shape, to accept, for example, tabular data as input features. This release also adds new model-specific white-box and poisoning attacks and provides new methods to certify and verify the adversarial robustness of neural networks and decision tree ensembles.\r\n\r\n# Added\r\n\r\n- Add support for all classifiers and pipelines of scikit-learn including but not limited to `LogisticRegression`, `SVC`, `LinearSVC`, `DecisionTreeClassifier`, `AdaBoostClassifier`, `BaggingClassifier`, `ExtraTreesClassifier`, `GradientBoostingClassifier`, `RandomForestClassifier`, and `Pipeline`. (#47)\r\n\r\n- Add support for gradient boosted tree classifier models of `XGBoost`, `LightGBM` and `CatBoost`.\r\n\r\n- Add support for TensorFlow v2 (rc0) by introducing a new classifier `TensorFlowV2Classifier` providing support for eager execution and accepting callable models. `KerasClassifier` has been extended to provide support for TensorFlow v2 `tensorflow.keras` Models without eager execution. (#66)\r\n\r\n- Add support for models of the Gaussian Process framework GPy. (#116)\r\n\r\n- Add the High-Confidence-Low-Uncertainty (HCLU) adversarial example formulation as an attack on Gaussian Processes. (#116)\r\n\r\n- Add the Decision Tree attack as a white-box attack for decision tree classifiers (#115)\r\n\r\n- Add support for white-box attacks on scikit-learn\u2019s `LogisticRegression`, `SVC`, `LinerSVC`, and `DecisionTreeClassifier`, as well as `GPy` and black-box attacks on all scikit-learn classifiers and XGBoost, LightGBM and CatBoost models.\r\n\r\n- Add Randomized Smoothing as wrapper class for neural network classifiers to provide certified adversarial robustness under the L2 norm. (#114)\r\n\r\n- Add the Clique Method Robustness Verification method for decision-tree-ensemble classifiers and extend it for models of XGBoost, LightGBM, and scikit-learn's `ExtraTreesClassifier`, `GradientBoostingClassifier`, `RandomForestClassifier`. (#124)\r\n\r\n- Add `BlackBoxClassifier` expecting only a single Python function as interface to the classifier predictions. This is the most general and versatile classifier of ART. New tutorial notebooks demonstrate `BlackBoxClassifier` testing the adversarial robustness of remote, deployed classifier models and of the Optical Character Recognition (OCR) engine Tesseract. (#123, #152)\r\n\r\n- Add the Poisoning Attack for Support Vector Machines with linear, polynomial or radial basis function kernels. (#155)\r\n\r\n# Changed\r\n\r\n- Introduce a new flexible API for all classifiers with an abstract base class for basic classifiers (minimal functionality to support black-box attacks), and mixins for neural networks, gradient-providing classifiers (to support white-box attacks), and decision-tree-based classifiers.\r\n\r\n- Update, extend and introduce new get started examples and notebook tutorials for all supported frameworks. (#47, #140)\r\n\r\n- Extend label format to accept index labels in addition to the already supported one-hot-encoded labels. Internally ART continues to treat labels as one-hot-encoded. This feature allows users of ART to use the label format preferred by their machine learning framework and datasets. (#126)\r\n\r\n- Change the order of the preprocessing steps of applying defences and standardisation/normalisation in classifiers. So far the classifiers first applied standardisation followed by defences. With this release the defences will be applied first followed by standardisation to enable comparable defence parameters across classifiers with different standardisation/normalisation parameters. (#84)\r\n\r\n- Use the `batch_size` of an attack as argument to the method `predict` of its classifier to reduce out-of-memory errors for large models. (#105 )\r\n\r\n- Generalize the classifiers of TensorFlow, Keras, PyTorch, and MXNet by removing assumptions on their output (logits or probabilities). The Boolean parameter `logits` has been removed from Classifier API in methods `predict` and `class_gradient`. The predictions and gradients are now computed at the output of the model without any modifications. (#50, #75, #106, #150)\r\n\r\n- Rename `TFClassifier` to `TensorFlowClassifier` and keep `TFClassifier` for backward compatibility.\r\n\r\n# Removed\r\n\r\n- Sunset support for Python 2 in preparation for its retirement on Jan 1, 2020. We have stopped running unittests with Python 2 and do not require new contributions to run with Python 2. We keep existing compatibility code for Python 2 and 3 where possible. (#83)\r\n\r\n# Fixed\r\n\r\n- Improve `VirtualAdversarialMethod` by making the computation of the L2 data normalisation more reliable and raising an exception if it is used with a model providing logits as output. Currently, `VirtualAdversarialMethod` is expecting probabilities as output. (#120, #157)"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/18591219", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/18591219/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/18591219/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.10.0", "id": 18591219, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE4NTkxMjE5", "tag_name": "0.10.0", "target_commitish": "master", "name": "ART 0.10.0", "draft": false, "prerelease": false, "created_at": "2019-07-12T22:21:57Z", "published_at": "2019-07-12T23:58:15Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.10.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.10.0", "body": "This release contains contains new black-box attacks, detectors, updated attacks and several bug fixes.\r\n\r\n# Added\r\n* Added HopSkipJump attack, a powerful new black-box attack (#80)\r\n* Added new example script demonstrating the perturbation of a neural network layer between input and output (#92)\r\n* Added a notebook demonstrating `BoundaryAttack`\r\n* Added a detector based on Fast Generalized Subset Scanning (#100)\r\n\r\n# Changed\r\n* Changed Basic Iterative Method (BIM) attack to be a special case of Projected Gradient Descent attack with `norm=np.inf` and without random initialisation (#90)\r\n* Reduced calls to method predict in attacks `FastGradientMethod` and `BasicIterativeMethod` to improve performance (#70)\r\n* Updated pretrained models in notebooks with on-demand downloads of the pretrained models (#63, #88)\r\n* Added batch processing to `AdversarialPatch` attack (#96)\r\n* Increased Tensorflow versions in unit testing on Travis CI to 1.12.3, 1.13.1, and 1.14.0 (#94)\r\n* Attacks are now accepting the argument `batch_size` which is used in calls to `classifier.predict` within the attack replacing the default batch_size=128 of `classifier.predict` (#105)\r\n* Change order of preprocessing defences and standardisation in classifiers, now defences are applied on the provided input data and standardisation (preprocessing argument of classifier) is applied after the defences (#84 \r\n* Update all defences to account for clip_values (#84)\r\n\r\n# Removed\r\n* Removed pretrained models in directory `models` used in notebooks and replaced with ondemand downloads (#63, #88)\r\n* Removed argument `patch_shape` from attack `AdversarialPatch` (#77)\r\n* Stopped unit testing for Python 2 on Travis CI (#83)\r\n\r\n# Fixed\r\n* Fixed all Pylint and LGTM alerts and warnings (#110)\r\n* Fixed broken links in notebooks (#63, #88)\r\n* Fixed broken links to imagenet data in notebook `attack_defense_imagenet` (#109)\r\n* Fixed calculation of attack budget `eps` by accounting for initial benign sample in projection to eps-ball for random initialisation in `FastGradientMethod` and `BasicIterativeMethod` (#85)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/17464743", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/17464743/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/17464743/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.9.0", "id": 17464743, "author": {"login": "beat-buesser", "id": 49047826, "node_id": "MDQ6VXNlcjQ5MDQ3ODI2", "avatar_url": "https://avatars.githubusercontent.com/u/49047826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beat-buesser", "html_url": "https://github.com/beat-buesser", "followers_url": "https://api.github.com/users/beat-buesser/followers", "following_url": "https://api.github.com/users/beat-buesser/following{/other_user}", "gists_url": "https://api.github.com/users/beat-buesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/beat-buesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beat-buesser/subscriptions", "organizations_url": "https://api.github.com/users/beat-buesser/orgs", "repos_url": "https://api.github.com/users/beat-buesser/repos", "events_url": "https://api.github.com/users/beat-buesser/events{/privacy}", "received_events_url": "https://api.github.com/users/beat-buesser/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NDY0NzQz", "tag_name": "0.9.0", "target_commitish": "master", "name": "ART 0.9.0", "draft": false, "prerelease": false, "created_at": "2019-05-20T14:42:01Z", "published_at": "2019-05-20T14:45:27Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.9.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.9.0", "body": "This release contains breaking changes to attacks and defences with regards to setting attributes, removes restrictions on input shapes which enables the use of feature vectors and several bug fixes.\r\n\r\n\r\n# Added\r\n\r\n- implement pickle for classifiers `tensorflow` and `pytorch` (#39)\r\n- added example `data_augmentation.py` demonstrating the use of data generators\r\n\r\n# Changed\r\n\r\n- renamed and moved tests (#58)\r\n- change input shape restrictions, classifiers accept now any input shape, for example feature vectors; attacks requiring spatial inputs are raising exceptions (#49)\r\n- clipping of data ranges becomes optional in classifiers which allows attacks to accept unbounded data ranges (#49)\r\n- [Breaking changes] class attributes in attacks can no longer be changed with method `generate`, changing attributes is only possible with methods `__init__` and `set_params`\r\n- [Breaking changes] class attributes in defenses can no longer be changed with method `generate`, changing attributes is only possible with methods `__call__` and `set_params`\r\n- resolved inconsistency in PGD random_init with Madry's version\r\n\r\n# Removed\r\n\r\n- deprecated static adversarial trainer `StaticAdversarialTrainer`\r\n\r\n\r\n# Fixed\r\n\r\n- Fixed bug in attack ZOO (#60)\r\n"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/17078231", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/17078231/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/17078231/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.8.0", "id": 17078231, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3MDc4MjMx", "tag_name": "0.8.0", "target_commitish": "master", "name": "ART 0.8.0", "draft": false, "prerelease": false, "created_at": "2019-04-30T20:34:06Z", "published_at": "2019-04-30T21:18:58Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.8.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.8.0", "body": "This release includes **new evasion attacks**, like ZOO, boundary attack and the adversarial patch, as well as the capacity to break non-differentiable defences.\r\n\r\n### Added\r\n* ZOO black-box attack (class `ZooAttack`)\r\n* Decision boundary black-box attack (class `BoundaryAttack`)\r\n* Adversarial patch (class `AdversarialPatch`)\r\n* Function to estimate gradients in `Preprocessor` API, along with its implementation for all concrete instances.\r\nThis allows to break non-differentiable defences.\r\n* Attributes `apply_fit` and `apply_predict` in `Preprocessor` API that indicate if a defence should be used at training and/or test time\r\n* Classifiers are now capable of running a full backward pass through defences\r\n* `save` function for TensorFlow models\r\n* New notebook with usage example for the adversarial patch\r\n* New notebook showing how to synthesize an adversarially robust architecture (see ICLR SafeML Workshop 2019: **Evolutionary Search for Adversarially Robust Neural Network** by M. Sinn, M. Wistuba, B. Buesser, M.-I. Nicolae, M.N. Tran)\r\n\r\n### Changed\r\n* [Breaking change] Defences in classifiers are now to be specified as `Preprocessor` instances instead of strings\r\n* [Breaking change] Parameter `random_init` in `FastGradientMethod`, `ProjectedGradientDescent` and `BasicIterativeMethod` has been renamed to `num_random_init` and allows now to specify the number of random initialization to run before choosing the best attack\r\n* Possibility to specify batch size when calling `get_activations` from `Classifier` API"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/16479636", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/16479636/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/16479636/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.7.0", "id": 16479636, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NDc5NjM2", "tag_name": "0.7.0", "target_commitish": "master", "name": "ART 0.7.0", "draft": false, "prerelease": false, "created_at": "2019-04-01T15:10:36Z", "published_at": "2019-04-01T15:32:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.7.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.7.0", "body": "This release contains a **new poison removal method**, as well as some restructuring of features recently added to the library.\r\n\r\n### Added\r\n- Poisoning fixing method performing retraining as part of the `ActivationDefence` class\r\n- Example script of how to use the poison removal method\r\n- New module `wrappers` containing features that alter the behaviour of a `Classifier`. These are to be used as wrappers for classifiers and to be passed directly to evasion attack instances.\r\n\r\n### Changed\r\n- `ExpectationOverTransformations` has been moved to the `wrappers` module\r\n- `QueryEfficientBBGradientEstimation` has been moved to the `wrappers` module\r\n\r\n### Removed\r\n- Attacks no longer take an `expectation` parameter (breaking). This has been replaced by a direct call to the attack with an `ExpectationOverTransformation` instance.\r\n\r\n### Fixed\r\n- Bug in spatial transformations attack: when attack does not succeed, original samples are returned now (issue #40, fixed in #42, #43)\r\n- Bug in Keras with loss functions that do not take labels in one-hot encoding (issue #41)\r\n- Bug fix in activation defence against poisoning: incorrect test condition\r\n- Bug fix in DeepFool: inverted stop condition when working with batches\r\n- Import problem in `utils.py`: top level imports were forcing users to install all supported ML frameworks"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/16079682", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/16079682/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/16079682/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.6.0", "id": 16079682, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MDc5Njgy", "tag_name": "0.6.0", "target_commitish": "master", "name": "ART 0.6.0", "draft": false, "prerelease": false, "created_at": "2019-03-12T21:27:21Z", "published_at": "2019-03-13T08:03:40Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.6.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.6.0", "body": "### Added\r\n- PixelDefend defense\r\n- Query-efficient black-box gradient estimates (NES)\r\n- A general wrapper for classifiers allowing to change their behaviour (see `art/classifiers/wrapper.py`)\r\n- 3D plot in visualization\r\n- Saver for `PyTorchClassifier`\r\n- Pickling for `KerasClassifier`\r\n- Representation for all classifiers\r\n\r\n### Changed\r\n- We now use pretrained models for unit tests (see `art/utils.py`, functions `get_classifier_pt`, `get_classifier_kr`, `get_classifier_tf`)\r\n- Keras models now accept any loss function\r\n\r\n### Removed\r\n- `Detector` abstract class. Detectors now directly extend `Classifier`\r\n\r\nThanking also our external contributors!\r\n@AkashGanesan "}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15323076", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15323076/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15323076/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.5.0", "id": 15323076, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1MzIzMDc2", "tag_name": "0.5.0", "target_commitish": "master", "name": "ART 0.5.0", "draft": false, "prerelease": false, "created_at": "2019-02-01T18:06:29Z", "published_at": "2019-02-01T18:58:15Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.5.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.5.0", "body": "This release of ART adds two new evasion attacks, provides some bug fixes, as well as some new features, like access to the learning phase (training/test) through the `Classifier` API, batching in evasion attacks and expectation over transformations.\r\n\r\n### Added\r\n- Spatial transformations evasion attack (class `art.attacks.SpatialTransformations`)\r\n- Elastic net (EAD) evasion attack (class `art.attacks.ElasticNet`)\r\n- Data generator support for multiple types of TensorFlow iterators\r\n- New function and property to the Classifier API that allow to explicitly control the learning phase (train/test)\r\n- Reports for poisoning module\r\n- Most evasion attacks now support batching, this is specified by the new parameter `batch_size`\r\n- `ExpectationOverTransformations` class, to be used with evasion attacks\r\n- Parameter `expectation` of evasion attacks allows to specify the use of expectation over transformations\r\n\r\n### Changed\r\n- Update list of attacks supported by universarl perturbation\r\n- PyLint and Travis configs\r\n\r\n### Fixed\r\n- Indexing error in C&W L_2 attack (issue #29)\r\n- Universal perturbation stop condition: attack was always stopping after one iteration\r\n- Error with data subsampling in `AdversarialTrainer` when the ratio of adversarial samples is 1"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15162209", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15162209/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15162209/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.4.0", "id": 15162209, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1MTYyMjA5", "tag_name": "0.4.0", "target_commitish": "master", "name": "ART 0.4.0", "draft": false, "prerelease": false, "created_at": "2018-12-19T17:40:13Z", "published_at": "2019-01-24T15:47:55Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.4.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.4.0", "body": "### Added\r\n- Class `art.classifiers.EnsembleClassifier`: support for ensembles under `Classifier` interface\r\n- Module `art.data_generators`: data feeders for dynamic loading and augmentation for all frameworks\r\n- New function `fit_generator` to classifiers and adversarial trainer\r\n- C&W L_inf attack\r\n- Class `art.defences.JpegCompression`: JPEG compression as preprocessing defence\r\n- Class `art.defences.ThermometerEncoding`: thermometer encoding as preprocessing defence\r\n- Class `art.defences.TotalVarMin`: total variance minimization as preprocessing defence\r\n- Function `art.utils.master_seed`: setting master seed for random number generators\r\n- `pylint` for Travis\r\n\r\n### Changed\r\n- Restructure analyzers from poisoning module\r\n\r\n### Fixed\r\n- PyTorch classifier support on GPU"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15165670", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15165670/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15165670/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.3.0", "id": 15165670, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1MTY1Njcw", "tag_name": "0.3.0", "target_commitish": "master", "name": "ART 0.3.0", "draft": false, "prerelease": false, "created_at": "2018-09-19T09:40:04Z", "published_at": "2019-01-24T18:10:23Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.3.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.3.0", "body": "This release brings many new features to ART, including a poisoning module, an adversarial sample detection module and support for MXNet models.\r\n\r\n### Added\r\n- Access to layers and model activations through the `Classifier` API\r\n- MXNet support\r\n- Poison detection module, containing the poisoning detection method based on clustering activations\r\n- Jupyter notebook with poisoning attack and detection example on MNIST\r\n- Adversarial samples detection module, containing two detectors: one working based on inputs and one based on activations\r\n\r\n### Changed\r\n- Optimized JSMA attack (`art.attacks.SaliencyMapMethod`) - can now run on ImageNet data\r\n- Optimized C&W attack (`art.attacks.CarliniL2Method`)\r\n- Improved adversarial trainer, now covering a wide range of setups\r\n\r\n### Removed\r\n- Hard-coded `config` folder. Config now gets created on the fly when running ART for the first time. Produced config gets stored in home folder `~/.art`"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15217733", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15217733/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15217733/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.2.0", "id": 15217733, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1MjE3NzMz", "tag_name": "0.2.0", "target_commitish": "master", "name": "ART 0.2.0", "draft": false, "prerelease": false, "created_at": "2018-06-19T15:46:01Z", "published_at": "2019-01-28T15:04:01Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.2.0", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.2.0", "body": "This release makes ART framework-independent. The following backends are now supported: TensorFlow, Keras and PyTorch.\r\n\r\n## Added\r\n- New framework-independent `Classifier` interface\r\n- Backend support for TensorFlow, Keras and PyTorch\r\n- Basic interface for detecting adversarial samples (no concrete method implemented for now)\r\n- Gaussian augmentation\r\n\r\n## Changed\r\n- All attacks now fit the new `Classifier` interface\r\n\r\n## Fixed\r\n- `to_categorical` utility function for unsqueezed labels\r\n- Norms in CLEVER score\r\n- Source code folder name to correct PyPI install\r\n\r\n## Removed\r\n- hard-coded architectures for datasets / model types: CNN, ResNet, MLP"}
{"url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15217233", "assets_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15217233/assets", "upload_url": "https://uploads.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/releases/15217233/assets{?name,label}", "html_url": "https://github.com/Trusted-AI/adversarial-robustness-toolbox/releases/tag/0.1", "id": 15217233, "author": {"login": "ririnicolae", "id": 18574731, "node_id": "MDQ6VXNlcjE4NTc0NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/18574731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ririnicolae", "html_url": "https://github.com/ririnicolae", "followers_url": "https://api.github.com/users/ririnicolae/followers", "following_url": "https://api.github.com/users/ririnicolae/following{/other_user}", "gists_url": "https://api.github.com/users/ririnicolae/gists{/gist_id}", "starred_url": "https://api.github.com/users/ririnicolae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ririnicolae/subscriptions", "organizations_url": "https://api.github.com/users/ririnicolae/orgs", "repos_url": "https://api.github.com/users/ririnicolae/repos", "events_url": "https://api.github.com/users/ririnicolae/events{/privacy}", "received_events_url": "https://api.github.com/users/ririnicolae/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1MjE3MjMz", "tag_name": "0.1", "target_commitish": "master", "name": "ART 0.1.0", "draft": false, "prerelease": false, "created_at": "2018-04-25T21:13:06Z", "published_at": "2019-01-28T14:44:10Z", "assets": [], "tarball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/tarball/0.1", "zipball_url": "https://api.github.com/repos/Trusted-AI/adversarial-robustness-toolbox/zipball/0.1", "body": "This is the initial release of ART. The following features are currently supported:\r\n- `Classifier` interface, supporting a few predefined architectures (CNN, ResNet, MLP) for standard datasets (MNIST, CIFAR10), as well as custom models from users\r\n- `Attack` interface, supporting a few evasion attacks\r\n    - FGM & FSGM\r\n    - Jacobian saliency map attack\r\n    - Carlini & Wagner L_2 attack\r\n    - DeepFool\r\n    - NewtonFool\r\n    - Virtual adversarial method (to be used for virtual adversarial training)\r\n    - Universal perturbation\r\n- Defences\r\n    - Preprocessing interface, currently implemented by feature squeezing, label smoothing, spatial smoothing\r\n    - Adversarial training\r\n- Metrics for measuring robustness: empirical robustness (minimal perturbation), loss sensitivity and CLEVER score\r\n- Utilities for loading datasets, some preprocessing, common maths manipulations\r\n- Scripts for launching some basic pipelines for training, tests and attacking\r\n- Unit tests"}
