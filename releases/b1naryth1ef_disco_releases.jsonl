{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/7355279", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/7355279/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/7355279/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.11", "id": 7355279, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTczNTUyNzk=", "tag_name": "v0.0.11", "target_commitish": "master", "name": "v0.0.11", "draft": false, "prerelease": false, "created_at": "2017-08-10T23:06:10Z", "published_at": "2017-08-10T23:28:43Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.11", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.11", "body": "### Additions\r\n\r\n- Added support for Guild audit logs, exposed via `Guild.get_audit_log_entries`, `Guild.audit_log` and `Guild.audit_log_iter`. For more information see the `AuditLogEntry` model\r\n- Added built-in Flask HTTP server which can be enabled via `http_enabled` and configured via `http_host`/`http_port` config options. The server allows plugins to define routes which can be called externally.\r\n- Added support for capturing the raw responses returned from API requests via the `APIClient.capture` contextmanager\r\n- Added support for NSFW channels via `Channel.nsfw` and `Channel.is_nsfw`\r\n- Added initial support for channel categories via `Channel.parent_id` and `Channel.parent`\r\n- Added various setters for updating Channel properties, e.g. `Channel.set_topic`\r\n- Added support for audit log reasons, accessible through passing `reason` to various methods\r\n- Added `disco.util.snowflake.from_timestamp_ms`\r\n- Added support for `on_complete` callback within DCADOpusEncoderPlayable\r\n- **BREAKING** Added new custom queue types `BaseQueue`/`PlayableQueue` for use w/ `Player`.\r\n  - `queue` can be passed when creating a `Player`, should inherit from BaseQueue\r\n  - Users who previously utilized the `put` method of the old `Player.queue` must move to using `Player.queue.append`, or providing a custom queue implementation.\r\n- Added `Emoji.custom` property\r\n\r\n### Fixes\r\n\r\n- Fixed GuildRoleCreate missing guild\\_id, resulting in incorrect state\r\n- Fixed SimpleLimiter behaving incorrectly (causing GW socket to be ratelimited in some cases)\r\n- Fixed the shortest possible match for a single command being an empty string\r\n- Fixed group matching being overly greedy, which allowed for extra characters to be allowed at the end of a group match\r\n- Fixed errors thrown when not enabling manhole via cli\r\n- Fixed various warnings emitted due to useage of StopIteration\r\n- Fixed warnings about missing voice libs when importing `disco.types.channel`\r\n- Fixed `Bot.get_commands_for_message` returning None (instead of empty list) in some cases\r\n\r\n### Etc\r\n\r\n- Greatly imrpoved the performance of `HashMap`\r\n- **BREAKING** Increased the weight of group matches over command argument matches, and limited the number of commands executed per message to one.\r\n- Reuse a buffer in voice code to slightly improve performance\r\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/6746457", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/6746457/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/6746457/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.11-rc.1", "id": 6746457, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTY3NDY0NTc=", "tag_name": "v0.0.11-rc.1", "target_commitish": "master", "name": "V0.0.11 RC1", "draft": false, "prerelease": true, "created_at": "2017-06-17T11:51:29Z", "published_at": "2017-06-17T11:55:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.11-rc.1", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.11-rc.1", "body": "\r\n## Major Features\r\n\r\n- Add support for built-in HTTP/Flask server\r\n- [BREAKING] #33 Increase the weight of group matches over command argument matches, and limit the number of commands executed per message to exactly one.\r\n\r\n## Cleanup/Etc\r\n\r\n- Remove pyyaml requirement\r\n- Remove inflection requirement\r\n- Bump gevent from 1.2.1 to 1.2.2\r\n\r\n## Bug Fixes\r\n\r\n- Fix the shortest possible match for a group being an empty string\r\n- Fix groups being overly greedy and matching past the end of the group.\r\n- Remove all usages of StopIteration to quiet warnings on Python 3\r\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/6579157", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/6579157/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/6579157/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.9", "id": 6579157, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTY1NzkxNTc=", "tag_name": "v0.0.9", "target_commitish": "master", "name": "Docs, Cleanup, Tooling", "draft": false, "prerelease": false, "created_at": "2017-06-01T21:57:51Z", "published_at": "2017-06-01T22:13:37Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.9", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.9", "body": "This release brings a lot of needed updates to tooling, documentation, and the general flow/API.\r\n\r\n## Breaking\r\n\r\n- Rewrite the majority of the storage module. This includes an entirely new interface.\r\n\r\n## Tooling\r\n\r\n- Documentation w/ Biblio - This is very much an initial stab at a problem that requires much more work and effort, but for now there are at least _some_ docs that can be parsed by a human.\r\n- Travis CI - CI and testing mean we will hopefully have less issues with breaking folks stuff. This also has a long way to go.\r\n\r\n## API\r\n\r\n- `channels_messages_create` / `channels_messages_modify` now support message sanitization via the new module `disco.util.sanitize`. Most users will want to flip this on for any messages that contain user-generated or passed content.\r\n- Added support for multiple attachments when sending messages. This deprecates the `attachment` kwarg in favor of an `attachments` kwarg, holding an array of attachments.\r\n- `channels_messages_reactions_get` supports pagination\r\n- Added `guilds_invites_list`\r\n- Added `users_me_guilds_delete`\r\n- Move to API v7, which includes new errors array. Can be viewed within an `APIException` via the `errors` property. This also includes an update to the exception message format.\r\n- Complete implementation of `Client.update_presence`\r\n- Add support for NSFW channels\r\n- Added various new fields and functions to `Guild` type\r\n- `Message.create_reaction` renamed to (the previous version being deprecated) `Message.add_reaction`\r\n\r\n## Bot\r\n\r\n- Refactor of the way we implemented command groups. This fixes various errors and removes the hard cap of 100 commands.\r\n\r\n## ETC\r\n\r\n- Add  `log-level` CLI flag\r\n- GatewayClient now keeps some state which allows introspection of resumes (and the number of events replayed)\r\n- Various fixes to state tracking\r\n\r\nObviously the above is a non-exhaustive list, this release included a ton of bug fixes and issues related to voice and other components.\r\n\r\n\r\n\r\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/6041092", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/6041092/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/6041092/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.8", "id": 6041092, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTYwNDEwOTI=", "tag_name": "v0.0.8", "target_commitish": "master", "name": "Voice Send Support", "draft": false, "prerelease": false, "created_at": "2017-04-11T14:12:07Z", "published_at": "2017-04-11T14:12:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.8", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.8", "body": "The highlight of this release is fully-working voice transmission support, with many features and bug-fixes laying in the backdrop.\r\n\r\n## Features\r\n\r\n- Add voice transmission support, with multiple builtin classes for streaming music using youtube-dl, ffmpeg, etc\r\n- Add support for opening DMs with users\r\n- Support loading bot level getter function from a module/function path\r\n- Add `Plugin.wait_for_event`, which waits for a specified event (and filters on it), useful for reaction interactions\r\n- Add support for updating managed emojis\r\n- Add support for modifying guild members\r\n- Add `Message.get_reactors` for fetching a list of all reactors for a given emoji\r\n- Better avatar support, incl. for users w/o avatars\r\n- Upgraded various dependencies\r\n\r\n## Bug Fixes\r\n- Fix commands being strictly case-sensitive\r\n- Fix command edit detection triggering on embed updates\r\n- Fix some information being smashed upon `GUILD_UPDATE`'s\r\n- Fix state handling of `VOICE_STATE_UPDATE`\r\n- Fix emojis losing their `guild_id` after being updated\r\n- Fix some obscure typing issues\r\n- Fix bulk message deletion\r\n- Fix `GuildMember.remove_role`\r\n- Fix `MessageEmbed.set_footer`\r\n\r\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/5281451", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/5281451/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/5281451/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.7", "id": 5281451, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTUyODE0NTE=", "tag_name": "v0.0.7", "target_commitish": "master", "name": "Cleanup / Stability", "draft": false, "prerelease": false, "created_at": "2017-01-27T01:26:46Z", "published_at": "2017-01-27T01:39:36Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.7", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.7", "body": "Version 0.0.7 has been a long time coming, and at this point mostly serves as a checkpoint for further progress. It includes a lot of additions and some breaking changes.\n\n## Changes\n- Add support for sending attachments and embeds through `APIClient.channels_messages_create`\n- Add support for editing messages with embeds through `APIClient.channels_messages_modify`\n- Add reaction supports via:\n  - `APIClient.channels_messages_reactions_get`\n  - `APIClient.channels_messages_reactions_create`\n  -  `APIClient.channels_messages_reactions_delete`\n  - `MessageReaction`\n  - `MessageReactionEmoji`\n  - `MessageReactionAdd`\n  - `MessageReactionRemove`\n  - `MessageReactionRemoveAll`\n  - `Message.reactions`\n  - `Message.create_reaction`\n  - `Message.delete_reaction`\n- Add support for creating a guild channel via `APIClient.guilds_channels_create` and `Guild.create_channel`\n- `APIClient.guild_members_list` now returns a hash\n- Add `APIClient.guilds_members_roles_add` and `APIClient.guilds_members_roles_remove` for more determinisitc role adjustments\n- Add `APIClient.guilds_members_me_nick` for setting the current users nick\n- Add `GuildBan`, `APIClient.guild_bans_list` now returns a `GuildBan`\n- Added proper user agent to API requests\n- Improved `APIException`\n- Factor our some ingrained functionality from within `Bot`\n- Improved builtin argument parsing types\n- Added `guild` argument parsing type\n- Added tracking of spawned greenlets to plugins\n- Added configuration option `max_reconnects` for tweaking the max number of gateway reconnects attempted before giving up\n- Various event cleanup\n- Sharding cleanup\n- Typing cleanup/fixes\n- A lot of other stuff...\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4438348", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4438348/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/4438348/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.6", "id": 4438348, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ0MzgzNDg=", "tag_name": "v0.0.6", "target_commitish": "master", "name": "Almost There", "draft": false, "prerelease": false, "created_at": "2016-10-20T08:23:22Z", "published_at": "2016-10-20T08:48:11Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.6", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.6", "body": "Version 0.0.6 brings a set of stability features, and the introduction of a new feature set aimed at larger sharded bots.\n\n## Auto Sharding\n\nA big motivation behind the original development of disco was to help support larger bots by providing a feature-rich toolset. The biggest tool in that set comes in this release, in the form of auto sharding. Auto sharding allows a bot developer to completely ignore the complexity of sharding, while having a stable and reliable way to roll it out. Auto sharding can be used by simply passing the `--shard-auto` flag at runtime.\n\n## Sharding IPC\n\nThe second big tool in our large-bot toolset comes with sharding IPC, an API for inter-shard communication. This API was built to work with auto sharding (and would require a bit of manual code to work outside of that context), and provides a very simple interface.\n\nFor example, calling a function on every shard and aggregating the result:\n\n``` python\ndef on_all_shards(bot):\n    return 103559217914318848 in bot.client.state.users\n\nbot.shards.all(on_all_shards)\n# {0: True, 1: True, 2: True, 3: False ,4: True ,5: True, 6: True, 7: False, 8: True, 9: True}\n```\n\nOr, calling a function on a specific shard:\n\n``` python\ndef on_shard(bot):\n    return len(bot.client.state.users)\n\nbot.shards.on(5, on_shard).wait()\n# 83552\n```\n\nFunctions to be run on the shard should not have closures which bind any non-simple variables (e.g. serialize variables) and the same is true for their return values.\n\n## Plugin Context\n\nThis release introduces the concept of plugin contexts, which are just dictionaries passed from one instance of a plugin to another (during reload). The `Plugin.load` function is now called with its only argument being the context dictionary, and the `Plugin.unload` can now return a dictionary which will be passed to the `Plugin.load` function when reloading. Contexts are useful for storing plugin local state without using globals, and persist across reloads.\n\n## Minor Additions\n- Added the bot gateway endpoint, exposed via `APIClient.gateway_bot_get`\n- Added typing endpoint, exposed via `APIClient.channels_typing(channel_id)`.\n- Added the `oob` flag to the command definition, which will _not_ track the command execution greenlet in the plugin object. This is very specifically intended for reloading the current plugin from within a command loaded from the plugin.\n- Added the `conditional` argument to `Plugin.listen` and `Plugin.listen_packet` which allows for a callable conditional (which is checked _before_ the event is passed on to the listener) taking the single event argument and returning a bool (true = event matches, call the event listener)\n- All command/listener execution greenlets are now bound to the plugin instance and will be terminated on unload\n- Added `Client.update_presence` for updating the users presence\n- Added documentation for all gateway events\n- Added `Channel.delete` and `Channel.close`\n- Added `Guild.member_count` and `Guild.presences` fields (which where previously missing)\n- Added `MessageTable` for building ASCII tables in messages\n\n## Minor Changes\n- SEND/RECV sentinels are now integers\n- `Model.to_dict` now has somewhat proper recursion and type conversion\n- Bumped holster to v1.0.8 for conditional predicates and some other various fixes\n\n## Fixes\n- Fix `APIClient.webhooks_token_delete` using an invalid constant\n- Fixed the HTTP client retrying on a 400 response code\n- Fixed role mentions in bot command handling\n- Fixed newlines in command arguments not parsing correctly\n- Fixed subclassed method definitions smashing the base `Plugin` name space\n- Fixed bug where heartbeater tasks where not killed when the Gateway WS was closed, causing weird error spam and potentially heartbeat spam to discord.\n- Fixed missing `guild_id` on `GuildBanAdd` and `GuildIntegrationsUpdate`\n- Fixed missing fields on `GuildEmojisUpdate`\n- Fixed incorrect type for `TypingStart.timestamp`\n- Fixed voice states not being tracked in `State.voice_states`\n- Fixed exception being thrown when a guild member is not in a guilds `members` object (on `GuildMemberUpdate`)\n- Fixed `Channel.delete_messages` attempting to call bulk delete when it missed the required permissions to do so. It now properly falls back to individual message deletes when it cannot manage messages.\n- Fixed `HashMap.filter` and `HashMap.map` being invalid\n\n## Roadmap\n\n### V0.0.7\n\nFull voice support\n\n### V0.0.8\n\nA more complete API implementation for both the REST API and the Gateway API.\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4387487", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4387487/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/4387487/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.5", "id": 4387487, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQzODc0ODc=", "tag_name": "v0.0.5", "target_commitish": "master", "name": "Some Progress", "draft": false, "prerelease": false, "created_at": "2016-10-14T06:51:11Z", "published_at": "2016-10-14T07:00:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.5", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.5", "body": "This release marks more types and APIs making their way into the library, improves performance in a few areas, adds a new custom HashMap type (replacing internal dictionaries), and various other changes/improvements/bugfixes.\n\n## Performance\n\nThis release introduces `__slots__` usage on basically all stored model types. This improves memory usage, and also provides a more strict interface to the models (not allowing you to shimmy data into the model). There was also some improvements to the way gateway events are parsed which should result in faster event parsing.\n\n## Hash Map\n\nThis release also adds something very exciting, a custom dictionary type (using UserDict) which provides a whole set of utilities for working with stored data. Its easiest to see this interface with some simple examples:\n\n``` python\nguilds_with_15_users = state.guilds.find(lambda g: len(g.members) == 15)\nfirst_guild_with_features = state.guilds.find_one(lambda g: len(g.features))\n\nusers_named_jeff = state.users.select(username=\"jeff\")\nuser_named_joe = state.users.select_one(username=\"joe\")\n```\n\nThe hash map also overrides the most common Python dict functions to behave in a Python 3 generator-fashion (e.g. `values()` will always return a generator).\n\n## Webhooks\n\nA basic implementation of webhooks was also introduced. The interface to this is still rather immature, so there will likely be some change and additional helper methods soon.\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4344500", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4344500/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/4344500/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.4", "id": 4344500, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQzNDQ1MDA=", "tag_name": "v0.0.4", "target_commitish": "master", "name": "The Mold Forms", "draft": false, "prerelease": false, "created_at": "2016-10-10T01:01:32Z", "published_at": "2016-10-10T01:18:12Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.4", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.4", "body": "This release marks the first set of solid internal API structures, that at this point are looking to make their way into the final version. There is a lot of random tidbits in here, but most of the important bits are outlined below\n\n## Big Changes\n\n### Modeling V2.0\n\nThe modeling system has been reworked to avoid magic as much as possible, while also providing a better API interface. Generally these changes should be invisible.\n\n### CLI Interface and Configuration\n\nThe command line interface has been refactored, its now geared much more towards users who want to get up and running with a simple bot quickly. Naturally, the interface was built in such a way that it shouldn't feel clunky or obtrusive to larger bot developers. 99% of users running a bot with discos builtin plugin system will now want to build a configuration file that looks something like:\n\n``` yaml\ntoken: 'MY_BOT_TOKEN'\n\nmanhole_enable: true\nmanhole_bind: localhost:1337\n\nbot:\n  levels:\n    80351110224678912: owner\n  plugins:\n    - module.path.to.a.plugin.file\n  storage_provider: rocksdb\n```\n\nThis configuration can then be loaded, and the bot ran by running:\n\n`python -m disco.cli --config config.yaml`\n\n### Command Changes\n\nCommands now support a basic built-in permissions system, and some of the internal regexing was buffed to enable cool grouping abbreviation. Reloading is now fully supported, and some additional helper functions where added for loading plugins and their configurations. By default, plugin configuration is loaded from the `config` directory, in the format 'example.yaml' where example is parsed from `ExamplePlugin`. This release also includes the ability to parse user/role mentions within the argument format string.\n\n### Storage\n\nStorage is another big feature of this release, which represents a still WIP interface that is shaping up nicely. The storage features of disco are meant to provide a simple to configure and use interface that gives developers the ability to save and query data. The storage system supports multiple storage providers (right now; memory, disk, rocksdb) and is meant more for ease of use than performance. Large bot developers will likely not want to use this for anything more than a simple key-value store.\n\n## ETC\n- Its now possible to listen on both incoming and outgoing gateway packets\n- Fixes/improvements to the state module\n- More API method implementations\n- Added scheduling functionality to plugins\n"}
{"url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4331333", "assets_url": "https://api.github.com/repos/b1naryth1ef/disco/releases/4331333/assets", "upload_url": "https://uploads.github.com/repos/b1naryth1ef/disco/releases/4331333/assets{?name,label}", "html_url": "https://github.com/b1naryth1ef/disco/releases/tag/v0.0.1", "id": 4331333, "author": {"login": "b1naryth1ef", "id": 599433, "node_id": "MDQ6VXNlcjU5OTQzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/599433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1naryth1ef", "html_url": "https://github.com/b1naryth1ef", "followers_url": "https://api.github.com/users/b1naryth1ef/followers", "following_url": "https://api.github.com/users/b1naryth1ef/following{/other_user}", "gists_url": "https://api.github.com/users/b1naryth1ef/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1naryth1ef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1naryth1ef/subscriptions", "organizations_url": "https://api.github.com/users/b1naryth1ef/orgs", "repos_url": "https://api.github.com/users/b1naryth1ef/repos", "events_url": "https://api.github.com/users/b1naryth1ef/events{/privacy}", "received_events_url": "https://api.github.com/users/b1naryth1ef/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQzMzEzMzM=", "tag_name": "v0.0.1", "target_commitish": "master", "name": "A New Hope", "draft": false, "prerelease": false, "created_at": "2016-10-07T09:22:41Z", "published_at": "2016-10-07T09:25:54Z", "assets": [], "tarball_url": "https://api.github.com/repos/b1naryth1ef/disco/tarball/v0.0.1", "zipball_url": "https://api.github.com/repos/b1naryth1ef/disco/zipball/v0.0.1", "body": "Version 0.0.1 marks the first official, public release of disco. This is very much an initial preview, with many missing features and likely a lot of bugs. Please open issues for anything you run across, and have fun messing with the library!\n"}
