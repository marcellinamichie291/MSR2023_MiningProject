{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/68477949", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/68477949/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/68477949/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.23.0-post1", "id": 68477949, "author": {"login": "thisac", "id": 6934626, "node_id": "MDQ6VXNlcjY5MzQ2MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6934626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisac", "html_url": "https://github.com/thisac", "followers_url": "https://api.github.com/users/thisac/followers", "following_url": "https://api.github.com/users/thisac/following{/other_user}", "gists_url": "https://api.github.com/users/thisac/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisac/subscriptions", "organizations_url": "https://api.github.com/users/thisac/orgs", "repos_url": "https://api.github.com/users/thisac/repos", "events_url": "https://api.github.com/users/thisac/events{/privacy}", "received_events_url": "https://api.github.com/users/thisac/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB4937c4EFOP9", "tag_name": "v0.23.0-post1", "target_commitish": "master", "name": "Release 0.23.0-post1", "draft": false, "prerelease": false, "created_at": "2022-06-02T18:33:05Z", "published_at": "2022-06-02T18:35:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.23.0-post1", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.23.0-post1", "body": "Post release to address changes to the documentation."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/68351033", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/68351033/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/68351033/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.23.0", "id": 68351033, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB4937c4EEvQ5", "tag_name": "v0.23.0", "target_commitish": "master", "name": "Release 0.23.0", "draft": false, "prerelease": false, "created_at": "2022-06-01T14:32:43Z", "published_at": "2022-06-01T15:24:44Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.23.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.23.0", "body": "### New features\r\n\r\n* Program Xanadu\u2019s new  Borealis hardware device via Strawberry Fields and Xanadu Cloud. [(#714)]([https://github.com/XanaduAI/strawberryfields/pull/714](https://github.com/XanaduAI/strawberryfields/pull/714))\r\n\r\n  Borealis is a cloud-accessible photonic quantum computer, offering full programmability over all of its gates and capable of quantum advantage. Its hardware is based on [time-domain multiplexing (TDM)](https://strawberryfields.ai/photonics/demos/run_time_domain.html); a single squeezed-light source emits batches of 216 time-ordered squeezed-light pulses that interfere with one another with the help of optical delay loops, programmable beamsplitters, and phase shifters.\r\n\r\n  Learn more about Borealis via our [website](https://xanadu.ai/products/borealis) and [tutorials](https://strawberryfields.ai/photonics/demos/tutorial_borealis_beginner.html).\r\n\r\n\r\n* GBS data visualization functions are added. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n* A set of TDM compilers are added, including a Borealis compiler which compiles and validates programs against the hardware specification and calibration certificate. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n* A `remove_loss` utility function is added to the `program_utils` module, allowing for the removal of `LossChannels` from Strawberry Fields programs. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n* Cropping vacuum modes from TDM program results is now possible by passing `crop=True` as a run option. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n  ```python\r\n  n, N = get_mode_indices(delays)\r\n  prog = sf.TDMProgram(N)\r\n\r\n  with prog.context(*gate_args) as (p, q):\r\n      ops.Sgate(p[0]) | q[n[0]]\r\n      for i in range(len(delays)):\r\n          ops.Rgate(p[2 * i + 1]) | q[n[i]]\r\n          ops.BSgate(p[2 * i + 2], np.pi / 2) | (q[n[i + 1]], q[n[i]])\r\n      ops.MeasureX | q[0]\r\n\r\n  eng = sf.Engine(\"gaussian\")\r\n  results = eng.run(prog, crop=True)\r\n  ```\r\n\r\n* Resulting samples from TDM jobs return only the non-empty mode measurements when setting the `crop` option to `True` in the program `run_options` or as a keyword argument in the engine `run` method. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n* Realistic loss can be added to a Borealis circuit for local simulation execution. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n  ```python\r\n  compile_options = {\r\n      \"device\": device,  # hardware device object needed\r\n      \"realistic_loss\": True,\r\n  }\r\n\r\n  eng = sf.Engine(\"gaussian\")\r\n  results = eng.run(prog, compile_options=compile_options)\r\n  ```\r\n\r\n* Utility functions are added to allow for easier Borealis program and parameter creation. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n* Functions are added for analyzing GBS results for comparisons with classical simulations. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n### Improvements\r\n\r\n* A locked program can now be (un)rolled, and automatically restores the lock if previously in place. [(#703)](https://github.com/XanaduAI/strawberryfields/pull/703)\r\n\r\n* Rolling and unrolling now only happens in place, and no longer returns the (un)rolled circuit. [(#702)](https://github.com/XanaduAI/strawberryfields/pull/702)\r\n\r\n* `Program.assert_number_of_modes` and `Program.assert_max_number_of_measurements` are combined into a single `assert_modes` method. [(#709)](https://github.com/XanaduAI/strawberryfields/pull/709)\r\n\r\n* Job results can now be retrieved without converting integers to `np.int64` objects by setting `integer_overflow_protection=False` (default `True`) when running a program via `RemoteEngine.run()`.  [(#712)](https://github.com/XanaduAI/strawberryfields/pull/712)\r\n\r\n* The TDM module is refactored to contain `program.py`, with the `TDMProgram` class, and `utils.py`, with various utility functions. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n* The `Compiler` base class is updated to allow for setting a rigid circuit layout to validate a program during compilation. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n* The `Compiler` base class now contains methods that can be overwritten to provide subclass compilers with loss-additions (e.g., to add realistic loss to a circuit) and program parameter updates. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n### Bug fixes\r\n\r\n* Trying to unroll an already unrolled program with a different number of shots works as expected. [(#702)](https://github.com/XanaduAI/strawberryfields/pull/702)\r\n\r\n* Fixed bug with vacuum modes missing. [(#702)](https://github.com/XanaduAI/strawberryfields/pull/702)\r\n\r\n* Validating parameters now works with nested parameter arrays. [(#711)](https://github.com/XanaduAI/strawberryfields/pull/711)\r\n\r\n* Store correct rolled circuit before unrolling (fixes issue when rolled circuit has changed due to e.g., compilation).  [(#710)](https://github.com/XanaduAI/strawberryfields/pull/710)\r\n\r\n### Documentation\r\n\r\n* The centralized [Xanadu Sphinx Theme](https://github.com/XanaduAI/xanadu-sphinx-theme) is now used to style the Sphinx documentation.  [(#701)](https://github.com/XanaduAI/strawberryfields/pull/701)\r\n\r\n* The documentation on Gaussian circuit operations is fixed so that it's properly rendered. [(#714)](https://github.com/XanaduAI/strawberryfields/pull/714)\r\n\r\n### Contributors\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nMikhail Andrenkov, Sebastian Duque, Luke Helt, Theodor Isacsson, Josh Izaac, Fabian Laudenbach"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/62505464", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/62505464/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/62505464/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.22.0", "id": 62505464, "author": {"login": "thisac", "id": 6934626, "node_id": "MDQ6VXNlcjY5MzQ2MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6934626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisac", "html_url": "https://github.com/thisac", "followers_url": "https://api.github.com/users/thisac/followers", "following_url": "https://api.github.com/users/thisac/following{/other_user}", "gists_url": "https://api.github.com/users/thisac/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisac/subscriptions", "organizations_url": "https://api.github.com/users/thisac/orgs", "repos_url": "https://api.github.com/users/thisac/repos", "events_url": "https://api.github.com/users/thisac/events{/privacy}", "received_events_url": "https://api.github.com/users/thisac/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB4937c4DucH4", "tag_name": "v0.22.0", "target_commitish": "master", "name": "Release 0.22.0", "draft": false, "prerelease": false, "created_at": "2022-03-22T21:42:57Z", "published_at": "2022-03-22T21:49:42Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.22.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.22.0", "body": "<h3>New features since last release</h3>\r\n\r\n* `Device.layout` and `Device.gate_parameters` may now return `None`. This can happen when a remote simulator device is used. [(#661)](https://github.com/XanaduAI/strawberryfields/pull/661)\r\n\r\n* A new interferometer decomposition method is implemented following the proposal of the paper [_Simple factorization of unitary transformations_](https://doi.org/10.1103/PhysRevA.97.022328). [(#665)](https://github.com/XanaduAI/strawberryfields/pull/665)\r\n\r\n  ```python\r\n  import numpy as np\r\n\r\n  import strawberryfields as sf\r\n  from strawberryfields import ops\r\n\r\n  U = np.array([[-0.39302099+0.28732291j,  0.83734522+0.24866248j],\r\n                [ 0.00769051+0.87345344j, -0.3847068 +0.29836325j]])\r\n\r\n  prog = sf.Program(2)\r\n\r\n  with prog.context as q:\r\n      ops.Interferometer(U, mesh=\"sun_compact\") | q\r\n  ```\r\n\r\n* A `Device.certificate` method is added which returns the hardware device certificate. [(#679)](https://github.com/XanaduAI/strawberryfields/pull/679)\r\n\r\n  ```pycon\r\n  >>> import strawberryfields as sf\r\n  >>> eng = sf.RemoteEngine(\"X8\")\r\n  >>> print(eng.device.certificate)\r\n  {'target': 'X8_01' ... }\r\n  ```\r\n\r\n* Setting `shots=None` in the engine or program run options will not execute any measurements applied on the circuit. [(#682)](https://github.com/XanaduAI/strawberryfields/pull/682)\r\n\r\n  ```python\r\n  import strawberryfields as sf\r\n  from strawberryfields import ops\r\n\r\n  prog = sf.Program(1)\r\n  eng = sf.Engine(\"gaussian\")\r\n\r\n  with prog.context as q:\r\n      ops.Sgate(0.5) | q[0]\r\n      ops.MeasureFock() | q\r\n\r\n  results = eng.run(prog, shots=None)\r\n\r\n  # samples will output an empty list []\r\n  print(results.samples)\r\n\r\n  # the resulting Gaussian state is still accessible\r\n  # via its vector of means and covariance matrix\r\n  print(results.state.means())\r\n  print(results.state.cov())\r\n  ```\r\n\r\n* There's a `program_equivalence` function in `strawberryfields/program_utils.py` which checks Strawberry Fields programs for equivalence. [(#686)](https://github.com/XanaduAI/strawberryfields/pull/686)\r\n\r\n* An equality operator is implemented for `strawberryfields.Program`, checking that the exact same gates and respective parameters, are applied in order. [(#686)](https://github.com/XanaduAI/strawberryfields/pull/686)\r\n\r\n  ```python\r\n  import strawberryfields as sf\r\n  from strawberryfields import ops\r\n\r\n  prog_1 = sf.Program(1)\r\n  prog_2 = sf.Program(1)\r\n\r\n  with prog.context as q:\r\n      ops.Sgate(0.42) | q[0]\r\n      ops.MeasureFock() | q\r\n\r\n  with prog.context as q:\r\n      ops.Sgate(0.42) | q[0]\r\n      ops.MeasureFock() | q\r\n\r\n  assert prog_1 == prog_2\r\n  ```\r\n\r\n* A `Program.equivalence` convenience method is added which calls the `program_equivalence` utility function. [(#686)](https://github.com/XanaduAI/strawberryfields/pull/686)\r\n\r\n  ```python\r\n  prog_1 = sf.Program(1)\r\n  prog_2 = sf.Program(1)\r\n\r\n  with prog.context as q:\r\n      ops.Sgate(1.1) | q[0]\r\n      ops.MeasureFock() | q\r\n\r\n  with prog.context as q:\r\n      ops.Sgate(0.42) | q[0]\r\n      ops.MeasureFock() | q\r\n\r\n  assert prog_1.equivalence(prog_2, compare_params=False)\r\n  ```\r\n\r\n* A `Device.validate_target` static method is added which checks that the target in the layout is the same as the target field in the specification. This check is also performed at `Device` initialization. [(#687)](https://github.com/XanaduAI/strawberryfields/pull/687)\r\n\r\n* Tests are run in random order and the seed for NumPy's and Python's random number generators are set by `pytest-randomly`. [(#692)](https://github.com/XanaduAI/strawberryfields/pull/692)\r\n\r\n* Adds support for Python 3.10. [#695](https://github.com/XanaduAI/strawberryfields/pull/695)\r\n\r\n<h3>Breaking Changes</h3>\r\n\r\n* `DeviceSpec` is renamed to `Device`, which now also contains more than only the device specification. [(#679)](https://github.com/XanaduAI/strawberryfields/pull/679)\r\n\r\n  ```pycon\r\n  >>> import strawberryfields as sf\r\n  >>> eng = sf.RemoteEngine(\"X8\")\r\n  >>> isinstance(eng.device, sf.Device)\r\n  True\r\n  >>> print(eng.device.target)\r\n  X8_01\r\n  ```\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* It's now possible to show graphs using the plot apps layer when not run in notebooks. [(#669)](https://github.com/XanaduAI/strawberryfields/pull/669)\r\n\r\n* `program.compile` now raises an error if the device specification contains gate parameters but no circuit layout. Without a layout, the gate parameters cannot be validated against the device specification. [(#661)](https://github.com/XanaduAI/strawberryfields/pull/661)\r\n\r\n* The teleportation tutorial `examples/teleportation.py` now uses the correct value (now `phi = 0` instead of `phi = np.pi / 2`) for the phase shift of the beamsplitters. [(#674)](https://github.com/XanaduAI/strawberryfields/pull/674)\r\n\r\n* `Program.compile()` returns a deep copy of the program attributes, except for the circuit and the register references. [(#688)](https://github.com/XanaduAI/strawberryfields/pull/688)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nSebastian Duque, Theodor Isacsson, Jon Schlipf, Hossein Seifoory"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/55490367", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/55490367/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/55490367/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.21.0", "id": 55490367, "author": {"login": "thisac", "id": 6934626, "node_id": "MDQ6VXNlcjY5MzQ2MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6934626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisac", "html_url": "https://github.com/thisac", "followers_url": "https://api.github.com/users/thisac/followers", "following_url": "https://api.github.com/users/thisac/following{/other_user}", "gists_url": "https://api.github.com/users/thisac/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisac/subscriptions", "organizations_url": "https://api.github.com/users/thisac/orgs", "repos_url": "https://api.github.com/users/thisac/repos", "events_url": "https://api.github.com/users/thisac/events{/privacy}", "received_events_url": "https://api.github.com/users/thisac/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB4937c4DTrc_", "tag_name": "v0.21.0", "target_commitish": "master", "name": "Release 0.21.0", "draft": false, "prerelease": false, "created_at": "2021-12-16T20:08:37Z", "published_at": "2021-12-16T20:11:43Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.21.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.21.0", "body": "<h3>New features since last release</h3>\r\n\r\n* A `Result.metadata` property is added to retrieve the metadata of a job result. [(#663)](https://github.com/XanaduAI/strawberryfields/pull/663)\r\n\r\n* A setter method for `Result.state` is added for setting a state for a local simulation if a state has not previously been set. [(#663)](https://github.com/XanaduAI/strawberryfields/pull/663)\r\n\r\n* Functions are now available to convert between XIR and Strawberry Fields programs. [(#643)](https://github.com/XanaduAI/strawberryfields/pull/643)\r\n\r\n  For example,\r\n\r\n  ```python\r\n  prog = sf.Program(3)\r\n  eng = sf.Engine(\"gaussian\")\r\n\r\n  with prog.context as q:\r\n      ops.Sgate(0, 0) | q[0]\r\n      ops.Sgate(1, 0) | q[1]\r\n      ops.BSgate(0.45, 0.0) | (q[0], q[2])\r\n      ops.MeasureFock() | q[0]\r\n\r\n  xir_prog = sf.io.to_xir(prog)\r\n  ```\r\n\r\n  resulting in the following XIR script\r\n\r\n  ```pycon\r\n  >>> print(xir_prog.serialize())\r\n  Sgate(0, 0) | [0];\r\n  Sgate(1, 0) | [1];\r\n  BSgate(0.45, 0.0) | [0, 2];\r\n  MeasureFock | [0];\r\n  ```\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* The `TDMProgram.compile_info` and `TDMProgram.target` fields are now set when a `TDMProgram` is compiled using the \"TDM\" compiler. [(#659)](https://github.com/XanaduAI/strawberryfields/pull/659)\r\n\r\n* Updates `Program.assert_max_number_of_measurements` to expect the maximum number of measurements from the device specification as a flat dictionary entry instead of a nested one. [(#662)](https://github.com/XanaduAI/strawberryfields/pull/662)\r\n\r\n  ```python\r\n  \"modes\": {\r\n      \"pnr_max\": 20,\r\n      \"homodyne_max\": 1000,\r\n      \"heterodyne_max\": 1000,\r\n  }\r\n  ```\r\n\r\n  instead of\r\n\r\n  ```python\r\n  \"modes\": {\r\n      \"max\": {\r\n          \"pnr\": 20,\r\n          \"homodyne\": 1000,\r\n          \"heterodyne\": 1000,\r\n      }\r\n  }\r\n  ```\r\n\r\n<h3>Documentation</h3>\r\n\r\n* README has been ported to Markdown. [(#664)](https://github.com/XanaduAI/strawberryfields/pull/664)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nTheodor Isacsson", "reactions": {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/55490367/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/53687903", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/53687903/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/53687903/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.20.0", "id": 53687903, "author": {"login": "thisac", "id": 6934626, "node_id": "MDQ6VXNlcjY5MzQ2MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6934626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisac", "html_url": "https://github.com/thisac", "followers_url": "https://api.github.com/users/thisac/followers", "following_url": "https://api.github.com/users/thisac/following{/other_user}", "gists_url": "https://api.github.com/users/thisac/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisac/subscriptions", "organizations_url": "https://api.github.com/users/thisac/orgs", "repos_url": "https://api.github.com/users/thisac/repos", "events_url": "https://api.github.com/users/thisac/events{/privacy}", "received_events_url": "https://api.github.com/users/thisac/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB4937c4DMzZf", "tag_name": "v0.20.0", "target_commitish": "master", "name": "Release 0.20.0", "draft": false, "prerelease": false, "created_at": "2021-11-19T01:58:36Z", "published_at": "2021-11-19T02:03:03Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.20.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.20.0", "body": "<h3>New features since last release</h3>\r\n\r\n* The generic multimode Gaussian gate ``Ggate`` is now available in the ``sf.ops`` module with the backend choice of ``tf``. The N mode ``Ggate`` can be parametrized by a real symplectic matrix `S` (size `2N * 2N`) and a diplacement vector `d` (size `N`). You can also obtain the gradients of the Ggate gate via TensorFlow's ``tape.gradient`` [(#599)](https://github.com/XanaduAI/strawberryfields/pull/599) [(#606)](https://github.com/XanaduAI/strawberryfields/pull/606)\r\n\r\n  ```python\r\n  from thewalrus.random import random_symplectic\r\n\r\n  num_mode = 2\r\n  cutoff = 10\r\n  S = tf.Variable(random_symplectic(num_mode))\r\n  d = tf.Variable(np.random.random(2 * num_mode))\r\n\r\n  eng = sf.Engine(\"tf\", backend_options={\"cutoff_dim\": cutoff})\r\n  prog = sf.Program(2)\r\n\r\n  with prog.context as q:\r\n      sf.ops.Ggate(S, d) | (q[0], q[1])\r\n\r\n  state_out = eng.run(prog).state.ket()\r\n  ```\r\n\r\n  Note that in order to update the parameter `S` by using its gradient, you cannot use gradient descent directly (as the unitary would not be symplectic after the update). Please use the function `sf.backends.tfbackend.update_symplectic` which is designed specifically for this purpose.\r\n\r\n  ```python\r\n  def overlap_loss(state, objective):\r\n      return -tf.abs(tf.reduce_sum(tf.math.conj(state) * objective)) ** 2\r\n\r\n  def norm_loss(state):\r\n      return -tf.abs(tf.linalg.norm(state)) ** 2\r\n\r\n  def loss(state, objective):\r\n      return overlap_loss(state, objective) + norm_loss(state)\r\n\r\n  num_mode = 1\r\n  cutoff = 10\r\n\r\n  S = tf.Variable(random_symplectic(num_mode))\r\n  d = tf.Variable(np.random.random(2 * num_mode))\r\n  kappa = tf.Variable(0.3)\r\n  objective = tf.Variable(np.eye(cutoff)[1], dtype=tf.complex64)\r\n\r\n  adam = tf.keras.optimizers.Adam(learning_rate=0.01)\r\n  eng = sf.Engine(\"tf\", backend_options={\"cutoff_dim\": cutoff})\r\n  prog = sf.Program(1)\r\n\r\n  with prog.context as q:\r\n      sf.ops.Ggate(S, d) | q\r\n      sf.ops.Kgate(kappa) | q\r\n\r\n  loss_vals = []\r\n  for _ in range(200):\r\n      with tf.GradientTape() as tape:\r\n          state_out = eng.run(prog).state.ket()\r\n          loss_val = loss(state_out, objective)\r\n\r\n      eng.reset()\r\n      grad_S, gradients_d, gradients_kappa = tape.gradient(loss_val, [S, d, kappa])\r\n      adam.apply_gradients(zip([gradients_d, gradients_kappa], [d, kappa]))\r\n      update_symplectic(S, grad_S, lr=0.1)  # update S here\r\n      loss_vals.append(loss_val)\r\n  ```\r\n\r\n<h3>Breaking Changes</h3>\r\n\r\n* Complex parameters of the `Catstate` operation are expected in polar form as two separate real parameters. [(#441)](https://github.com/XanaduAI/strawberryfields/pull/441)\r\n\r\n* The `sf` CLI has been removed in favour of the [Xanadu Cloud Client](https://github.com/XanaduAI/xanadu-cloud-client). [(#642)](https://github.com/XanaduAI/strawberryfields/pull/642)\r\n\r\n  1. Configuring account credentials using:\r\n\r\n      * Strawberry Fields v0.19.0\r\n\r\n        ```console\r\n        $ sf configure --token \"foo\"\r\n        ```\r\n\r\n      * Strawberry Fields v0.20.0\r\n\r\n        ```console\r\n        $ xcc config set REFRESH_TOKEN \"foo\"\r\n        Successfully updated REFRESH_TOKEN setting to 'foo'.\r\n        ```\r\n\r\n  2. Verifying your connection to the Xanadu Cloud using:\r\n\r\n      * Strawberry Fields v0.19.0\r\n\r\n        ```console\r\n        $ sf --ping\r\n        You have successfully authenticated to the platform!\r\n        ```\r\n\r\n      * Strawberry Fields v0.20.0\r\n\r\n        ```console\r\n        $ xcc ping\r\n        Successfully connected to the Xanadu Cloud.\r\n        ```\r\n\r\n  3. Submitting a Blackbird circuit to the Xanadu Cloud using:\r\n\r\n      * Strawberry Fields v0.19.0\r\n\r\n        ```console\r\n        $ # Version 0.19.0\r\n        $ sf run \"foo.xbb\"\r\n        Executing program on remote hardware...\r\n        2021-11-02 03:04:05,06 - INFO - The device spec X8_01 has been successfully retrieved.\r\n        2021-11-02 03:04:05,07 - INFO - Compiling program for device X8_01 using compiler Xunitary.\r\n        2021-11-02 03:04:05,08 - INFO - Job b185a63c-f302-4adb-acf8-b6e4e413c11d was successfully submitted.\r\n        2021-11-02 03:04:05,09 - INFO - The remote job b185a63c-f302-4adb-acf8-b6e4e413c11d has been completed.\r\n        [[0 0 0 0]\r\n        [0 0 0 0]\r\n        [0 0 0 0]\r\n        [0 0 0 0]]\r\n        ```\r\n\r\n      * Strawberry Fields v0.20.0\r\n\r\n        ```console\r\n        $ xcc job submit --name \"bar\" --target \"X8_01\" --circuit \"$(cat foo.xbb)\"\r\n        {\r\n            \"id\": \"0b0f5a46-46d8-4157-8005-45a4764361ba\",  # Use this ID below.\r\n            \"name\": \"bar\",\r\n            \"status\": \"open\",\r\n            \"target\": \"X8_01\",\r\n            \"language\": \"blackbird:1.0\",\r\n            \"created_at\": \"2021-11-02 03:04:05,10\",\r\n            \"finished_at\": null,\r\n            \"running_time\": null,\r\n            \"metadata\": {}\r\n        }\r\n        $ xcc job get 0b0f5a46-46d8-4157-8005-45a4764361ba --result\r\n        {\r\n            \"output\": [\r\n                \"[[0 0 0 0]\\n[0 0 0 0]\\n[0 0 0 0]\\n[0 0 0 0]]\"\r\n            ]\r\n        }\r\n        ```\r\n\r\n* The `sf.api.Connection` class has been replaced with the [xcc.Connection](https://xanadu-cloud-client.readthedocs.io/en/stable/api/xcc.Connection.html) class. [(#645)](https://github.com/XanaduAI/strawberryfields/pull/645)\r\n\r\n  Previously, in Strawberry Fields v0.19.0, an `sf.RemoteEngine` can be instantiated with a custom Xanadu Cloud connection as follows:\r\n\r\n  ```python\r\n  import strawberryfields as sf\r\n  import strawberryfields.api\r\n\r\n  connection = strawberryfields.api.Connection(\r\n    token=\"Xanadu Cloud API key goes here\",\r\n    host=\"platform.strawberryfields.ai\",\r\n    port=443,\r\n    use_ssl=True,\r\n  )\r\n  engine = sf.RemoteEngine(\"X8\", connection=connection)\r\n  ```\r\n\r\n  In Strawberry Fields v0.20.0, the same result can be achieved using\r\n  ```python\r\n  import strawberryfields as sf\r\n  import xcc\r\n\r\n  connection = xcc.Connection(\r\n    refresh_token=\"Xanadu Cloud API key goes here\",  # See \"token\" argument above.\r\n    host=\"platform.strawberryfields.ai\",\r\n    port=443,\r\n    tls=True,                                        # See \"use_ssl\" argument above.\r\n  )\r\n  engine = sf.RemoteEngine(\"X8\", connection=connection)\r\n  ```\r\n\r\n* The `sf.configuration` module has been replaced with the [xcc.Settings](https://xanadu-cloud-client.readthedocs.io/en/stable/api/xcc.Settings.html) class. [(#649)](https://github.com/XanaduAI/strawberryfields/pull/649)\r\n\r\n  This means that Xanadu Cloud credentials are now stored in exactly one location, the path to which depends on your operating system:\r\n\r\n  1. Windows: `C:\\Users\\%USERNAME%\\AppData\\Local\\Xanadu\\xanadu-cloud\\.env`\r\n\r\n  2. MacOS: `/home/$USER/Library/Application\\ Support/xanadu-cloud/.env`\r\n\r\n  3. Linux: `/home/$USER/.config/xanadu-cloud/.env`\r\n\r\n  The format of the configuration file has also changed to [.env](https://saurabh-kumar.com/python-dotenv/) and the names of some fields have been updated. For example,\r\n\r\n  ```toml\r\n  # Strawberry Fields v0.19.0 (config.toml)\r\n  [api]\r\n  authentication_token = \"Xanadu Cloud API key goes here\"\r\n  hostname = \"platform.strawberryfields.ai\"\r\n  port = 443\r\n  use_ssl = true\r\n  ```\r\n\r\n  is equivalent to\r\n\r\n  ```python\r\n  # Strawberry Fields v0.20.0 (.env)\r\n  XANADU_CLOUD_REFRESH_TOKEN='Xanadu Cloud API key goes here'\r\n  XANADU_CLOUD_HOST='platform.strawberryfields.ai'\r\n  XANADU_CLOUD_PORT=443\r\n  XANADU_CLOUD_TLS=True\r\n  ```\r\n\r\n  Similarly, the names of the configuration environment variables have changed from\r\n\r\n  ```bash\r\n  # Strawberry Fields v0.19.0\r\n  export SF_API_AUTHENTICATION_TOKEN=\"Xanadu Cloud API key goes here\"\r\n  export SF_API_HOSTNAME=\"platform.strawberryfields.ai\"\r\n  export SF_API_PORT=443\r\n  export SF_API_USE_SSL=true\r\n  ```\r\n\r\n  to\r\n\r\n  ```bash\r\n  # Strawberry Fields v0.20.0\r\n  export XANADU_CLOUD_REFRESH_TOKEN=\"Xanadu Cloud API key goes here\"\r\n  export XANADU_CLOUD_HOST=\"platform.strawberryfields.ai\"\r\n  export XANADU_CLOUD_PORT=443\r\n  export XANADU_CLOUD_TLS=true\r\n  ```\r\n\r\n  Finally, `strawberryfields.store_account()` has been replaced such that\r\n\r\n  ```python\r\n  # Strawberry Fields v0.19.0\r\n  import strawberryfields as sf\r\n  sf.store_account(\"Xanadu Cloud API key goes here\")\r\n  ```\r\n\r\n  becomes\r\n\r\n  ```python\r\n  # Strawberry Fields v0.20.0\r\n  import xcc\r\n  xcc.Settings(REFRESH_TOKEN=\"Xanadu Cloud API key goes here\").save()\r\n  ```\r\n\r\n* The `sf.api.Job` class has been replaced with the [xcc.Job](https://xanadu-cloud-client.readthedocs.io/en/stable/api/xcc.Job.html) class. [(#650)](https://github.com/XanaduAI/strawberryfields/pull/650)\r\n\r\n  A `Job` object is returned when running jobs asynchronously. In previous versions of Strawberry Fields (v0.19.0 and lower), the `Job` object can be used as follows:\r\n\r\n  ```pycon\r\n  >>> job = engine.run_async(program, shots=1)\r\n  >>> job.status\r\n  'queued'\r\n  >>> job.result\r\n  InvalidJobOperationError\r\n  >>> job.refresh()\r\n  >>> job.status\r\n  'complete'\r\n  >>> job.result\r\n  [[0 1 0 2 1 0 0 0]]\r\n  ```\r\n\r\n  In Strawberry Fields v0.20.0, the `Job` object works slightly differently:\r\n\r\n  ```pycon\r\n  >>> job = engine.run_async(program, shots=1)\r\n  >>> job.status\r\n  'queued'\r\n  >>> job.wait()\r\n  >>> job.status\r\n  'complete'\r\n  >>> job.result\r\n  {'output': [array([[0 1 0 2 1 0 0 0]])]}\r\n  ```\r\n\r\n  The `job.wait()` method is a blocking method that will wait for the job to finish. Alternatively, `job.clear()` can be called to clear the cache, allowing `job.status` to re-fetch the job status.\r\n\r\n* The `sf.api.Result` class has been updated to support the Xanadu Cloud Client integration. [(#651)](https://github.com/XanaduAI/strawberryfields/pull/651)\r\n\r\n  While `Result.samples` should return the same type and shape as before, the `Result.all_samples` property has been renamed to `Result.samples_dict` and returns the samples as a dictionary with corresponding measured modes as keys.\r\n\r\n  ```pycon\r\n  >>> res = eng.run(prog, shots=3)\r\n  >>> res.samples\r\n  array([[1, 0], [0, 1], [1, 1]])\r\n  >>> res.samples_dict\r\n  {0: [np.array([1, 0, 1])], 1: [np.array([0, 1, 1])]}\r\n  ```\r\n\r\n  The samples dictionary is only accessible for simulators.\r\n\r\n* The `sf.api.DeviceSpec` class has been updated to support the Xanadu Cloud Client integration. [(#644)](https://github.com/XanaduAI/strawberryfields/pull/644)\r\n\r\n  It now works as a container for a device specification dictionary. There are no more API connection usages, and `DeviceSpec.target` is retrieved from the device specification rather than passed at initialization.\r\n\r\n* The `api` subpackage has been removed and the contained `DeviceSpec` and `Result` classes have been moved to the root `strawberryfields` folder. [(#652)](https://github.com/XanaduAI/strawberryfields/pull/652)\r\n\r\n  They can now be imported as follows:\r\n\r\n  ```python\r\n  import strawberryfields  as sf\r\n  # sf.DeviceSpec\r\n  # sf.Result\r\n  ```\r\n\r\n<h3>Documentation</h3>\r\n\r\n* Strawberry Fields interactive has been removed from the documentation. [(#635)](https://github.com/XanaduAI/strawberryfields/pull/635)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nMikhail Andrenkov, Sebasti\u00e1n Duque Mesa, Theodor Isacsson, Josh Izaac, Filippo Miatto, Nicol\u00e1s Quesada, Antal Sz\u00e1va, Yuan Yao.", "reactions": {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/53687903/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 2, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/50169891", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/50169891/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/50169891/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.19.0", "id": 50169891, "author": {"login": "thisac", "id": 6934626, "node_id": "MDQ6VXNlcjY5MzQ2MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6934626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisac", "html_url": "https://github.com/thisac", "followers_url": "https://api.github.com/users/thisac/followers", "following_url": "https://api.github.com/users/thisac/following{/other_user}", "gists_url": "https://api.github.com/users/thisac/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisac/subscriptions", "organizations_url": "https://api.github.com/users/thisac/orgs", "repos_url": "https://api.github.com/users/thisac/repos", "events_url": "https://api.github.com/users/thisac/events{/privacy}", "received_events_url": "https://api.github.com/users/thisac/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOB4937c4C_Ygj", "tag_name": "v0.19.0", "target_commitish": "master", "name": "Release 0.19.0", "draft": false, "prerelease": false, "created_at": "2021-09-23T22:12:24Z", "published_at": "2021-09-23T22:21:32Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.19.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.19.0", "body": "<h3>New features since last release</h3>\r\n\r\n* Compact decompositions as described in <https://arxiv.org/abs/2104.07561>, (``rectangular_compact`` and ``triangular_compact``) are now available in the ``sf.decompositions`` module, and as options in the ``Interferometer`` operation. [(#584)](https://github.com/XanaduAI/strawberryfields/pull/584)\r\n\r\n  This decomposition allows for lower depth photonic circuits in physical devices by applying two independent phase shifts in parallel inside each Mach-Zehnder interferometer. ``rectangular_compact`` reduces the layers of phase shifters from 2N+1 to N+2 for an N mode interferometer when compared to e.g. ``rectangular_MZ``.\r\n\r\n  Example:\r\n\r\n  ```python\r\n  import numpy as np\r\n  from strawberryfields import Program\r\n  from strawberryfields.ops import Interferometer\r\n  from scipy.stats import unitary_group\r\n\r\n  M = 10\r\n\r\n  # generate a 10x10 Haar random unitary\r\n  U = unitary_group.rvs(M)\r\n\r\n  prog = Program(M)\r\n\r\n  with prog.context as q:\r\n      Interferometer(U, mesh='rectangular_compact') | q\r\n\r\n  # check that applied unitary is correct\r\n  compiled_circuit = prog.compile(compiler=\"gaussian_unitary\")\r\n  commands = compiled_circuit.circuit\r\n  S = commands[0].op.p[0] # symplectic transformation\r\n  Uout = S[:M,:M] + 1j * S[M:,:M] # unitary transformation\r\n\r\n  print(np.allclose(U, Uout))\r\n  ```\r\n\r\n* A new compiler, ``GaussianMerge``, has been added. It is aimed at reducing calculation overhead for non-Gaussian circuits by minimizing the amount of Gaussian operations in a circuit, while retaining the same functionality. [(#591)](https://github.com/XanaduAI/strawberryfields/pull/591)\r\n\r\n  ``GaussianMerge`` merges Gaussian operations, where allowed, into ``GaussianTransform`` and ``Dgate`` operations. It utilizes the existing ``GaussianUnitary`` compiler to merge operations and Directed Acyclic Graphs to determine which operations can be merged.\r\n\r\n  ```python\r\n  modes = 4\r\n  cutoff_dim = 6\r\n\r\n  # prepare an intial state with 4 photons in as many modes\r\n  initial_state = np.zeros([cutoff_dim] * modes, dtype=complex)\r\n  initial_state[1, 1, 1, 1] = 1\r\n\r\n  prog = sf.Program(4)\r\n\r\n  with prog.context as q:\r\n      ops.Ket(initial_state) | q  # Initial state preparation\r\n      # Gaussian Layer\r\n      ops.S2gate(0.01, 0.01) | (q[0], q[1])\r\n      ops.BSgate(1.9, 1.7) | (q[1], q[2])\r\n      ops.BSgate(0.9, 0.2) | (q[0], q[1])\r\n      # Non-Gaussian Layer\r\n      ops.Kgate(0.5) | q[3]\r\n      ops.CKgate(0.7) | (q[2], q[3])\r\n      # Gaussian Layer\r\n      ops.BSgate(1.0, 0.4) | (q[0], q[1])\r\n      ops.BSgate(2.0, 1.5) | (q[1], q[2])\r\n      ops.Dgate(0.01) | q[0]\r\n      ops.Dgate(0.01) | q[0]\r\n      ops.Sgate(0.01, 0.01) | q[1]\r\n      # Non-Gaussian Layer\r\n      ops.Vgate(0.5) | q[2]\r\n\r\n  prog_merged = prog.compile(compiler=\"gaussian_merge\")\r\n  ```\r\n\r\n* A new operation, ``PassiveChannel`` has been added. It allows for arbitrary linear/passive transformations (i.e., any operation which is linear in creation operators). Currently only supported by the ``gaussian`` backend. [(#600)](https://github.com/XanaduAI/strawberryfields/pull/600)\r\n\r\n  ```python\r\n  from strawberryfields.ops import PassiveChannel, Sgate\r\n  import strawberryfields as sf\r\n  from scipy.stats import unitary_group\r\n  import numpy as np\r\n\r\n  M = 4\r\n\r\n  circuit = sf.Program(M)\r\n  U1 = unitary_group.rvs(M)\r\n  U2 = unitary_group.rvs(M)\r\n  losses = np.random.random(M)\r\n\r\n  T = U2 @ np.diag(losses) @ U1\r\n\r\n  eng = sf.Engine(backend='gaussian')\r\n  circuit = sf.Program(M)\r\n  with circuit.context as q:\r\n      for i in range(M):\r\n          ops.Sgate(1) | q[i]\r\n      ops.PassiveChannel(T) | q\r\n\r\n  cov = eng.run(circuit).state.cov()\r\n  ```\r\n\r\n* A new compiler, ``passive``, allows for a circuit which only consists of passive elements to be compiled into a single ``PassiveChannel``. [(#600)](https://github.com/XanaduAI/strawberryfields/pull/600)\r\n\r\n  ```python\r\n  from strawberryfields.ops import BSgate, LossChannel, Rgate\r\n  import strawberryfields as sf\r\n\r\n  circuit = sf.Program(2)\r\n  with circuit.context as q:\r\n      Rgate(np.pi) | q[0]\r\n      BSgate(0.25 * np.pi, 0) | (q[0], q[1])\r\n      LossChannel(0.9) | q[1]\r\n\r\n  compiled_circuit = circuit.compile(compiler=\"passive\")\r\n  ```\r\n  ```pycon\r\n  >>> print(compiled_circuit)\r\n     PassiveChannel([[-0.7071+8.6596e-17j -0.7071+0.0000e+00j]\r\n     [-0.6708+8.2152e-17j  0.6708+0.0000e+00j]]) | (q[0], q[1])\r\n  ```\r\n\r\n<h3>Improvements</h3>\r\n\r\n* `backends/tfbackend/ops.py` is cleaned up to reduce line count, clarify function similarity across backend ops, and replace `tensorflow.tensordot` with broadcasting. [(#567)](https://github.com/XanaduAI/strawberryfields/pull/567)\r\n\r\n* Support is added for using a ``TDMProgram`` to construct time-domain circuits with Fock measurements and multiple loops. [(#601)](https://github.com/XanaduAI/strawberryfields/pull/601)\r\n\r\n* `measure_threshold` in the `gaussian` backend now supports displaced Gaussian states. [(#615)](https://github.com/XanaduAI/strawberryfields/pull/615)\r\n\r\n* Speed improvements are addded to ``gaussian_unitary`` compiler. [(#603)](https://github.com/XanaduAI/strawberryfields/pull/603)\r\n\r\n* Adds native support in the Fock backend for the MZgate. [(#610)](https://github.com/XanaduAI/strawberryfields/issues/610)\r\n\r\n* `measure_threshold` is now supported in the `bosonic` backend. [(#618)](https://github.com/XanaduAI/strawberryfields/pull/618)\r\n\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* Fixes an unexpected behaviour that can result in increasing memory usage due to ``sympy.lambdify`` caching too much data using ``linecache``. [(#579)](https://github.com/XanaduAI/strawberryfields/pull/579)\r\n\r\n* Keeps symbolic expressions when converting a Strawberry Fields circuit to a Blackbird program by storing them as `blackbird.RegRefTransforms` in the resulting Blackbird program. [(#596)](https://github.com/XanaduAI/strawberryfields/pull/596)\r\n\r\n* Fixes a bug in the validation step of `strawberryfields.tdm.TdmProgram.compile` which almost always used the wrong set of allowed gate parameter ranges to validate the parameters in a program. [(#605)](https://github.com/XanaduAI/strawberryfields/pull/605)\r\n\r\n* The correct samples are now returned when running a `TDMProgram` with several shots, where `timebins % concurrent_modes != 0`. [(#611)](https://github.com/XanaduAI/strawberryfields/pull/611)\r\n\r\n* Fixes the formula used for sampling generaldyne outcomes in the gaussian backend. [(#614)](https://github.com/XanaduAI/strawberryfields/pull/614)\r\n\r\n* Measurement arguments are now stored as non-keyword arguments, instead of keyword arguments, in the resulting Blackbird program when using the `io.to_blackbird()` converter function. [(#622)](https://github.com/XanaduAI/strawberryfields/pull/622)\r\n\r\n* Factorials of numbers larger than 170 are now calculated using long integer arithmetic, using the flag `exact=True` in `scipy.special.factorial`, when calling `sf.apps.similarity.orbit_cardinality`. [(#628)](https://github.com/XanaduAI/strawberryfields/pull/628)\r\n\r\n<h3>Documentation</h3>\r\n\r\n* References to the ``simulon`` simulator target have been rewritten to ``simulon_gaussian`` to reflect changes made on the Xanadu Quantum Cloud. The language has been modified to imply that multiple simulators could be available on XQC. [(#576)](https://github.com/XanaduAI/strawberryfields/pull/576)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nJ. Eli Bourassa, Jake Bulmer, Sebastian Duque, Theodor Isacsson, Aaron Robertson, Jeremy Swinarton, Antal Sz\u00e1va, Federico Rueda, Yuan Yao.", "reactions": {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/50169891/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/42274876", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/42274876/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/42274876/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.18.0-post1", "id": 42274876, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQyMjc0ODc2", "tag_name": "v0.18.0-post1", "target_commitish": "v0.18.0-post1", "name": "Release 0.18.0-post1", "draft": false, "prerelease": false, "created_at": "2021-04-30T15:28:04Z", "published_at": "2021-04-30T15:30:12Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.18.0-post1", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.18.0-post1", "body": "<h3>Documentation</h3>\r\n\r\n* References to the ``simulon`` simulator target have been rewritten to ``simulon_gaussian`` to reflect changes made on the Xanadu Quantum Cloud. The language has been modified to imply that multiple simulators could be available on XQC. [(#576)](https://github.com/XanaduAI/strawberryfields/pull/576)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nJeremy Swinarton."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/41918977", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/41918977/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/41918977/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.18.0", "id": 41918977, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQxOTE4OTc3", "tag_name": "v0.18.0", "target_commitish": "master", "name": "Release 0.18.0", "draft": false, "prerelease": false, "created_at": "2021-04-23T18:18:56Z", "published_at": "2021-04-23T18:19:29Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.18.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.18.0", "body": "<h3>New features since last release</h3>\r\n\r\n* Adds the Bosonic backend, which can simulate states represented as linear  combinations of Gaussian functions in phase space. [(#533)](https://github.com/XanaduAI/strawberryfields/pull/533) [(#538)](https://github.com/XanaduAI/strawberryfields/pull/538) [(#539)](https://github.com/XanaduAI/strawberryfields/pull/539) [(#541)](https://github.com/XanaduAI/strawberryfields/pull/541) [(#546)](https://github.com/XanaduAI/strawberryfields/pull/546) [(#549)](https://github.com/XanaduAI/strawberryfields/pull/549)\r\n  \r\n  It can be regarded as a generalization of the Gaussian backend, since transformations on states correspond to modifications of the means and \r\n  covariances of each Gaussian in the linear combination, along with changes to the coefficients of the linear combination. Example states that can be expressed using the new backend include all Gaussian, Gottesman-Kitaev-Preskill, \r\n  cat and Fock states.\r\n  \r\n  ```python\r\n  prog = sf.Program(1)\r\n  eng = sf.Engine('bosonic')\r\n\r\n  with prog.context as q:\r\n      sf.ops.GKP(epsilon=0.1) | q\r\n      sf.ops.MeasureX | q\r\n\r\n  results = eng.run(prog, shots=200)\r\n  samples = results.samples[:, 0]\r\n\r\n  plt.hist(samples, bins=100)\r\n  plt.show()\r\n  ```\r\n\r\n* Adds the `sf.ops.GKP` operation, which allows the Gottesman-Kitaev-Preskill state to be initialized on both the Bosonic and Fock backends. [(#553)](https://github.com/XanaduAI/strawberryfields/pull/553) [(#546)](https://github.com/XanaduAI/strawberryfields/pull/546)\r\n\r\n  GKP states are qubits, with the qubit state defined by:\r\n\r\n  ![image](https://user-images.githubusercontent.com/2959003/115913373-1abab400-a4a3-11eb-9e50-9d9dfe48ee80.png)\r\n  \r\n  where the computational basis states are\r\n\r\n  ![image](https://user-images.githubusercontent.com/2959003/115913414-273f0c80-a4a3-11eb-9cb0-a509348c6207.png)\r\n  \r\n* Adds the measurement-based squeezing gate `MSgate`; a new front-end operation  for the Bosonic backend. [(#538)](https://github.com/XanaduAI/strawberryfields/pull/538) [(#539)](https://github.com/XanaduAI/strawberryfields/pull/539) [(#541)](https://github.com/XanaduAI/strawberryfields/pull/541)\r\n  \r\n  `MSgate` is an implementation of inline squeezing that can be performed by  interacting the target state with an ancillary squeezed vacuum state at a  beamsplitter, measuring the ancillary mode with homodyne, and then applying a feed-forward displacement. The channel is implemented either on average (as a Gaussian CPTP map) or in the single-shot implementation. If the single-shot implementation is used, the measurement outcome of the ancillary mode is stored in the results object.\r\n  \r\n  ```python\r\n  prog = sf.Program(1)\r\n  eng = sf.Engine('bosonic')\r\n  \r\n  with prog.context as q:\r\n      sf.ops.Catstate(alpha=2) | q\r\n      r = 0.3\r\n      # Average map\r\n      sf.ops.MSgate(r, phi=0, r_anc=1.2, eta_anc=1, avg=True) | q\r\n      # Single-shot map\r\n      sf.ops.MSgate(r, phi=0, r_anc=1.2, eta_anc=1, avg=False) | q\r\n  \r\n  results = eng.run(prog)\r\n  ancilla_samples = results.ancilla_samples\r\n  \r\n  xvec = np.arange(-5, 5, 0.01)\r\n  pvec = np.arange(-5, 5, 0.01)\r\n  wigner = results.state.wigner(0, xvec, pvec)\r\n  \r\n  plt.contourf(xvec, pvec, wigner)\r\n  plt.show()\r\n  ```\r\n\r\n* The `tf` backend now accepts the Tensor DType as argument. [(#562)](https://github.com/XanaduAI/strawberryfields/pull/562)\r\n\r\n  Allows high cutoff dimension to give numerically correct calculations:\r\n\r\n  ```python\r\n  prog = sf.Program(2)\r\n  eng  = sf.Engine(\"tf\", backend_options={\"cutoff_dim\": 50, \"dtype\": tf.complex128})\r\n  with prog.context as q:\r\n      Sgate(0.8) | q[0]\r\n      Sgate(0.8) | q[1]\r\n      BSgate(0.5,0.5) | (q[0], q[1])\r\n      BSgate(0.5,0.5) | (q[0], q[1])\r\n  state = eng.run(prog).state\r\n  N0, N0var = state.mean_photon(0)\r\n  N1, N1var = state.mean_photon(1)\r\n  print(N0)\r\n  print(N1)\r\n  print(\"analytical:\", np.sinh(0.8)**2)\r\n  ```\r\n\r\n<h3>Improvements</h3>\r\n\r\n* Program compilation has been modified to support the XQC simulation service, Simulon. [(#545)](https://github.com/XanaduAI/strawberryfields/pull/545)\r\n\r\n* The `sympmat`, `rotation_matrix`, and `haar_measure` functions have been removed from `backends/shared_ops.py`. These functions are now imported from The Walrus. In addition, various outdated functionality from the `shared_ops.py` file has been removed, including the caching of beamsplitter and squeezing pre-factors. [(#560)](https://github.com/XanaduAI/strawberryfields/pull/560) [(#558)](https://github.com/XanaduAI/strawberryfields/pull/558)\r\n\r\n* Sample processing in the `TDMProgram` is now more efficient, by replacing calls to `pop` with fancy indexing. [(#548)](https://github.com/XanaduAI/strawberryfields/pull/548)\r\n\r\n* No `VisibleDeprecationWarning` is raised when using the state `wigner` method. [(#564)](https://github.com/XanaduAI/strawberryfields/pull/564)\r\n\r\n* The backend utility module `shared_ops.py` has been removed, with all of its functionality now provided by The Walrus. [(#573)](https://github.com/XanaduAI/strawberryfields/pull/573)\r\n\r\n<h3>Breaking changes</h3>\r\n\r\n* Removes support for Python 3.6. [(#573)](https://github.com/XanaduAI/strawberryfields/pull/573)\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* `Connection` objects now send requests to the platform API at version `0.2.0` instead of the incorrect version number `1.0.0`. [(#540)](https://github.com/XanaduAI/strawberryfields/pull/540)\r\n\r\n* TDM programs now expect a flat (not nested) dictionary of `modes` in device  specifications obtained from the XQC platform API. [(#566)](https://github.com/XanaduAI/strawberryfields/pull/566)\r\n\r\n* Fixes a bug in the `CatState` operation, whereby the operation would return incorrect results for a high cutoff value. [(#557)](https://github.com/XanaduAI/strawberryfields/pull/557) [(#556)](https://github.com/XanaduAI/strawberryfields/pull/556)\r\n\r\n<h3>Documentation</h3>\r\n\r\n* The \"Hardware\" quickstart page has been renamed to \"Xanadu Quantum Cloud\" to encompass both hardware and cloud simulators. A new \"Cloud simulator\" entry has been added, describing how to submit programs to be executed via the XQC simulator. [(#547)](https://github.com/XanaduAI/strawberryfields/pull/547)\r\n\r\n* Cleanup docs to make contribution easier. [(#561)](https://github.com/XanaduAI/strawberryfields/pull/561)\r\n\r\n* Add development requirements and format script to make contribution easier. [(#563)](https://github.com/XanaduAI/strawberryfields/pull/563)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nJ. Eli Bourassa, Guillaume Dauphinais, Ish Dhand, Theodor Isacsson, Josh Izaac, Leonhard Neuhaus, Nicol\u00e1s Quesada, Aaron Robertson, Krishna Kumar Sabapathy, Jeremy Swinarton, Antal Sz\u00e1va, Ilan Tzitrin."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/36430765", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/36430765/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/36430765/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.17.0", "id": 36430765, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM2NDMwNzY1", "tag_name": "v0.17.0", "target_commitish": "master", "name": "Release 0.17.0", "draft": false, "prerelease": false, "created_at": "2021-01-15T05:47:29Z", "published_at": "2021-01-15T06:26:53Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.17.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.17.0", "body": "\r\n<h3>New features since last release</h3>\r\n\r\n* `TDMProgram` objects can now be compiled and submitted via the API. [(#476)](https://github.com/XanaduAI/strawberryfields/pull/476)\r\n\r\n* Wigner functions can be plotted directly via Strawberry Fields using Plot.ly. [(#495)](https://github.com/XanaduAI/strawberryfields/pull/495)\r\n\r\n  ```python\r\n  prog = sf.Program(1)\r\n  eng = sf.Engine('fock', backend_options={\"cutoff_dim\": 10})\r\n\r\n  with prog.context as q:\r\n      gamma = 2\r\n      Vgate(gamma) | q[0]\r\n\r\n  state = eng.run(prog).state\r\n\r\n  xvec = np.arange(-4, 4, 0.01)\r\n  pvec = np.arange(-4, 4, 0.01)\r\n  mode = 0\r\n\r\n  sf.plot_wigner(state, mode, xvec, pvec, renderer=\"browser\")\r\n  ```\r\n\r\n* Fock state marginal probabilities can be plotted directly via Strawberry Fields using Plot.ly. [(#510)](https://github.com/XanaduAI/strawberryfields/pull/510)\r\n\r\n  ```python\r\n  prog = sf.Program(1)\r\n  eng = sf.Engine('fock', backend_options={\"cutoff_dim\":5})\r\n\r\n  with prog.context as q:\r\n      Sgate(0.5) | q[0]\r\n\r\n  state = eng.run(prog).state\r\n  state.all_fock_probs()\r\n\r\n  modes = [0]\r\n\r\n  sf.plot_fock(state, modes, cutoff=5, renderer=\"browser\")\r\n  ```\r\n\r\n* Position and momentum quadrature probabilities can be plotted directly via Strawberry Fields using Plot.ly. [(#510)](https://github.com/XanaduAI/strawberryfields/pull/510)\r\n\r\n  ```python\r\n  prog = sf.Program(1)\r\n  eng = sf.Engine('fock', backend_options={\"cutoff_dim\":5})\r\n\r\n  with prog.context as q:\r\n      Sgate(0.5) | q[0]\r\n\r\n  state = eng.run(prog).state\r\n\r\n  modes = [0]\r\n  xvec = np.arange(-4, 4, 0.1)\r\n  pvec = np.arange(-4, 4, 0.1)\r\n\r\n  sf.plot_quad(state, modes, xvec, pvec, renderer=\"browser\")\r\n  ```\r\n\r\n* Strawberry Fields code can be generated from a program (and an engine) by calling `sf.io.generate_code(program, eng=engine)`. [(#496)](https://github.com/XanaduAI/strawberryfields/pull/496)\r\n\r\n<h3>Improvements</h3>\r\n\r\n* `Connection` objects now send versioned requests to the platform API. [(#512)](https://github.com/XanaduAI/strawberryfields/pull/512)\r\n\r\n* `TDMProgram` allows application of gates with more than one symbolic parameter. [#492](https://github.com/XanaduAI/strawberryfields/pull/492)\r\n\r\n* The `copies` option, when constructing a `TDMProgram`, has been removed. Instead, the number of copies of a TDM algorithm can now be set by passing the `shots` keyword argument to the `eng.run()` method. [(#489)](https://github.com/XanaduAI/strawberryfields/pull/489)\r\n\r\n  ```pycon\r\n  >>> with prog.context([1, 2], [3, 4]) as (p, q):\r\n  ...     ops.Sgate(0.7, 0) | q[1]\r\n  ...     ops.BSgate(p[0]) | (q[0], q[1])\r\n  ...     ops.MeasureHomodyne(p[1]) | q[0]\r\n  >>> eng = sf.Engine(\"gaussian\")\r\n  >>> results = eng.run(prog, shots=3)\r\n  ```\r\n\r\n  Furthermore, the `TDMProgram.unrolled_circuit` attribute now only contains the single-shot unrolled circuit. Unrolling with multiple shots can still be specified via the `unroll` method: `TDMProgram.unroll(shots=60)`.\r\n\r\n* The `Result.samples` returned by TDM programs has been updated to return samples of shape `(shots, spatial modes, timebins)` instead of `(shots, spatial modes * timebins)`. [(#489)](https://github.com/XanaduAI/strawberryfields/pull/489)\r\n\r\n* A sample post-processing function is added that allows users to move vacuum mode measurements from the first shots to the last shots, and potentially crop out the final shots containing these measurements. [(#489)](https://github.com/XanaduAI/strawberryfields/pull/489)\r\n\r\n* `pytest-randomly` is added to the SF tests. [(#480)](https://github.com/XanaduAI/strawberryfields/pull/480)\r\n\r\n* `TDMProgram` objects can now be serialized into Blackbird scripts, and vice versa. [(#476)](https://github.com/XanaduAI/strawberryfields/pull/476)\r\n\r\n<h3>Breaking Changes</h3>\r\n\r\n* Jobs are submitted to the Xanadu Quantum Cloud through a new OAuth based authentication flow using offline refresh tokens and access tokens. [(#520)](https://github.com/XanaduAI/strawberryfields/pull/520)\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* Fixes a bug where `Dgate`, `Coherent`, and `DisplacedSqueezed` do not support TensorFlow tensors if the tensor has an added dimension due to the existence of batching. [(#507)](https://github.com/XanaduAI/strawberryfields/pull/507)\r\n\r\n* Fixes an issue with `reshape_samples` where the samples were sometimes reshaped in the wrong way. [(#489)](https://github.com/XanaduAI/strawberryfields/pull/489)\r\n\r\n* The list of modes is now correctly added to the Blackbird program when using the `io.to_blackbird` function. [(#476)](https://github.com/XanaduAI/strawberryfields/pull/476)\r\n\r\n* Fixes a bug where printing the `Result` object containing samples from a time-domain job would result in an error. Printing the result object now correctly displays information about the results. [(#493)](https://github.com/XanaduAI/strawberryfields/pull/493)\r\n\r\n* Removes the `antlr4` requirement due to version conflicts. [(#494)](https://github.com/XanaduAI/strawberryfields/pull/494)\r\n\r\n* `TDMProgram.run_options` is now correctly used when running a TDM program. [(#500)](https://github.com/XanaduAI/strawberryfields/pull/500)\r\n\r\n* Fixes a bug where a single parameter list passed to the `TDMProgram` context results in an error. [(#503)](https://github.com/XanaduAI/strawberryfields/pull/503)\r\n\r\n<h3>Documentation</h3>\r\n\r\n* `TDMProgram` docstring is updated to make it clear that only Gaussian programs are allowed. [(#519)](https://github.com/XanaduAI/strawberryfields/pull/519)\r\n\r\n* Clarifies special cases for the `MZgate` in the docstring. [(#479)](https://github.com/XanaduAI/strawberryfields/pull/479)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nTom Bromley, Jack Brown, Theodor Isacsson, Josh Izaac, Fabian Laudenbach, Tim Leisti, Nicolas Quesada, Antal Sz\u00e1va."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/32877936", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/32877936/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/32877936/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.16.0", "id": 32877936, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMyODc3OTM2", "tag_name": "v0.16.0", "target_commitish": "master", "name": "Release 0.16.0", "draft": false, "prerelease": false, "created_at": "2020-10-21T16:45:56Z", "published_at": "2020-10-21T17:27:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.16.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.16.0", "body": "\r\n<h3>New features since last release</h3>\r\n\r\n* Adds the ability to construct time domain multiplexing algorithms via the new `sf.TDMProgram` class, for highly scalable simulation of Gaussian states. [(#440)](https://github.com/XanaduAI/strawberryfields/pull/440)\r\n\r\n  For example, creating and simulating a time domain program with 2 concurrent modes:\r\n\r\n  ```pycon\r\n  >>> import strawberryfields as sf\r\n  >>> from strawberryfields import ops\r\n  >>> prog = sf.TDMProgram(N=2)\r\n  >>> with prog.context([1, 2], [3, 4], copies=3) as (p, q):\r\n  ...     ops.Sgate(0.7, 0) | q[1]\r\n  ...     ops.BSgate(p[0]) | (q[0], q[1])\r\n  ...     ops.MeasureHomodyne(p[1]) | q[0]\r\n  >>> eng = sf.Engine(\"gaussian\")\r\n  >>> results = eng.run(prog)\r\n  >>> print(results.all_samples)\r\n  {0: [array([1.26208025]), array([1.53910032]), array([-1.29648336]),\r\n  array([0.75743215]), array([-0.17850101]), array([-1.44751996])]}\r\n  ```\r\n\r\n  For more details, see the [code documentation](https://strawberryfields.readthedocs.io/en/stable/code/api/strawberryfields.TDMProgram.html).\r\n\r\n* Adds the function `VibronicTransition` to the `apps.qchem.vibronic` module. This function generates a custom Strawberry Fields operation for applying the Doktorov operator on a given state. [(#451)](https://github.com/XanaduAI/strawberryfields/pull/451)\r\n\r\n  ```pycon\r\n  >>> from strawberryfields.apps.qchem.vibronic import VibronicTransition\r\n  >>> modes = 2\r\n  >>> p = sf.Program(modes)\r\n  >>> with p.context as q:\r\n  ...     VibronicTransition(U1, r, U2, alpha) | q\r\n  ```\r\n\r\n* Adds the `TimeEvolution` function to the `apps.qchem.dynamics` module. This function generates a custom Strawberry Fields operation for applying a time evolution operator on a given state. [(#455)](https://github.com/XanaduAI/strawberryfields/pull/455)\r\n\r\n  ```pycon\r\n  >>> modes = 2\r\n  >>> p = sf.Program(modes)\r\n  >>> with p.context as q:\r\n  ...     sf.ops.Fock(1) | q[0]\r\n  ...     sf.ops.Interferometer(Ul.T) | q\r\n  ...     TimeEvolution(w, t) | q\r\n  ...     sf.ops.Interferometer(Ul) | q\r\n  ```\r\n\r\n  where `w` is the normal mode frequencies, and `t` the time in femtoseconds.\r\n\r\n* Molecular data and pre-generated samples for water and pyrrole have been added to the data module of the Applications layer of Strawberry Fields. For more details, please see the [data module documentation](https://strawberryfields.readthedocs.io/en/stable/introduction/data.html#molecules) [(#463)](https://github.com/XanaduAI/strawberryfields/pull/463)\r\n\r\n* Adds the function `read_gamess` to the qchem module to extract the atomic coordinates, atomic masses, vibrational frequencies, and normal modes of a molecule from the output file of a vibrational frequency calculation performed with the GAMESS quantum chemistry package. [(#460)](https://github.com/XanaduAI/strawberryfields/pull/460)\r\n\r\n  ```pycon\r\n  >>> r, m, w, l = read_gamess('../BH_data.out')\r\n  >>> r # atomic coordinates\r\n  array([[0.0000000, 0.0000000, 0.0000000],\r\n         [1.2536039, 0.0000000, 0.0000000]])\r\n  >>> m # atomic masses\r\n  array([11.00931,  1.00782])\r\n  >>> w # vibrational frequencies\r\n  array([19.74, 19.73, 0.00, 0.00, 0.00, 2320.32])\r\n  >>> l # normal modes\r\n  array([[-0.0000000e+00, -7.5322000e-04, -8.7276210e-02,  0.0000000e+00,\r\n       8.2280900e-03,  9.5339055e-01],\r\n     [-0.0000000e+00, -8.7276210e-02,  7.5322000e-04,  0.0000000e+00,\r\n       9.5339055e-01, -8.2280900e-03],\r\n     [ 2.8846925e-01, -2.0000000e-08,  2.0000000e-08,  2.8846925e-01,\r\n      -2.0000000e-08,  2.0000000e-08],\r\n     [ 2.0000000e-08,  2.8846925e-01, -2.0000000e-08,  2.0000000e-08,\r\n       2.8846925e-01, -2.0000000e-08],\r\n     [-2.0000000e-08,  2.0000000e-08,  2.8846925e-01, -2.0000000e-08,\r\n       2.0000000e-08,  2.8846925e-01],\r\n     [-8.7279460e-02,  0.0000000e+00,  0.0000000e+00,  9.5342606e-01,\r\n      -0.0000000e+00, -0.0000000e+00]])\r\n  ```\r\n\r\n<h3>Improvements</h3>\r\n\r\n* When jobs submitted to the Xanadu Quantum Cloud are canceled, they will now display a `cancel_pending` JobStatus until the cancellation is confirmed. [(#456)](https://github.com/XanaduAI/strawberryfields/pull/456)\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* Fixed a bug where the function `reduced_dm` in `backends/tfbackend/states.py` gives the wrong output when passing it several modes. [(#471)](https://github.com/XanaduAI/strawberryfields/pull/471)\r\n\r\n* Fixed a bug in the function `reduced_density_matrix` in `backends/tfbackend/ops.py` which caused the wrong subsystems to be traced out. [(#467)](https://github.com/XanaduAI/strawberryfields/issues/467) [(#470)](https://github.com/XanaduAI/strawberryfields/pull/470)\r\n\r\n* Fixed a bug where decompositions to Mach-Zehnder interferometers would return incorrect results on NumPy 1.19. [(#473)](https://github.com/XanaduAI/strawberryfields/pull/473)\r\n\r\n* The Walrus version 0.14 introduced modified function names. Affected functions have been updated in Strawberry Fields to avoid deprecation warnings. [(#472)](https://github.com/XanaduAI/strawberryfields/pull/472)\r\n\r\n<h3>Documentation</h3>\r\n\r\n* Adds further testing and coverage descriptions to the developer documentation. This includes details regarding the Strawberry Fields test structure and test decorators. [(#461)](https://github.com/XanaduAI/strawberryfields/pull/461)\r\n\r\n* Updates the minimum required version of TensorFlow in the development guide. [(#468)](https://github.com/XanaduAI/strawberryfields/pull/468)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nJuan Miguel Arrazola, Tom Bromley, Theodor Isacsson, Josh Izaac, Soran Jahangiri, Nathan Killoran, Fabian Laudenbach, Nicol\u00e1s Quesada, Antal Sz\u00e1va, \u202aIlan Tzitrin."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/31227831", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/31227831/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/31227831/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.15.1", "id": 31227831, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMxMjI3ODMx", "tag_name": "v0.15.1", "target_commitish": "master", "name": "Release 0.15.1", "draft": false, "prerelease": false, "created_at": "2020-09-14T02:26:45Z", "published_at": "2020-09-14T02:41:29Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.15.1", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.15.1", "body": "<h3>Improvements</h3>\r\n\r\n* Adds the ability to bypass recompilation of programs if they have been compiled already to the target device. [(#447)](https://github.com/XanaduAI/strawberryfields/pull/447)\r\n\r\n<h3>Breaking Changes</h3>\r\n\r\n* Changes the default compiler for devices that don't specify a default from `\"Xcov\"` to `\"Xunitary\"`. This compiler is slightly more strict and only compiles the unitary, not the initial squeezers, however avoids any unintentional permutations. [(#445)](https://github.com/XanaduAI/strawberryfields/pull/445)\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* Fixes a bug where a program that amounts to the identity operation would cause an error when compiled using the `xcov` compiler. [(#444)](https://github.com/XanaduAI/strawberryfields/pull/444)\r\n\r\n<h3>Documentation</h3>\r\n\r\n* Updates the `README.rst` file and hardware access links. [(#448)](https://github.com/XanaduAI/strawberryfields/pull/448)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nTheodor Isacsson, Josh Izaac, Nathan Killoran, Nicol\u00e1s Quesada, Antal Sz\u00e1va"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/29849360", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/29849360/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/29849360/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.15.0", "id": 29849360, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODQ5MzYw", "tag_name": "v0.15.0", "target_commitish": "master", "name": "Release 0.15.0", "draft": false, "prerelease": false, "created_at": "2020-08-19T06:50:01Z", "published_at": "2020-08-19T06:59:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.15.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.15.0", "body": "\r\n<h3>New features since last release</h3>\r\n\r\n* Adds the ability to train variational GBS circuits in the applications layer. [(#387)](https://github.com/XanaduAI/strawberryfields/pull/387) [(#388)](https://github.com/XanaduAI/strawberryfields/pull/388) [(#391)](https://github.com/XanaduAI/strawberryfields/pull/391) [(#393)](https://github.com/XanaduAI/strawberryfields/pull/393) [(#414)](https://github.com/XanaduAI/strawberryfields/pull/414) [(#415)](https://github.com/XanaduAI/strawberryfields/pull/415)\r\n\r\n  Trainable parameters can be embedded into a VGBS class:\r\n\r\n  ```python\r\n  from strawberryfields.apps import data, train\r\n\r\n  d = data.Mutag0()\r\n  embedding = train.Exp(d.modes)\r\n  n_mean = 5\r\n\r\n  vgbs = train.VGBS(d.adj, 5, embedding, threshold=False, samples=np.array(d[:1000]))\r\n  ```\r\n\r\n  Properties of the variational GBS distribution for different choices of trainable parameters can then be inspected:\r\n\r\n  ```pycon\r\n  >>> params = 0.1 * np.ones(d.modes)\r\n  >>> vgbs.n_mean(params)\r\n  3.6776094165797364\r\n  ```\r\n\r\n  A cost function can then be created and its value and gradient accessed:\r\n\r\n  ```pycon\r\n  >>> h = lambda x: np.sum(x)\r\n  >>> cost = train.Stochastic(h, vgbs)\r\n  >>> cost(params, n_samples=1000)\r\n  3.940396998165503\r\n  >>> cost.grad(params, n_samples=1000)\r\n  array([-0.54988876, -0.49270263, -0.6628071 , -1.13057762, -1.13568456,\r\n       -0.70180571, -0.6266806 , -0.68803539, -1.11032533, -1.12853718,\r\n       -0.59172261, -0.47830748, -0.96901676, -0.66938217, -0.85162006,\r\n       -0.27188134, -0.26955011])\r\n  ```\r\n\r\n  For more details, see the [VGBS training demo](https://strawberryfields.ai/photonics/apps/run_tutorial_training.html).\r\n\r\n* Feature vectors of graphs can now be calculated exactly in the `apps.similarity` module of the applications layer. Datasets of pre-calculated feature vectors are available in `apps.data`. [(#390)](https://github.com/XanaduAI/strawberryfields/pull/390) [(#401)](https://github.com/XanaduAI/strawberryfields/pull/401)\r\n\r\n  ```pycon\r\n  >>> from strawberryfields.apps import data\r\n  >>> from strawberryfields.apps.similarity import feature_vector_sampling\r\n  >>> samples = data.Mutag0()\r\n  >>> feature_vector_sampling(samples, [2, 4, 6])\r\n  [0.19035, 0.2047, 0.1539]\r\n  ```\r\n\r\n  For more details, see the [graph similarity demo](https://strawberryfields.ai/photonics/apps/run_tutorial_similarity.html).\r\n\r\n* A new `strawberryfields.apps.qchem` module has been introduced, centralizing all quantum chemistry applications. This includes various new features and improvements:\r\n\r\n  * Adds the `apps.qchem.duschinsky()` function for generation of the Duschinsky rotation matrix and displacement vector which are needed to simulate a vibronic process with Strawberry Fields. [(#434)](https://github.com/XanaduAI/strawberryfields/pull/434)\r\n\r\n  * Adds the `apps.qchem.dynamics` module for simulating vibrational quantum dynamics in molecules. [(#402)](https://github.com/XanaduAI/strawberryfields/pull/402) [(#411)](https://github.com/XanaduAI/strawberryfields/pull/411) [(#419)](https://github.com/XanaduAI/strawberryfields/pull/419) [(#421)](https://github.com/XanaduAI/strawberryfields/pull/421) [(#423)](https://github.com/XanaduAI/strawberryfields/pull/423) [(#430)](https://github.com/XanaduAI/strawberryfields/pull/430)\r\n\r\n    This includes:\r\n\r\n    - `dynamics.evolution()` constructs a custom operation that encodes the input chemical information. This custom operation can then be used within a Strawberry Fields `Program`.\r\n\r\n    - `dynamics.sample_coherent()`, `dynamics.sample_fock()` and `dynamics.sample_tmsv()` functions allow for generation of samples from a variety of input states.\r\n\r\n    - The probability of an excited state can then be estimated with the `dynamics.prob()` function, which calculates the relative frequency of the excited state among the generated samples.\r\n\r\n    - Finally, the `dynamics.marginals()` function generates marginal distributions.\r\n\r\n  * The `sf.apps.vibronic` module has been relocated to within the `qchem` module. As a result, the `apps.sample.vibronic()` function is now accessible under `apps.qchem.vibronic.sample()`, providing a single location for quantum chemistry functionality. [(#416)](https://github.com/XanaduAI/strawberryfields/pull/416)\r\n\r\n  For more details, please see the [qchem documentation](https://strawberryfields.readthedocs.io/en/latest/code/api/strawberryfields.apps.qchem.html).\r\n\r\n* The `GaussianState` returned from simulations using the Gaussian backend now has feature parity with the `FockState` object returned from the Fock backends. [(#407)](https://github.com/XanaduAI/strawberryfields/pull/407)\r\n\r\n  In particular, it now supports the following methods:\r\n\r\n  - `GaussianState.dm()`\r\n  - `GaussianState.ket()`\r\n  - `GaussianState.all_fock_probs()`\r\n\r\n  In addition, the existing `GaussianState.reduced_dm()` method now supports multi-mode reduced density matrices.\r\n\r\n* Adds the `sf.utils.samples_expectation`, `sf.utils.samples_variance` and `sf.utils.all_fock_probs_pnr` functions for obtaining counting statistics from samples. [(#399)](https://github.com/XanaduAI/strawberryfields/pull/399)\r\n\r\n* Compilation of Strawberry Fields programs has been overhauled.\r\n\r\n  * Strawberry Fields can now access the Xanadu Cloud device specifications API. The `Connection` class has a new method `Connection.get_device`, which returns a `DeviceSpec` class. [(#429)](https://github.com/XanaduAI/strawberryfields/pull/429) [(#432)](https://github.com/XanaduAI/strawberryfields/pull/432)\r\n\r\n  * New `Xstrict`, `Xcov`, and `Xunitary` compilers for compiling programs into the X architecture have been added. [(#358)](https://github.com/XanaduAI/strawberryfields/pull/358) [(#438)](https://github.com/XanaduAI/strawberryfields/pull/438)\r\n\r\n  * Finally, the `strawberryfields.circuitspecs` module has been renamed to `strawberryfields.compilers`.\r\n\r\n* Adds `diagonal_expectation` method for the `BaseFockState` class, which returns the expectation value of any operator that is diagonal in the number basis. [(#389)](https://github.com/XanaduAI/strawberryfields/pull/389)\r\n\r\n* Adds `parity_expectation` method as an instance of `diagonal_expectation` for the `BaseFockState` class, and its own function for `BaseGaussianState`. This returns the expectation value of the parity operator, defined as (-1)^N. [(#389)](https://github.com/XanaduAI/strawberryfields/pull/389)\r\n\r\n<h3>Improvements</h3>\r\n\r\n* Modifies the rectangular interferometer decomposition to make it more efficient for hardware devices. Rather than decomposing the interferometer using Clements :math:`T` matrices, the decomposition now directly produces Mach-Zehnder interferometers corresponding to on-chip phases. [(#363)](https://github.com/XanaduAI/strawberryfields/pull/363)\r\n\r\n* Changes the `number_expectation` method for the `BaseFockState` class to be an instance of `diagonal_expectation`. [(#389)](https://github.com/XanaduAI/strawberryfields/pull/389)\r\n\r\n* Increases the speed at which the following gates are generated: `Dgate`, `Sgate`, `BSgate` and `S2gate` by relying on a recursive implementation recently introduced in `thewalrus`. This has substantial effects on the speed of the `Fockbackend` and the `TFbackend`, especially for high cutoff values. [(#378)](https://github.com/XanaduAI/strawberryfields/pull/378) [(#381)](https://github.com/XanaduAI/strawberryfields/pull/381)\r\n\r\n* All measurement samples can now be accessed via the `results.all_samples` attribute, which returns a dictionary mapping the mod index to a list of measurement values. This is useful for cases where a single mode may be measured multiple times. [(#433)](https://github.com/XanaduAI/strawberryfields/pull/433)\r\n\r\n<h3>Breaking Changes</h3>\r\n\r\n* Removes support for Python 3.5. [(#385)](https://github.com/XanaduAI/strawberryfields/pull/385)\r\n\r\n* Complex parameters now are expected in polar form as two separate real parameters. [(#378)](https://github.com/XanaduAI/strawberryfields/pull/378)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nJuan Miguel Arrazola, Tom Bromley, Jack Ceroni, Aroosa Ijaz, Theodor Isacsson, Josh Izaac, Nathan Killoran, Soran Jahangiri, Shreya P. Kumar, Filippo Miatto, Nicol\u00e1s Quesada, Antal Sz\u00e1va\r\n"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/27862203", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/27862203/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/27862203/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.14.0.post2", "id": 27862203, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI3ODYyMjAz", "tag_name": "v0.14.0.post2", "target_commitish": "v0.14.0.post2", "name": "0.14.0.post2", "draft": false, "prerelease": false, "created_at": "2020-06-24T08:23:16Z", "published_at": "2020-06-24T08:24:18Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.14.0.post2", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.14.0.post2", "body": "Post release to address changes to the documentation."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/26167118", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/26167118/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/26167118/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.14.0", "id": 26167118, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2MTY3MTE4", "tag_name": "v0.14.0", "target_commitish": "master", "name": "Release 0.14.0", "draft": false, "prerelease": false, "created_at": "2020-05-05T03:28:42Z", "published_at": "2020-05-05T03:33:03Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.14.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.14.0", "body": "<h3>New features since last release</h3>\r\n\r\n* The `\"tf\"` backend now supports TensorFlow 2.0 and above. [(#283)](https://github.com/XanaduAI/strawberryfields/pull/283) [(#320)](https://github.com/XanaduAI/strawberryfields/pull/320) [(#323)](https://github.com/XanaduAI/strawberryfields/pull/323) [(#361)](https://github.com/XanaduAI/strawberryfields/pull/361) [(#372)](https://github.com/XanaduAI/strawberryfields/pull/372) [(#373)](https://github.com/XanaduAI/strawberryfields/pull/373) [(#374)](https://github.com/XanaduAI/strawberryfields/pull/374) [(#375)](https://github.com/XanaduAI/strawberryfields/pull/375) [(#377)](https://github.com/XanaduAI/strawberryfields/pull/377)\r\n\r\n  For more details and demonstrations of the new TensorFlow 2.0-compatible backend, see our [optimization and machine learning tutorials](https://strawberryfields.readthedocs.io/en/stable/introduction/tutorials.html#optimization-and-machine-learning).\r\n\r\n  For example, using TensorFlow 2.0 to train a variational photonic circuit:\r\n\r\n  ```python\r\n  eng = sf.Engine(backend=\"tf\", backend_options={\"cutoff_dim\": 7})\r\n  prog = sf.Program(1)\r\n\r\n  with prog.context as q:\r\n      # Apply a single mode displacement with free parameters\r\n      Dgate(prog.params(\"a\"), prog.params(\"p\")) | q[0]\r\n\r\n  opt = tf.keras.optimizers.Adam(learning_rate=0.1)\r\n\r\n  alpha = tf.Variable(0.1)\r\n  phi = tf.Variable(0.1)\r\n\r\n  for step in range(50):\r\n      # reset the engine if it has already been executed\r\n      if eng.run_progs:\r\n          eng.reset()\r\n\r\n      with tf.GradientTape() as tape:\r\n          # execute the engine\r\n          results = eng.run(prog, args={'a': alpha, 'p': phi})\r\n          # get the probability of fock state |1>\r\n          prob = results.state.fock_prob([1])\r\n          # negative sign to maximize prob\r\n          loss = -prob\r\n\r\n      gradients = tape.gradient(loss, [alpha, phi])\r\n      opt.apply_gradients(zip(gradients, [alpha, phi]))\r\n      print(\"Value at step {}: {}\".format(step, prob))\r\n  ```\r\n\r\n* Adds the method `number_expectation`  that calculates the expectation value of the product of the number operators of a given set of modes. [(#348)](https://github.com/XanaduAI/strawberryfields/pull/348/)\r\n\r\n  ```python\r\n  prog = sf.Program(3)\r\n  with prog.context as q:\r\n      ops.Sgate(0.5) | q[0]\r\n      ops.Sgate(0.5) | q[1]\r\n      ops.Sgate(0.5) | q[2]\r\n      ops.BSgate(np.pi/3, 0.1) |  (q[0], q[1])\r\n      ops.BSgate(np.pi/3, 0.1) |  (q[1], q[2])\r\n  ```\r\n\r\n  Executing this on the Fock backend,\r\n\r\n  ```python\r\n  >>> eng = sf.Engine(\"fock\", backend_options={\"cutoff_dim\": 10})\r\n  >>> state = eng.run(prog).state\r\n  ```\r\n\r\n  we can compute the expectation value `<n_0 n_2>`:\r\n\r\n  ```python\r\n  >>> state.number_expectation([0, 2])\r\n  ```\r\n\r\n<h3>Improvements</h3>\r\n\r\n* Add details to the error message for failed remote jobs. [(#370)](https://github.com/XanaduAI/strawberryfields/pull/370)\r\n\r\n* The required version of The Walrus was increased to version 0.12, for\r\n  tensor number expectation support. [(#380)](https://github.com/XanaduAI/strawberryfields/pull/380)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nTom Bromley, Theodor Isacsson, Josh Izaac, Nathan Killoran, Filippo Miatto, Nicol\u00e1s Quesada, Antal Sz\u00e1va, Paul Tan."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/25538748", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/25538748/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/25538748/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.13.0", "id": 25538748, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1NTM4NzQ4", "tag_name": "v0.13.0", "target_commitish": "master", "name": "Release 0.13.0", "draft": false, "prerelease": false, "created_at": "2020-04-15T16:29:19Z", "published_at": "2020-04-15T16:54:54Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.13.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.13.0", "body": "<h3>New features since last release</h3>\r\n\r\n* Adds initial support for the Xanadu's photonic quantum hardware. [(#101)](https://github.com/XanaduAI/strawberryfields/pull/101) [(#148)](https://github.com/XanaduAI/strawberryfields/pull/148) [(#294)](https://github.com/XanaduAI/strawberryfields/pull/294) [(#327)](https://github.com/XanaduAI/strawberryfields/pull/327) [(#328)](https://github.com/XanaduAI/strawberryfields/pull/328) [(#329)](https://github.com/XanaduAI/strawberryfields/pull/329) [(#330)](https://github.com/XanaduAI/strawberryfields/pull/330) [(#334)](https://github.com/XanaduAI/strawberryfields/pull/334) [(#336)](https://github.com/XanaduAI/strawberryfields/pull/336) [(#337)](https://github.com/XanaduAI/strawberryfields/pull/337) [(#339)](https://github.com/XanaduAI/strawberryfields/pull/339)\r\n\r\n  Jobs can now be submitted to the Xanadu Quantum Cloud platform to be run on supported hardware using the new `RemoteEngine`:\r\n\r\n  ```python\r\n  import strawberryfields as sf\r\n  from strawberryfields import ops\r\n  from strawberryfields.utils import random_interferometer\r\n\r\n  # replace AUTH_TOKEN with your Xanadu Quantum Cloud access token\r\n  con = sf.api.Connection(token=\"AUTH_TOKEN\")\r\n  eng = sf.RemoteEngine(\"X8\", connection=con)\r\n  prog = sf.Program(8)\r\n\r\n  U = random_interferometer(4)\r\n\r\n  with prog.context as q:\r\n      ops.S2gate(1.0) | (q[0], q[4])\r\n      ops.S2gate(1.0) | (q[1], q[5])\r\n      ops.S2gate(1.0) | (q[2], q[6])\r\n      ops.S2gate(1.0) | (q[3], q[7])\r\n\r\n      ops.Interferometer(U) | q[:4]\r\n      ops.Interferometer(U) | q[4:]\r\n      ops.MeasureFock() | q\r\n\r\n  result = eng.run(prog, shots=1000)\r\n  ```\r\n\r\n  For more details, see the [photonic hardware quickstart](https://strawberryfields.readthedocs.io/en/latest/introduction/photonic_hardware.html) and [tutorial](https://strawberryfields.readthedocs.io/en/latest/tutorials/tutorial_X8.html).\r\n\r\n* Significantly speeds up the Fock backend of Strawberry Fields, through a variety of changes:\r\n\r\n  - The Fock backend now uses The Walrus high performance implementations of the displacement, squeezing, two-mode squeezing, and beamsplitter operations. [(#287)](https://github.com/XanaduAI/strawberryfields/pull/287) [(#289)](https://github.com/XanaduAI/strawberryfields/pull/289)\r\n\r\n  - Custom tensor contractions which make use of symmetry relations for the beamsplitter and the two-mode squeeze gate have been added, as well as more efficient contractions for diagonal operations in the Fock basis. [(#292)](https://github.com/XanaduAI/strawberryfields/pull/292)\r\n\r\n<br>\r\n\r\n* New `sf` command line program for configuring Strawberry Fields for access to the Xanadu cloud platform, as well as submitting and executing jobs from the command line. [(#146)](https://github.com/XanaduAI/strawberryfields/pull/146) [(#312)](https://github.com/XanaduAI/strawberryfields/pull/312)\r\n\r\n  The new Strawberry Fields command line program `sf` provides several utilities including:\r\n\r\n  * `sf configure [--token] [--local]`: configure the connection to the cloud platform\r\n\r\n  * `sf run input [--output FILE]`: submit and execute quantum programs from the command line\r\n\r\n  * `sf --ping`: verify your connection to the Xanadu cloud platform\r\n\r\n  For more details, see the [documentation](https://strawberryfields.readthedocs.io/en/stable/code/sf_cli.html).\r\n\r\n* New configuration functions to load configuration from keyword arguments, environment variables, and configuration files. [(#298)](https://github.com/XanaduAI/strawberryfields/pull/298) [(#306)](https://github.com/XanaduAI/strawberryfields/pull/306)\r\n\r\n  This includes the ability to automatically store Xanadu cloud platform credentials in a configuration file using the new function\r\n\r\n  ```python\r\n  sf.store_account(\"AUTHENTICATION_TOKEN\")\r\n  ```\r\n\r\n  as well as from the command line,\r\n\r\n  ```bash\r\n  $ sf configure --token AUTHENTICATION_TOKEN\r\n  ```\r\n\r\n  Configuration files can be saved globally, or locally on a per-project basis. For more details, see the [configuration documentation](https://strawberryfields.readthedocs.io/en/stable/introduction/configuration.html)\r\n\r\n* Adds configuration functions for resetting, deleting configurations, as well as displaying available configuration files. [(#359)](https://github.com/XanaduAI/strawberryfields/pull/359)\r\n\r\n* Adds the `x_quad_values` and `p_quad_values` methods to the `state` class. This allows calculation of x and p quadrature probability distributions by integrating across the Wigner function. [(#270)](https://github.com/XanaduAI/strawberryfields/pull/270)\r\n\r\n* Adds support in the applications layer for node-weighted graphs.\r\n\r\n  Sample from graphs with node weights using a special-purpose encoding [(#295)](https://github.com/XanaduAI/strawberryfields/pull/295):\r\n\r\n  ```python\r\n  from strawberryfields.apps import sample\r\n\r\n  # generate a random graph\r\n  g = nx.erdos_renyi_graph(20, 0.6)\r\n  a = nx.to_numpy_array(g)\r\n\r\n  # define node weights\r\n  # and encode into the adjacency matrix\r\n  w = [i for i in range(20)]\r\n  a = sample.waw_matrix(a, w)\r\n\r\n  s = sample.sample(a, n_mean=10, n_samples=10)\r\n  s = sample.postselect(s, min_count=4, max_count=20)\r\n  s = sample.to_subgraphs(s, g)\r\n  ```\r\n\r\n  Node weights can be input to search algorithms in the `clique` and `subgraph` modules [(#296)](https://github.com/XanaduAI/strawberryfields/pull/296) [(#297)](https://github.com/XanaduAI/strawberryfields/pull/297):\r\n\r\n  ```python\r\n  from strawberryfields.apps import clique\r\n  c = [clique.shrink(s_, g, node_select=w) for s_ in s]\r\n  [clique.search(c_, g, iterations=10, node_select=w) for c_ in c]\r\n  ```\r\n\r\n  ```python\r\n  from strawberryfields.apps import subgraph\r\n  subgraph.search(s, g, min_size=5, max_size=8, node_select=w)\r\n  ```\r\n\r\n<h3>Improvements</h3>\r\n\r\n* Moved Fock backend apply-gate functions to `Circuit` class, and removed `apply_gate_einsum` and `Circuits._apply_gate`, since they were no longer used. [(#293)](https://github.com/XanaduAI/strawberryfields/pull/293/)\r\n\r\n* Results returned from all backends now have a unified type and shape. In addition, attempting to use batching, post-selection and feed-foward together with multiple shots now raises an error. [(#300)](https://github.com/XanaduAI/strawberryfields/pull/300)\r\n\r\n* Modified the rectangular decomposition to ensure that identity-like unitaries are implemented with no swaps. [(#311)](https://github.com/XanaduAI/strawberryfields/pull/311)\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* Symbolic Operation parameters are now compatible with TensorFlow 2.0 objects. [(#282)](https://github.com/XanaduAI/strawberryfields/pull/282)\r\n\r\n* Added `sympy>=1.5` to the list of dependencies. Removed the `sympy.functions.atan2` workaround now that SymPy has been fixed. [(#280)](https://github.com/XanaduAI/strawberryfields/pull/280)\r\n\r\n* Removed two unnecessary else statements that pylint complained about. [(#290)](https://github.com/XanaduAI/strawberryfields/pull/290)\r\n\r\n* Fixed a bug in the `MZgate`, where the internal and external phases were in the wrong order in both the docstring and the argument list. The new signature is `MZgate(phase_in, phase_ex)`, matching the existing `rectangular_symmetric` decomposition. [(#301)](https://github.com/XanaduAI/strawberryfields/pull/301)\r\n\r\n* Updated the relevant methods in `RemoteEngine` and `Connection` to derive `shots` from the Blackbird script or `Program` if not explicitly specified. [(#327)](https://github.com/XanaduAI/strawberryfields/pull/327)\r\n\r\n* Fixed a bug in homodyne measurements in the Fock backend, where computed probability values could occasionally include small negative values due to floating point precision error. [(#364)](https://github.com/XanaduAI/strawberryfields/pull/364)\r\n\r\n* Fixed a bug that caused an exception when printing results with no state. [(#367)](https://github.com/XanaduAI/strawberryfields/pull/367)\r\n\r\n* Improves the Takagi decomposition, by making explicit use of the eigendecomposition of real symmetric matrices. [(#352)](https://github.com/XanaduAI/strawberryfields/pull/352)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nVille Bergholm, Tom Bromley, Jack Ceroni, Theodor Isacsson, Josh Izaac, Nathan Killoran, Shreya P Kumar,\r\nLeonhard Neuhaus, Nicol\u00e1s Quesada, Jeremy Swinarton, Antal Sz\u00e1va, Paul Tan, Zeid Zabaneh."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/25130269", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/25130269/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/25130269/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.13.0.rc0", "id": 25130269, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MTMwMjY5", "tag_name": "v0.13.0.rc0", "target_commitish": "master", "name": "Release 0.13.0.rc0", "draft": false, "prerelease": true, "created_at": "2020-04-02T12:01:53Z", "published_at": "2020-04-02T12:14:27Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.13.0.rc0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.13.0.rc0", "body": "<h3>New features since last release</h3>\r\n\r\n* Adds initial support for the Xanadu's photonic quantum hardware. [(#101)](https://github.com/XanaduAI/strawberryfields/pull/101) [(#148)](https://github.com/XanaduAI/strawberryfields/pull/148) [(#294)](https://github.com/XanaduAI/strawberryfields/pull/294) [(#327)](https://github.com/XanaduAI/strawberryfields/pull/327) [(#328)](https://github.com/XanaduAI/strawberryfields/pull/328) [(#329)](https://github.com/XanaduAI/strawberryfields/pull/329) [(#330)](https://github.com/XanaduAI/strawberryfields/pull/330) [(#334)](https://github.com/XanaduAI/strawberryfields/pull/334) [(#336)](https://github.com/XanaduAI/strawberryfields/pull/336) [(#337)](https://github.com/XanaduAI/strawberryfields/pull/337) [(#339)](https://github.com/XanaduAI/strawberryfields/pull/339)\r\n\r\n  Jobs can now be submitted to the Xanadu cloud platform to be run on supported hardware using the new `RemoteEngine`:\r\n\r\n  ```python\r\n  import strawberryfields as sf\r\n  from strawberryfields import ops\r\n  from strawberryfields.utils import random_interferometer\r\n\r\n  # replace AUTHENTICATION_TOKEN with your Xanadu cloud access token\r\n  con = sf.api.Connection(token=\"AUTH_TOKEN\")\r\n  eng = sf.RemoteEngine(\"X8\", connection=con)\r\n  prog = sf.Program(8)\r\n\r\n  U = random_interferometer(4)\r\n\r\n  with prog.context as q:\r\n      ops.S2gate(1.0) | (q[0], q[4])\r\n      ops.S2gate(1.0) | (q[1], q[5])\r\n      ops.S2gate(1.0) | (q[2], q[6])\r\n      ops.S2gate(1.0) | (q[3], q[7])\r\n\r\n      ops.Interferometer(U) | q[:4]\r\n      ops.Interferometer(U) | q[4:]\r\n      ops.MeasureFock() | q\r\n\r\n  result = eng.run(prog, shots=1000)\r\n  ```\r\n\r\n  For more details, see the [photonic hardware quickstart](https://strawberryfields.readthedocs.io/en/latest/introduction/photonic_hardware.html) and [tutorial](https://strawberryfields.readthedocs.io/en/latest/tutorials/tutorial_X8.html).\r\n\r\n* Significantly speeds up the Fock backend of Strawberry Fields, through a variety of changes:\r\n\r\n  - The Fock backend now uses The Walrus high performance implementations of   the displacement, squeezing, two-mode squeezing, and beamsplitter operations.   [(#287)](https://github.com/XanaduAI/strawberryfields/pull/287)   [(#289)](https://github.com/XanaduAI/strawberryfields/pull/289)\r\n\r\n  - Custom tensor contractions which make use of symmetry relations for the beamsplitter   and the two-mode squeeze gate have been added, as well as more efficient contractions   for diagonal operations in the Fock basis.   [(#292)](https://github.com/XanaduAI/strawberryfields/pull/292)\r\n\r\n<br>\r\n\r\n* New `sf` command line program for configuring Strawberry Fields for access to the Xanadu cloud platform, as well as submitting and executing jobs from the command line. [(#146)](https://github.com/XanaduAI/strawberryfields/pull/146) [(#312)](https://github.com/XanaduAI/strawberryfields/pull/312)\r\n\r\n  The new Strawberry Fields command line program `sf` provides several utilities including:\r\n\r\n  * `sf configure [--token] [--local]`: configure the connection to the cloud platform\r\n\r\n  * `sf run input [--output FILE]`: submit and execute quantum programs from the command line\r\n\r\n  * `sf --ping`: verify your connection to the Xanadu cloud platform\r\n\r\n  For more details, see the [documentation](https://strawberryfields.readthedocs.io/en/stable/code/sf_cli.html).\r\n\r\n* New configuration functions to load configuration from keyword arguments, environment variables, and configuration files. [(#298)](https://github.com/XanaduAI/strawberryfields/pull/298) [(#306)](https://github.com/XanaduAI/strawberryfields/pull/306)\r\n\r\n  This includes the ability to automatically store Xanadu cloud platform credentials in a configuration file using the new function\r\n\r\n  ```python\r\n  sf.store_account(\"AUTHENTICATION_TOKEN\")\r\n  ```\r\n\r\n  as well as from the command line,\r\n\r\n  ```bash\r\n  $ sf configure --token AUTHENTICATION_TOKEN\r\n  ```\r\n\r\n  Configuration files can be saved globally, or locally on a per-project basis. For more details, see the [configuration documentation](https://strawberryfields.readthedocs.io/en/stable/introduction/configuration.html)\r\n\r\n* Adds the `x_quad_values` and `p_quad_values` methods to the `state` class. This allows calculation of x and p quadrature probability distributions by integrating across the Wigner function. [(#270)](https://github.com/XanaduAI/strawberryfields/pull/270)\r\n\r\n* Adds support in the applications layer for node-weighted graphs.\r\n\r\n  Sample from graphs with node weights using a special-purpose encoding [(#295)](https://github.com/XanaduAI/strawberryfields/pull/295):\r\n\r\n  ```python\r\n  from strawberryfields.apps import sample\r\n\r\n  # generate a random graph\r\n  g = nx.erdos_renyi_graph(20, 0.6)\r\n  a = nx.to_numpy_array(g)\r\n\r\n  # define node weights\r\n  # and encode into the adjacency matrix\r\n  w = [i for i in range(20)]\r\n  a = sample.waw_matrix(a, w)\r\n\r\n  s = sample.sample(a, n_mean=10, n_samples=10)\r\n  s = sample.postselect(s, min_count=4, max_count=20)\r\n  s = sample.to_subgraphs(s, g)\r\n  ```\r\n\r\n  Node weights can be input to search algorithms in the `clique` and `subgraph` modules [(#296)](https://github.com/XanaduAI/strawberryfields/pull/296) [(#297)](https://github.com/XanaduAI/strawberryfields/pull/297):\r\n\r\n  ```python\r\n  from strawberryfields.apps import clique\r\n  c = [clique.shrink(s_, g, node_select=w) for s_ in s]\r\n  [clique.search(c_, g, iterations=10, node_select=w) for c_ in c]\r\n  ```\r\n\r\n  ```python\r\n  from strawberryfields.apps import subgraph\r\n  subgraph.search(s, g, min_size=5, max_size=8, node_select=w)\r\n  ```\r\n\r\n<h3>Improvements</h3>\r\n\r\n* Moved Fock backend apply-gate functions to `Circuit` class, and removed `apply_gate_einsum` and `Circuits._apply_gate`, since they were no longer used. [(#293)](https://github.com/XanaduAI/strawberryfields/pull/293/)\r\n\r\n* Results returned from all backends now have a unified type and shape. In addition, attempting to use batching, post-selection and feed-foward together with multiple shots now raises an error. [(#300)](https://github.com/XanaduAI/strawberryfields/pull/300)\r\n\r\n* Modified the rectangular decomposition to ensure that identity-like unitaries are implemented with no swaps. [(#311)](https://github.com/XanaduAI/strawberryfields/pull/311)\r\n\r\n<h3>Bug fixes</h3>\r\n\r\n* Symbolic Operation parameters are now compatible with TensorFlow 2.0 objects. [(#282)](https://github.com/XanaduAI/strawberryfields/pull/282)\r\n\r\n* Added `sympy>=1.5` to the list of dependencies. Removed the `sympy.functions.atan2` workaround now that SymPy has been fixed. [(#280)](https://github.com/XanaduAI/strawberryfields/pull/280)\r\n\r\n* Removed two unnecessary else statements that pylint complained about. [(#290)](https://github.com/XanaduAI/strawberryfields/pull/290)\r\n\r\n* Fixed a bug in the `MZgate`, where the internal and external phases were in the wrong order in both the docstring and the argument list. The new signature is `MZgate(phase_in, phase_ex)`, matching the existing `rectangular_symmetric` decomposition. [(#301)](https://github.com/XanaduAI/strawberryfields/pull/301)\r\n\r\n* Updated the relevant methods in `RemoteEngine` and `Connection` to derive `shots` from the Blackbird script or `Program` if not explicitly specified. [(#327)](https://github.com/XanaduAI/strawberryfields/pull/327)\r\n\r\n<h3>Contributors</h3>\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nVille Bergholm, Tom Bromley, Jack Ceroni, Theodor Isacsson, Josh Izaac, Nathan Killoran, Shreya P Kumar,\r\nLeonhard Neuhaus, Nicol\u00e1s Quesada, Jeremy Swinarton, Antal Sz\u00e1va, Paul Tan, Zeid Zabaneh."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/22435091", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/22435091/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/22435091/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.12.1", "id": 22435091, "author": {"login": "trbromley", "id": 49409390, "node_id": "MDQ6VXNlcjQ5NDA5Mzkw", "avatar_url": "https://avatars.githubusercontent.com/u/49409390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trbromley", "html_url": "https://github.com/trbromley", "followers_url": "https://api.github.com/users/trbromley/followers", "following_url": "https://api.github.com/users/trbromley/following{/other_user}", "gists_url": "https://api.github.com/users/trbromley/gists{/gist_id}", "starred_url": "https://api.github.com/users/trbromley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trbromley/subscriptions", "organizations_url": "https://api.github.com/users/trbromley/orgs", "repos_url": "https://api.github.com/users/trbromley/repos", "events_url": "https://api.github.com/users/trbromley/events{/privacy}", "received_events_url": "https://api.github.com/users/trbromley/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIyNDM1MDkx", "tag_name": "v0.12.1", "target_commitish": "master", "name": "Release 0.12.1", "draft": false, "prerelease": false, "created_at": "2019-12-23T19:04:15Z", "published_at": "2019-12-23T19:42:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.12.1", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.12.1", "body": "This is a very minor bugfix release, to address some installation issues with the previous v0.12.0.\r\n\r\n* Add new Strawberry Fields applications paper to documentation [#274](https://github.com/XanaduAI/strawberryfields/pull/274)\r\n\r\n* Update figure for GBS device in documentation [#275](https://github.com/XanaduAI/strawberryfields/pull/275)\r\n\r\n* Fix installation issue with incorrect minimum version number for `thewalrus`, fix an incorrect URL in the `README`, and add the applications data to the `MANIFEST.in` file. [#272](https://github.com/XanaduAI/strawberryfields/pull/272) [#277](https://github.com/XanaduAI/strawberryfields/pull/277) [#273](https://github.com/XanaduAI/strawberryfields/pull/273) [#278](https://github.com/XanaduAI/strawberryfields/pull/278)\r\n\r\n### Contributors\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nVille Bergholm, Tom Bromley, Nicol\u00e1s Quesada, Paul Tan"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/22269814", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/22269814/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/22269814/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.12.0", "id": 22269814, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIyMjY5ODE0", "tag_name": "v0.12.0", "target_commitish": "master", "name": "Release 0.12", "draft": false, "prerelease": false, "created_at": "2019-12-16T22:02:38Z", "published_at": "2019-12-16T22:06:19Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.12.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.12.0", "body": "### New features\r\n\r\n* A new applications layer, allowing users to interface samples generated from near-term photonic devices with problems of practical interest. The `apps` package consists of the following modules:\r\n\r\n  - The `apps.sample` module, for encoding graphs and molecules into Gaussian boson sampling (GBS) and generating corresponding samples.\r\n\r\n  - The `apps.subgraph` module, providing a heuristic algorithm for finding dense subgraphs from GBS samples.\r\n\r\n  - The `apps.clique` module, providing tools to convert subgraphs sampled from GBS into cliques and a heuristic to search for larger cliques.\r\n\r\n  - The `apps.similarity` module, allowing users to embed graphs into high-dimensional feature spaces using GBS. Resulting feature vectors provide measures of graph similarity for machine learning tasks.\r\n\r\n  - The `apps.points` module, allowing users to sample subsets of points according to new point process that can be generated from a GBS device.\r\n\r\n  - The `apps.vibronic` module, providing functionality to construct the vibronic absorption spectrum of a molecule from GBS samples.\r\n\r\n### Improvements\r\n\r\n* The documentation was improved and refactored. Changes include:\r\n\r\n  - A brand new theme, now matching PennyLane [#262](https://github.com/XanaduAI/strawberryfields/pull/262)\r\n\r\n  - The documentation has been restructured to make it easier to navigate [#266](https://github.com/XanaduAI/strawberryfields/pull/266)\r\n\r\n### Contributors\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nJuan Miguel Arrazola, Tom Bromley, Josh Izaac, Soran Jahangiri, Nicol\u00e1s Quesada"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/21570024", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/21570024/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/21570024/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.11.2", "id": 21570024, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxNTcwMDI0", "tag_name": "v0.11.2", "target_commitish": "master", "name": "Version 0.11.2", "draft": false, "prerelease": false, "created_at": "2019-11-18T23:43:29Z", "published_at": "2019-11-19T00:04:14Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.11.2", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.11.2", "body": "\r\n### New features\r\n\r\n* Adds the MZgate to ops.py, representing a Mach-Zehnder interferometer. This is not a primitive of the existing simulator backends; rather, `_decompose()` is defined, decomposing it into an external phase shift, two 50-50 beamsplitters, and an internal phase shift. [#127](https://github.com/XanaduAI/strawberryfields/pull/127)\r\n\r\n* The `Chip0Spec` circuit class now defines a `compile` method, allowing arbitrary unitaries comprised of `{Interferometer, BSgate, Rgate, MZgate}` operations to be validated and compiled to match the topology of chip0. [#127](https://github.com/XanaduAI/strawberryfields/pull/127)\r\n\r\n* `strawberryfields.ops.BipartiteGraphEmbed` quantum decomposition now added, allowing a bipartite graph to be embedded on a device that allows for initial two-mode squeezed states, and block diagonal unitaries.\r\n\r\n* Added threshold measurements, via the new operation `MeasureThreshold`, and provided implementation of this operation in the Gaussian backend. [#152](https://github.com/XanaduAI/strawberryfields/pull/152)\r\n\r\n* Programs can now have free parameters/arguments which are only bound to numerical values when the Program is executed, by supplying the actual argument values to the `Engine.run` method. [#163](https://github.com/XanaduAI/strawberryfields/pull/163)\r\n\r\n### API Changes\r\n\r\n* The `strawberryfields.ops.Measure` shorthand has been deprecated in favour of `strawberryfields.ops.MeasureFock()`. [#145](https://github.com/XanaduAI/strawberryfields/pull/145)\r\n\r\n* Several changes to the `strawberryfields.decompositions` module: [#127](https://github.com/XanaduAI/strawberryfields/pull/127)\r\n\r\n  - The name `clements` has been replaced with `rectangular` to  correspond with the shape of the resulting decomposition.\r\n\r\n  - All interferometer decompositions (`rectangular`, `rectangular_phase_end`, `rectangular_symmetric`, and `triangular`) now have standardized outputs `(tlist, diag, tilist)`, so they can easily be swapped.\r\n\r\n* Several changes to `ops.Interferometer`: [#127](https://github.com/XanaduAI/strawberryfields/pull/127)\r\n\r\n  - The calculation of the ops.Interferometer decomposition has been moved from `__init__` to `_decompose()`, allowing the interferometer decomposition type to be set by a `CircuitSpec` during compilation.\r\n\r\n  - `**kwargs` is now passed through from `Operation.decompose` -> `Gate.decompose` -> `SpecificOp._decompose`, allowing decomposition options to be passed during compilation.\r\n\r\n  - `ops.Interferometer` now accepts the keyword argument `mesh` to be set during initialization, allowing the user to specify the decomposition they want.\r\n\r\n* Moves the `Program.compile_seq` method to `CircuitSpecs.decompose`. This allows it to be accessed from the `CircuitSpec.compile` method. Furthermore, it now must also be passed the program registers, as compilation may sometimes require this. [#127](https://github.com/XanaduAI/strawberryfields/pull/127)\r\n\r\n* Parameter class is replaced by `MeasuredParameter` and `FreeParameter`, both inheriting from `sympy.Symbol`. Fixed numeric parameters are handled by the built-in Python numeric classes and numpy arrays. [#163](https://github.com/XanaduAI/strawberryfields/pull/163)\r\n\r\n* `Parameter`, `RegRefTransform` and `convert` are removed. [#163](https://github.com/XanaduAI/strawberryfields/pull/163)\r\n\r\n### Improvements\r\n\r\n* Photon-counting measurements can now be done in the Gaussian backend for states with nonzero displacement. [#154](https://github.com/XanaduAI/strawberryfields/pull/154)\r\n\r\n* Added a new test for the cubic phase gate [#160](https://github.com/XanaduAI/strawberryfields/pull/160)\r\n\r\n* Added new integration tests for the Gaussian gates that are not primitive, i.e., P, CX, CZ, and S2. [#173](https://github.com/XanaduAI/strawberryfields/pull/173)\r\n\r\n### Bug fixes\r\n\r\n* Fixed bug in `strawberryfields.decompositions.rectangular_symmetric` so its returned phases are all in the interval [0, 2*pi), and corrects the function docstring. [#196](https://github.com/XanaduAI/strawberryfields/pull/196)\r\n\r\n* When using the `'gbs'` compilation target, the measured registers are now sorted in ascending order in the resulting compiled program. [#144](https://github.com/XanaduAI/strawberryfields/pull/144)\r\n\r\n* Fixed typo in the Gaussian Boson Sampling example notebook. [#133](https://github.com/XanaduAI/strawberryfields/pull/133)\r\n\r\n* Fixed a bug in the function `smeanxp` of the Gaussian Backend simulator. [#154](https://github.com/XanaduAI/strawberryfields/pull/154)\r\n\r\n* Clarified description of matrices that are accepted by graph embed operation. [#147](https://github.com/XanaduAI/strawberryfields/pull/147)\r\n\r\n* Fixed typos in the documentation of the CX gate and BSgate [#166](https://github.com/XanaduAI/strawberryfields/pull/166) [#167](https://github.com/XanaduAI/strawberryfields/pull/167) [#169](https://github.com/XanaduAI/strawberryfields/pull/169)"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/18569704", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/18569704/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/18569704/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.11.1", "id": 18569704, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE4NTY5NzA0", "tag_name": "v0.11.1", "target_commitish": "master", "name": "Release 0.11.1", "draft": false, "prerelease": false, "created_at": "2019-07-15T16:32:02Z", "published_at": "2019-07-15T16:32:39Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.11.1", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.11.1", "body": "### Improvements\r\n\r\n* Added the `circuit_spec` attribute to `BaseBackend` to denote which CircuitSpecs class should be used to validate programs for each backend [#125](https://github.com/XanaduAI/strawberryfields/pull/125).\r\n\r\n* Removed the `return_state` keyword argument from `LocalEngine.run()`. Now no state object is returned if `modes==[]`. [#126](https://github.com/XanaduAI/strawberryfields/pull/126)\r\n\r\n### Bug fixes\r\n\r\n* Fixed a typo in the boson sampling tutorial. [#133](https://github.com/XanaduAI/strawberryfields/pull/133)\r\n\r\n* Allows imported Blackbird programs to store `target` options as default run options. During eng.run, if no run options are provided as a keyword argument, the engine will fall back on the run options stored within the program.\r\n\r\n  This fixes a bug where shots specified in Blackbird scripts were not being passed to `eng.run`. [#130](https://github.com/XanaduAI/strawberryfields/pull/130)\r\n\r\n* Removes `ModuleNotFoundError` from the codebase, replacing all occurrences with `ImportError`. Since `ModuleNotFoundError` was only introduced in Python 3.6+, this fixes a bug where Strawberry Fields was not importable on Python 3.5 [#124](https://github.com/XanaduAI/strawberryfields/pull/124).\r\n\r\n* Updates the Chip0 template to use MeasureFock() | [0, 1, 2, 3], which will allow correct fock measurement behaviour when simulated on the Gaussian backend.  [#124](https://github.com/XanaduAI/strawberryfields/pull/124)\r\n  \r\n* Fixed a bug in the `GraphEmbed` op, which was not correctly determining when a unitary was the identity [#128](https://github.com/XanaduAI/strawberryfields/pull/128)."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/18304073", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/18304073/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/18304073/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.11.0", "id": 18304073, "author": {"login": "co9olguy", "id": 7213358, "node_id": "MDQ6VXNlcjcyMTMzNTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7213358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/co9olguy", "html_url": "https://github.com/co9olguy", "followers_url": "https://api.github.com/users/co9olguy/followers", "following_url": "https://api.github.com/users/co9olguy/following{/other_user}", "gists_url": "https://api.github.com/users/co9olguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/co9olguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/co9olguy/subscriptions", "organizations_url": "https://api.github.com/users/co9olguy/orgs", "repos_url": "https://api.github.com/users/co9olguy/repos", "events_url": "https://api.github.com/users/co9olguy/events{/privacy}", "received_events_url": "https://api.github.com/users/co9olguy/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE4MzA0MDcz", "tag_name": "v0.11.0", "target_commitish": "master", "name": "Release 0.11", "draft": false, "prerelease": false, "created_at": "2019-07-10T07:40:44Z", "published_at": "2019-07-10T15:56:53Z", "assets": [], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.11.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.11.0", "body": "This is a significant release, with breaking changes to how quantum programs are constructed and executed. For example, the following Strawberry Fields program, <= version 0.10:\r\n\r\n```python\r\neng, q = sf.Engine(2, hbar=0.5)\r\n\r\nwith eng:\r\n    Sgate(0.5) | q[0]\r\n    MeasureFock() | q[0]\r\n\r\nstate = eng.run(\"fock\", cutoff_dim=5)\r\nket = state.ket()\r\nprint(q[0].val)\r\n```\r\n\r\nwould now be written, in v0.11, as follows:\r\n\r\n```python\r\nsf.hbar = 0.5\r\nprog = sf.Program(2)\r\neng = sf.Engine(\"fock\", backend_options={\"cutoff_dim\": 5})\r\n\r\nwith prog.context as q:\r\n    Sgate(0.5) | q[0]\r\n    MeasureFock() | q[0]\r\n\r\nresults = eng.run(prog)\r\nket = results.state.ket()\r\nprint(results.samples[0])\r\n```\r\n\r\n### New features\r\n\r\n- The functionality of the `Engine` class has been divided into two new classes: `Program`, which represents a quantum circuit or a fragment thereof, and `Engine`, which executes `Program` instances.\r\n\r\n- Introduced the `BaseEngine` abstract base class and the `LocalEngine` child class. `Engine` is kept as an alias for `LocalEngine`.\r\n\r\n- The Engine API has been changed slightly:\r\n\r\n    - The engine is initialized with the required backend, as well as a `backend_options` dictionary, which is passed to the backend:\r\n      ```python\r\n      eng = sf.Engine(\"fock\", backend_options={\"cutoff_dim\": 5}\r\n      ```\r\n    - `LocalEngine.run()` now accepts a program to execute, and returns a `Result` object that contains both a state object (`Result.state`) and measurement samples (`Result.samples`):\r\n      ```python\r\n      results = eng.run(prog)\r\n      state = results.state\r\n      samples = results.samples\r\n      ```\r\n    - `compile_options` can be provided when calling `LocalEngine.run()`. These are passed to the `compile()` method of the program before execution.\r\n    - `run_options` can be provided when calling `LocalEngine.run()`. These are used to determine the characteristics of the measurements and state contained in the `Results` object returned after the program is finished executing.\r\n\r\n    - `shots` keyword argument can be passed to `run_options`, enabling multi-shot sampling. Supported only\r\n      in the Gaussian backend, and only for Fock measurements.\r\n\r\n - The Gaussian backend now officially supports Fock-basis measurements (`MeasureFock`), but does not update the quantum state after a Fock measurement.\r\n\r\n- Added the `io` module, which is used to save/load standalone Blackbird scripts from/into Strawberry Fields. Note that the Blackbird DSL has been spun off as an independent package and is now a dependency of Strawberry Fields.\r\n\r\n- Added a new interferometer decomposition `mach_zehnder` to the decompositions module.\r\n\r\n- Added a `Configuration` class, which is used to load, store, save, and modify configuration options for Strawberry Fields.\r\n\r\n- `hbar` is now set globally for the entire session, by setting the value of `sf.hbar` (default is 2).\r\n\r\n\r\n- Added the ability to generate random real (orthogonal) interferometers and random block diagonal symplectic and covariance matrices.\r\n\r\n- Added two top-level functions:\r\n    - `about()`, which prints human-readable system info including installed versions of various Python packages.\r\n    - `cite()`, which prints a bibtex citation for SF.\r\n\r\n- Added a glossary to the documentation.\r\n\r\n### API Changes\r\n\r\n- Added the `circuitspecs` subpackage, containing the `CircuitSpecs` class and a quantum circuit database.\r\n\r\n  The database can be used to\r\n    - Validate that a `Program` belongs in a specific circuit class.\r\n    - Compile a `Program` for a desired circuit target, e.g., so that it can be executed on a given backend.\r\n  The database includes a number of compilation targets, including Gaussian Boson Sampling circuits.\r\n\r\n- The way hbar is handled has been simplified:\r\n    - The backend API is now entirely hbar-independent, i.e., every backend API method is defined in terms of a and a^\\dagger only, not x and p.\r\n    - The backends always explicitly use `hbar=2` internally.\r\n    - `hbar` is now a global, frontend-only variable that the user can set at the beginning of the session. It is used at the `Operation.apply()` level to scale the inputs and outputs of the backend API calls as needed, and inside the `State` objects.\r\n    - The only backend API calls that need to do hbar scaling for the input parameters are the X, Z, and V gates, the Gaussian state decomposition, and homodyne measurements (both the returned value and postselection argument are scaled).\r\n\r\n### Improvements\r\n\r\n- Removed TensorFlow as an explicit dependency of Strawberry Fields. Advanced users can still install TensorFlow manually using `pip install tensorflow==1.3` and use as before.\r\n\r\n- The behaviour and function signature of the `GraphEmbed` operation has been updated.\r\n\r\n- Remove the unused `Command.decomp` instance attribute.\r\n\r\n- Better error messages for the `New` operation when used outside of a circuit.\r\n\r\n- Docstrings updated in the decompositions module.\r\n\r\n- Docstrings for Fock backend reformatted and cleaned up.\r\n\r\n- Cleaning up of citations and `references.bib` file.\r\n\r\n- Typos in documentation fixed.\r\n\r\n## Bug fixes\r\n\r\n- Fixed a bug with installation on Windows for certain locales.\r\n- Fixed a bug in the `New` operation.\r\n- Bugfix in `Gate.merge()`\r\n- Fixed bugs in `measure_fock` in the TensorFlow backend which caused samples to be evaluated independently and for conditional states to be potentially decoupled from the measurement results.\r\n- Fixed a latent bug in `graph_embed`.\r\n- Bugfix for Bloch-Messiah returning non-symplectic matrices when input is passive.\r\n\r\n### Contributors\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nVille Bergholm, Tom Bromley, Ish Dhand, Karel Dumon, Xueshi Guo, Josh Izaac, Nathan Killoran, Leonhard Neuhaus, Nicol\u00e1s Quesada."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/16907473", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/16907473/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/16907473/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.10.0", "id": 16907473, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2OTA3NDcz", "tag_name": "v0.10.0", "target_commitish": "master", "name": "Release 0.10", "draft": false, "prerelease": false, "created_at": "2019-04-22T22:51:07Z", "published_at": "2019-04-22T22:56:10Z", "assets": [{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/12182811", "id": 12182811, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMTgyODEx", "name": "StrawberryFields-0.10.0-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1681899, "download_count": 13, "created_at": "2019-04-22T22:55:47Z", "updated_at": "2019-04-22T22:55:47Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.10.0/StrawberryFields-0.10.0-py3-none-any.whl"}, {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/12182812", "id": 12182812, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMTgyODEy", "name": "StrawberryFields_gpu-0.10.0-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1681958, "download_count": 16, "created_at": "2019-04-22T22:55:47Z", "updated_at": "2019-04-22T22:55:48Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.10.0/StrawberryFields_gpu-0.10.0-py3-none-any.whl"}], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.10.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.10.0", "body": "##  Summary of changes from 0.9\r\n\r\n### New features\r\n\r\n- Added two new utility functions to extract a numerical representation of a circuit from an Engine object: `extract_unitary` and `extract_channel`.\r\n\r\n- Added a LaTeX quantum circuit drawer, that outputs the engine queue or the applied operations as a qcircuit compatible circuit diagram.\r\n\r\n- Added support for an alternative form of Clements decomposition, where the local phases occur at the end rather than in the middle of the beamsplitter array. This decomposition is more symmetric than the intermediate one, which could make it more robust. This form also makes it easier to implement a tensor-network simulation of linear optics.\r\n\r\n- Adds the `GraphEmbed` quantum operation/decomposition to the Strawberry Fields frontend. This allows the embedding of an arbitrary (complex-valued) weighted adjacency matrix into a Gaussian boson sampler.\r\n\r\n- Adds support for the Reck decomposition\r\n\r\n- Added documentation to the Quantum Algorithms section on CV quantum neural networks\r\n\r\n### Improvements\r\n\r\n- Test suite has been ported to pytest\r\n\r\n- Linting improvements\r\n\r\n- Made corrections to the Clements decomposition documentation and docstring, and fixed the Clements unit tests to ensure they are deterministic.\r\n\r\n## Bug fixes\r\n\r\n- Fixed Bloch-Messiah bug arising when singular values were degenerate. Previously, the Bloch-Messiah decomposition did not return matrices in the canonical symplectic form if one or more of the Bloch-Messiah singular values were degenerate.\r\n\r\n### Contributors\r\n\r\nThis release contains contributions from (in alphabetical order):\r\n\r\nShahnawaz Ahmed, Thomas R. Bromley, Ish Dhand, Marcus Edwards, Christian Gogolin, Josh Izaac, Nathan Killoran, Filippo Miatto, Nicol\u00e1s Quesada."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/13940783", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/13940783/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/13940783/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.9.0", "id": 13940783, "author": {"login": "co9olguy", "id": 7213358, "node_id": "MDQ6VXNlcjcyMTMzNTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7213358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/co9olguy", "html_url": "https://github.com/co9olguy", "followers_url": "https://api.github.com/users/co9olguy/followers", "following_url": "https://api.github.com/users/co9olguy/following{/other_user}", "gists_url": "https://api.github.com/users/co9olguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/co9olguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/co9olguy/subscriptions", "organizations_url": "https://api.github.com/users/co9olguy/orgs", "repos_url": "https://api.github.com/users/co9olguy/repos", "events_url": "https://api.github.com/users/co9olguy/events{/privacy}", "received_events_url": "https://api.github.com/users/co9olguy/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzOTQwNzgz", "tag_name": "v0.9.0", "target_commitish": "master", "name": "Release 0.9", "draft": false, "prerelease": false, "created_at": "2018-11-11T16:05:53Z", "published_at": "2018-11-11T16:18:29Z", "assets": [{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/9646127", "id": 9646127, "node_id": "MDEyOlJlbGVhc2VBc3NldDk2NDYxMjc=", "name": "StrawberryFields-0.9.0-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1680023, "download_count": 34, "created_at": "2018-11-11T16:06:23Z", "updated_at": "2018-11-11T16:06:42Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.9.0/StrawberryFields-0.9.0-py3-none-any.whl"}, {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/9646146", "id": 9646146, "node_id": "MDEyOlJlbGVhc2VBc3NldDk2NDYxNDY=", "name": "StrawberryFields_gpu-0.9.0-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1680086, "download_count": 16, "created_at": "2018-11-11T16:08:05Z", "updated_at": "2018-11-11T16:08:22Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.9.0/StrawberryFields_gpu-0.9.0-py3-none-any.whl"}], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.9.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.9.0", "body": "## Summary of changes from 0.8\r\n\r\n### New features\r\n\r\n- Updated the [Strawberry Fields gallery](https://strawberryfields.readthedocs.io/en/latest/gallery/gallery.html), featuring community-submitted content (tutorials, notebooks, repositories, blog posts, research papers, etc.) using Strawberry Fields\r\n\r\n- Added the `@operation` decorator, which allows commonly-used algorithms and subroutines to be declared in blackbird code as one-liner operations\r\n\r\n- Added a `ThermalLossChannel` to the Strawberry Fields API (currently supported by the Gaussian backend)\r\n\r\n- Added a `poly_quad_expectation` method to the `state` objects for Gaussian and Fock backends\r\n\r\n### Improvements\r\n\r\n- New and improved tests\r\n\r\n- Fixed typos in code/documentation\r\n\r\n### Contributors\r\n\r\nThis release contains contributions from:\r\n\r\nJuan Leni, Arthur Pesah, Brianna Gopaul, Nicol\u00e1s Quesada, Josh Izaac, and Nathan Killoran.\r\n"}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/12217097", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/12217097/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/12217097/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.8.0", "id": 12217097, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyMjE3MDk3", "tag_name": "v0.8.0", "target_commitish": "master", "name": "Release 0.8", "draft": false, "prerelease": false, "created_at": "2018-08-02T05:25:58Z", "published_at": "2018-08-02T05:27:53Z", "assets": [{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/8099808", "id": 8099808, "node_id": "MDEyOlJlbGVhc2VBc3NldDgwOTk4MDg=", "name": "StrawberryFields-0.8.0-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1663887, "download_count": 14, "created_at": "2018-08-02T05:27:09Z", "updated_at": "2018-08-02T05:27:28Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.8.0/StrawberryFields-0.8.0-py3-none-any.whl"}, {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/8099810", "id": 8099810, "node_id": "MDEyOlJlbGVhc2VBc3NldDgwOTk4MTA=", "name": "StrawberryFields_gpu-0.8.0-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1663948, "download_count": 19, "created_at": "2018-08-02T05:27:14Z", "updated_at": "2018-08-02T05:27:42Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.8.0/StrawberryFields_gpu-0.8.0-py3-none-any.whl"}], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.8.0", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.8.0", "body": "## Summary of changes from 0.7\r\n\r\n### New features\r\n* You can now prepare multimode states in all backends, via the following new quantum operations in `strawberryfields.ops`:\r\n    - `Ket`\r\n    - `DensityMatrix`\r\n    - `Gaussian`\r\n\r\n  Both `Ket` and `DensityMatrix` work with the Fock backends, while `Gaussian` works with all three, applying the Williamson decomposition or, optionally, directly preparing the Gaussian backend with the provided Gaussian state.\r\n* Added Gaussian decompositions to the front-end; these can be accessed via the new quantum operations `Interferometer`, `GaussianTransform`, `Gaussian`. These allow you to apply interferometers, Gaussian symplectic transformations, and prepare a state based on a covariance matrix respectively. You can also query the engine to determine the CV gate decompositions applied.\r\n* Added the cross-Kerr interaction, accessible via the quantum operation `CKgate()`.\r\n* Added utilities for creating random covariance, symplectic, and Gaussian unitary matrices in `strawberryfields.utils`.\r\n* States can now be compared directly for equality - this is defined separately for Gaussian states and Fock basis states.\r\n\r\n\r\n### Improvements\r\n* The engine logic and behaviour has been overhauled, making it simpler to use and understand.\r\n    - `eng.run()` and `eng.reset()` now allow the user to alter parameters such as `cutoff_dim` between runs.\r\n    - `eng.reset_backend()` has been renamed to `eng.reset()`, and now also implicitly resets the queue.\r\n    - The engine can now be reset even in the case of modes having being added/deleted, with no side effects. This is due to the presence of register checkpoints, allowing the engine to keep track of register changes.\r\n    - `eng.print_applied()` keeps track of multiple simulation runs, by using nested lists.\r\n* A new parameter class is introduced - this is a developmental change, and does not affect the user-facing parts of Strawberry Fields. All parameters passed to quantum operations are 'wrapped' in this parameter class, which also contains several high level mathematical and array/tensor manipulation functions and methods.\r\n\r\n\r\n### Contributors\r\nThis release contains contributions from:\r\n\r\nVille Bergholm, Christian Gogolin, Nicol\u00e1s Quesada, Josh Izaac, and Nathan Killoran."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/11577600", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/11577600/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/11577600/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.7.3", "id": 11577600, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExNTc3NjAw", "tag_name": "v0.7.3", "target_commitish": "master", "name": "Release 0.7.3", "draft": false, "prerelease": false, "created_at": "2018-06-20T21:47:20Z", "published_at": "2018-06-20T21:51:50Z", "assets": [{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/7608192", "id": 7608192, "node_id": "MDEyOlJlbGVhc2VBc3NldDc2MDgxOTI=", "name": "StrawberryFields-0.7.3-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1650175, "download_count": 18, "created_at": "2018-06-20T21:47:34Z", "updated_at": "2018-06-20T21:47:36Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.7.3/StrawberryFields-0.7.3-py3-none-any.whl"}, {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/7608194", "id": 7608194, "node_id": "MDEyOlJlbGVhc2VBc3NldDc2MDgxOTQ=", "name": "StrawberryFields-0.7.3.tar.gz", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/gzip", "state": "uploaded", "size": 1701371, "download_count": 16, "created_at": "2018-06-20T21:47:40Z", "updated_at": "2018-06-20T21:47:44Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.7.3/StrawberryFields-0.7.3.tar.gz"}, {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/7608238", "id": 7608238, "node_id": "MDEyOlJlbGVhc2VBc3NldDc2MDgyMzg=", "name": "StrawberryFields_gpu-0.7.3-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1650238, "download_count": 18, "created_at": "2018-06-20T21:48:52Z", "updated_at": "2018-06-20T21:48:53Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.7.3/StrawberryFields_gpu-0.7.3-py3-none-any.whl"}], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.7.3", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.7.3", "body": "## New features\r\n* Added Gaussian decompositions to the front-end; these can be accessed via the new quantum operations `Interferometer`, `GaussianTransform`, `CovarianceState`. These allow you to apply interferometers, Gaussian symplectic transformations, and prepare a state based on a covariance matrix respectively. You can also query the engine to determine the CV gate decompositions applied.\r\n* Added utilities for creating random covariance, symplectic, and gaussian unitary matrices in `strawberryfields.utils`.\r\n\r\n## Improvements\r\n* Created a separate package `strawberryfields-gpu` that requires `tensorflow-gpu`.\r\n* Modified TFBackend to cache non-variable parts of the beamsplitter, to speed up computation.\r\n* Minor performance improvement in `fock_prob()` by avoiding inverting a matrix twice.\r\n\r\n## Bug fixes\r\n* Fixed bug #10 by adding the ability to reset the Fock modeMap and GaussianCircuit class\r\n* Fixed bug #11 by reshaping the Fock probabilities if the state happens to be pure states\r\n* Fixed Clements decomposition bug where some phase angles weren't applied\r\n* Fixed typo in displaced squeezed formula in documentation\r\n* Fix to prevent beamsplitter prefactor cache from breaking things if using two graphs\r\n* Fix bug #13, GaussianBackend.state() raises an IndexError if all modes in the state have been deleted."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/10539701", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/10539701/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/10539701/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.7.2", "id": 10539701, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEwNTM5NzAx", "tag_name": "v0.7.2", "target_commitish": "master", "name": "Release 0.7.2", "draft": false, "prerelease": false, "created_at": "2018-04-13T17:29:28Z", "published_at": "2018-04-14T03:59:35Z", "assets": [{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/6838838", "id": 6838838, "node_id": "MDEyOlJlbGVhc2VBc3NldDY4Mzg4Mzg=", "name": "StrawberryFields-0.7.2-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1641491, "download_count": 11, "created_at": "2018-04-13T17:44:28Z", "updated_at": "2018-04-13T17:45:15Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.7.2/StrawberryFields-0.7.2-py3-none-any.whl"}, {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/6838837", "id": 6838837, "node_id": "MDEyOlJlbGVhc2VBc3NldDY4Mzg4Mzc=", "name": "StrawberryFields-0.7.2.tar.gz", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/gzip", "state": "uploaded", "size": 1691112, "download_count": 14, "created_at": "2018-04-13T17:44:27Z", "updated_at": "2018-04-13T17:45:00Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.7.2/StrawberryFields-0.7.2.tar.gz"}], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.7.2", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.7.2", "body": "Bug fixes\r\n-------------\r\n* Fixed Tensorflow requirements in `setup.py`, so that installation will now work for versions of tensorflow>=1.3,<1.7\r\n\r\nKnown issues\r\n------------------\r\n* Tensorflow version 1.7 introduces some breaking API changes, so is currently not supported by Strawberry Fields."}
{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/10281289", "assets_url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/10281289/assets", "upload_url": "https://uploads.github.com/repos/XanaduAI/strawberryfields/releases/10281289/assets{?name,label}", "html_url": "https://github.com/XanaduAI/strawberryfields/releases/tag/v0.7.1", "id": 10281289, "author": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEwMjgxMjg5", "tag_name": "v0.7.1", "target_commitish": "master", "name": "Release 0.7.1", "draft": false, "prerelease": false, "created_at": "2018-03-27T14:31:59Z", "published_at": "2018-03-27T15:42:24Z", "assets": [{"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/6649714", "id": 6649714, "node_id": "MDEyOlJlbGVhc2VBc3NldDY2NDk3MTQ=", "name": "StrawberryFields-0.7.1-py3-none-any.whl", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/octet-stream", "state": "uploaded", "size": 1640949, "download_count": 11, "created_at": "2018-03-27T14:53:35Z", "updated_at": "2018-03-27T14:53:37Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.7.1/StrawberryFields-0.7.1-py3-none-any.whl"}, {"url": "https://api.github.com/repos/XanaduAI/strawberryfields/releases/assets/6649715", "id": 6649715, "node_id": "MDEyOlJlbGVhc2VBc3NldDY2NDk3MTU=", "name": "StrawberryFields-0.7.1.tar.gz", "label": null, "uploader": {"login": "josh146", "id": 2959003, "node_id": "MDQ6VXNlcjI5NTkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2959003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh146", "html_url": "https://github.com/josh146", "followers_url": "https://api.github.com/users/josh146/followers", "following_url": "https://api.github.com/users/josh146/following{/other_user}", "gists_url": "https://api.github.com/users/josh146/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh146/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh146/subscriptions", "organizations_url": "https://api.github.com/users/josh146/orgs", "repos_url": "https://api.github.com/users/josh146/repos", "events_url": "https://api.github.com/users/josh146/events{/privacy}", "received_events_url": "https://api.github.com/users/josh146/received_events", "type": "User", "site_admin": false}, "content_type": "application/gzip", "state": "uploaded", "size": 1693614, "download_count": 15, "created_at": "2018-03-27T14:53:38Z", "updated_at": "2018-03-27T14:53:40Z", "browser_download_url": "https://github.com/XanaduAI/strawberryfields/releases/download/v0.7.1/StrawberryFields-0.7.1.tar.gz"}], "tarball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/tarball/v0.7.1", "zipball_url": "https://api.github.com/repos/XanaduAI/strawberryfields/zipball/v0.7.1", "body": "First public release of Strawberry Fields\r\n\r\n"}
