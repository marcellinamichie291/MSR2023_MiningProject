{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/80734347", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/80734347/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/80734347/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.7.1", "id": 80734347, "author": {"login": "bottler", "id": 669761, "node_id": "MDQ6VXNlcjY2OTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/669761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bottler", "html_url": "https://github.com/bottler", "followers_url": "https://api.github.com/users/bottler/followers", "following_url": "https://api.github.com/users/bottler/following{/other_user}", "gists_url": "https://api.github.com/users/bottler/gists{/gist_id}", "starred_url": "https://api.github.com/users/bottler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bottler/subscriptions", "organizations_url": "https://api.github.com/users/bottler/orgs", "repos_url": "https://api.github.com/users/bottler/repos", "events_url": "https://api.github.com/users/bottler/events{/privacy}", "received_events_url": "https://api.github.com/users/bottler/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDODPXGp84Ez-iL", "tag_name": "v0.7.1", "target_commitish": "main", "name": "Version 0.7.1", "draft": false, "prerelease": false, "created_at": "2022-10-23T14:16:40Z", "published_at": "2022-10-23T16:13:11Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.7.1", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.7.1", "body": "This release brings a lot of fixes and improvements to implicitron.\r\n\r\nPyTorch 1.8 is no longer supported. We support from PyTorch 1.9.0 to PyTorch 1.12.1.\r\n\r\n### New features\r\n- Marching cubes fixes to existing python implementation, and fast C++ implementation for when data is on CPU https://github.com/facebookresearch/pytorch3d/commit/0d8608b9f99ac53d95256e124eaf9126e00adef5  https://github.com/facebookresearch/pytorch3d/commit/850efdf7065c238d4d1294d375278318005fd098 \r\n- New fisheye camera object. This involves a change to the API to allow such \u201cnonlinear\u201d cameras, i.e. those whose projection is not a projective transformation. In particular, get_projection_transform can now fail. https://github.com/facebookresearch/pytorch3d/commit/b0515e14615abe6e154f6dcf671ec8e54f29aaf4 https://github.com/facebookresearch/pytorch3d/commit/d19e6243d0294bf83a9f6debc6f55e14becf43b6 https://github.com/facebookresearch/pytorch3d/commit/84fa966643aa002b0075f3b4a0eddd22d1076a86 https://github.com/facebookresearch/pytorch3d/commit/8a96770dc28d393ebc2caacd18c7f5dfee8889a0 \r\n\r\n\r\n### Minor new features\r\n- get_se3_log function on Transform3D https://github.com/facebookresearch/pytorch3d/commit/9a0f9ae57280d5d38c9e59d0517599ccb834b81b\r\n- get_rotation_to_best_fit_xy in circle_fitting https://github.com/facebookresearch/pytorch3d/commit/74bbd6fd76742466bc28134c9b8dfb99e4a677af\r\n- Saving a mesh via IO to OBJ now includes TexturesUV texture https://github.com/facebookresearch/pytorch3d/commit/6ae6ff9cf73221ce60617ef4658b4892b986ba9d \r\n- Checkerboard mesh utility https://github.com/facebookresearch/pytorch3d/commit/ce3fce49d7ad1a680d8c9be660164d5f7a0bb976 \r\n- Camera batches can now be indexed by bool tensors https://github.com/facebookresearch/pytorch3d/commit/b7c826b7863a4fb3c4ce0e10e5ed7400d32ed512 \r\n- Implicitron: You can just use a Configurable class straight away, you no longer need to call expand_args_fields or get_default_args first. https://github.com/facebookresearch/pytorch3d/commit/d6a197be3662cdfa57a34e3134fea1bb04eb1614\r\n- Implicitron: In the newest pytorch versions, you can now use the faster `foreach` versions of optimizers https://github.com/facebookresearch/pytorch3d/commit/209c160a20ce4d87d4ca7a06f2975ba998765087\r\n- Implicitron: full_image variants of psnr, l1 and lpips losses (ignoring mask). The masked image ones are renamed to make this clear. https://github.com/facebookresearch/pytorch3d/commit/7b985702bb660110dc70c2b8c6e6ed0a1a6bcd66 https://github.com/facebookresearch/pytorch3d/commit/d35781f2d79ffe5a895025ec386c47f7d77c085c \r\n- Implicitron: Enable additional test-time source views for json dataset provider v2 https://github.com/facebookresearch/pytorch3d/commit/2ff2c7c836c2d47bb5b6fab57e7363862de6e423 \r\n- Implicitron: Option for filtering outlier input cameras in trajectory estimation https://github.com/facebookresearch/pytorch3d/commit/d281f8efd1e52172256ecdf21e82c7547f235ef2\r\n- Implicitron: yaml configs to train selected methods on CO3Dv2 https://github.com/facebookresearch/pytorch3d/commit/1163eaab43af034ad36dce957511e32e6f7b8d62\r\n- Implicitron raymarcher replicate_last_interval option. https://github.com/facebookresearch/pytorch3d/commit/611aba9a202886cf493d841610ae21c27401b923\r\n- Mixed Frame Raysampling. You can now sample rays iid from a group of cameras, instead of a fixed number from each camera. This needed a new RayBundleHeterogeneous alternative to RayBundle. Implicitron now has its own raybundle object. https://github.com/facebookresearch/pytorch3d/commit/c311a4cbb93be458f8f48e7b269c6d3ee7fc2cf4 https://github.com/facebookresearch/pytorch3d/commit/ad8907d3738fbf4c80aa269954d1d8ba4f307530 https://github.com/facebookresearch/pytorch3d/commit/6ae863f301c66b82c8caf18e12cbae17d2620415 \r\n\r\n\r\n### Major bug fix\r\n- Implicitron: stratified_sampling no longer disabled https://github.com/facebookresearch/pytorch3d/commit/438c194ec61b34b377727c97d5922897546c581d https://github.com/facebookresearch/pytorch3d/commit/df36223ddf3b0bb75b9d9c080c5fe5dd940de34b \r\n\r\n### Bug fixes\r\n- Cloned camera objects can now be saved with pickle and torch.save https://github.com/facebookresearch/pytorch3d/commit/efea540bbcab56fccde6f4bc729d640a403dac56\r\n- Fix implicitron iteration time measurement https://github.com/facebookresearch/pytorch3d/commit/dd58ded73d049aa3143ee48c0c288195412594ce \r\n- IOU3d fix for numerical stability https://github.com/facebookresearch/pytorch3d/commit/1bfe6bf20a1de877cc623d11c2eeed8c7091ae90\r\n- Update SMPL url https://github.com/facebookresearch/pytorch3d/commit/5e7707b157861fd6ddb0564b6a727f79ea76fd56 \r\n- Implicitron doc fixes  https://github.com/facebookresearch/pytorch3d/commit/fdaaa299a72eddbfff30a5f31fe2a643a2a4ca42   https://github.com/facebookresearch/pytorch3d/commit/4711d12a091ad31f51e761bee4a8cce7b4bab504 \r\n- Implicitron reduction feature aggregation broadcasting fix https://github.com/facebookresearch/pytorch3d/commit/73ba66e4abb14abd328d2e96f572337e04770cda \r\n- Implicitron Fix for loading Co3Dv2\u2019s point clouds https://github.com/facebookresearch/pytorch3d/commit/95a2acf7632241d09baff55e635e1e4904ed7505  \r\n\r\n### Performance improvements\r\n- Omit _check_valid_rotation_matrix by default https://github.com/facebookresearch/pytorch3d/commit/46cb5aaaae0cd40f729fd41a39c0c9a232b484c0 \r\n- _compute_vertex_normals does less work https://github.com/facebookresearch/pytorch3d/commit/a65928dcb965b114f3239603106e2b8e7c52b1c0 \r\n- Pulsar logging removed for performance gain https://github.com/facebookresearch/pytorch3d/commit/76234576868e96847097c6f6509f06a6fa9c0e5c \r\n- VolumeSampler memory saving https://github.com/facebookresearch/pytorch3d/commit/4c8338b00f4a5b9dab31df6cecb5d21ce7ee0285\r\n- Implicitron: Avoid extra CPU->GPU communication in raysampling https://github.com/facebookresearch/pytorch3d/commit/305cf32f6bfab02f735a938afed29d41d1759e4c \r\n- Mesh rasterization on CPU now uses multiple threads https://github.com/facebookresearch/pytorch3d/commit/6471893f59f2c844c844be949bb64cccdcc5fdaa \r\n\r\n### Minor\r\n- In implicitron, there are components in progress for voxel-grid-based implicit functions: decoders, voxel grids, param groups https://github.com/facebookresearch/pytorch3d/commit/edee25a1e5385ae62f37995dee1b5960b2a5ea66 https://github.com/facebookresearch/pytorch3d/commit/e7c609f1980780e1a3df1525011425ffd5aa4e7a https://github.com/facebookresearch/pytorch3d/commit/fe5bdb2fb501199e2be915b8f65859a970bbfd60 https://github.com/facebookresearch/pytorch3d/commit/24f5f4a3e7faec460e25ab0c1690f7d8329f92a6\r\n- Implicitron config system fixes https://github.com/facebookresearch/pytorch3d/commit/4d9215b3b4851a209d24b19e4503360c08b42ea8 https://github.com/facebookresearch/pytorch3d/commit/da7fe2854eee7cdbba8b6c4b68065e857377591e https://github.com/facebookresearch/pytorch3d/commit/8339cf2610d3e1bbbe9ba4e86d65a216518ccceb\r\n- Implicitron error improvements https://github.com/facebookresearch/pytorch3d/commit/a607dd063efde73288a3ffbd9c70f5447235e4fb \r\n- Implicitron JsonIndexDataset fix for numpy.split warning https://github.com/facebookresearch/pytorch3d/commit/0b5def5257f53526ef81e1a83d462ef08af628d5 \r\n- Doc fix for IOU https://github.com/facebookresearch/pytorch3d/commit/a2659e1730a37345d882222464180a20a2547905  https://github.com/facebookresearch/pytorch3d/commit/60808972b8b1bffa9df770529d52099bfc286a01 \r\n- Doc fix for Implicitron base renderer https://github.com/facebookresearch/pytorch3d/commit/4711d12a091ad31f51e761bee4a8cce7b4bab504\r\n- pytorch3d.ops doc fixes https://github.com/facebookresearch/pytorch3d/commit/6653f4400b0f8cd6cd66d042c49c60be28d06edd \r\n- Lengths validation in chamfer and farthest_points https://github.com/facebookresearch/pytorch3d/commit/cb7bd33e7fd2c151a1676140ce7fb43ceb2b0663 \r\n- Implicitron visualize_reconstruction and render_flyaround improvements and fixes https://github.com/facebookresearch/pytorch3d/commit/6e25fe8cb312d6fa07ea5d7acfb608104f040a2d https://github.com/facebookresearch/pytorch3d/commit/3b3306f9b4c0de111644ad9d2ac5ffdecc5ee17c https://github.com/facebookresearch/pytorch3d/commit/f6d43eaa62fffa350a20b65121ac4d08b90807eb https://github.com/facebookresearch/pytorch3d/commit/c79c954dea6a7fcfed6839df09cf1ea4ac8907b3 \r\n- Implicitron compatibility with hydra 1.2 https://github.com/facebookresearch/pytorch3d/commit/90b758f7250239f353a046c9ef488ac8f17ecba1 \r\n- Implicitron SimpleDataLoaderMapProvider sample batches without replacement https://github.com/facebookresearch/pytorch3d/commit/73ea4187dec669f75f141ec11bdf0aef6ba4fe37 \r\n- Implicitron: visdom is now optional https://github.com/facebookresearch/pytorch3d/commit/ff933ab82b3fe63d67354714a58e8e3b497ebf00 \r\n\r\n\r\n### Internal\r\n- packed_to_padded now accepts all sizes https://github.com/facebookresearch/pytorch3d/commit/f34da3d3b6187b857a43cbf2dd5eeddf70833a3f \r\n- test_opengl_utils unfriendly test fixed https://github.com/facebookresearch/pytorch3d/commit/9a1213e0e534a14b5f907ec4a0033bd9954034ef \r\n- Implicitron: raybundle input to ImplicitFunctions has been made more consistent https://github.com/facebookresearch/pytorch3d/commit/72c3a0ebe59a7bc058c8f3a081ed9a2b7cb132bf\r\n- location logic factored out of Volumes into a new VolumeLocator class so it can be reused in other objects. https://github.com/facebookresearch/pytorch3d/commit/f825f7e42caebdc61dd11997b485d4a7ed577068 \r\n- Sample_farthest_points uses CUB instead of a handwritten block reduction https://github.com/facebookresearch/pytorch3d/commit/8ea4da293846e64bee5cc99c8cb008888479947f\r\n- Implicitron: MLP and Transformer have moved as they are no-longer only used by nerf.  https://github.com/facebookresearch/pytorch3d/commit/898ba5c53be04b1c3ffbd981fcdb8f79b31767f4 \r\n- Cameras benchmarking https://github.com/facebookresearch/pytorch3d/commit/03562d87f5afd4004faff4f5d9a90261a62c8c7d \r\n- Removed wrappers for eigh, solve, lstsq, and qr because we now rely on PyTorch 1.9 or greater  https://github.com/facebookresearch/pytorch3d/commit/d4a1051e0f9f93a2052487cb42e34fe6e1987f84 "}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/74088358", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/74088358/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/74088358/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.7.0", "id": 74088358, "author": {"login": "bottler", "id": 669761, "node_id": "MDQ6VXNlcjY2OTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/669761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bottler", "html_url": "https://github.com/bottler", "followers_url": "https://api.github.com/users/bottler/followers", "following_url": "https://api.github.com/users/bottler/following{/other_user}", "gists_url": "https://api.github.com/users/bottler/gists{/gist_id}", "starred_url": "https://api.github.com/users/bottler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bottler/subscriptions", "organizations_url": "https://api.github.com/users/bottler/orgs", "repos_url": "https://api.github.com/users/bottler/repos", "events_url": "https://api.github.com/users/bottler/events{/privacy}", "received_events_url": "https://api.github.com/users/bottler/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDODPXGp84Ean-m", "tag_name": "v0.7.0", "target_commitish": "main", "name": "Version 0.7.0", "draft": false, "prerelease": false, "created_at": "2022-08-10T03:48:51Z", "published_at": "2022-08-10T11:16:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.7.0", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.7.0", "body": "This release brings **Implicitron** and **MeshRasterizerOpenGL**. There are builds for PyTorch 1.12.0, but no longer 1.7.x. \r\n\r\n### Large New Features\r\n- Implicitron, a framework for new-view synthesis via modeling neural-network based representations. See [its README](projects/implicitron_trainer) for an introduction.\r\n- MeshRasterizerOpenGL, a faster alternative to MeshRasterizer described in [Cole et al.](https://openaccess.thecvf.com/content/ICCV2021/papers/Cole_Differentiable_Surface_Rendering_via_Non-Differentiable_Sampling_ICCV_2021_paper.pdf). The speedup, which grows with mesh size, is about 20x on a 2M-faces-large mesh. This rasterizer is designed to work with SplatterPhongShader, a new per pixel lighting model. To use it, you must have [pycuda](https://github.com/inducer/pycuda/tree/main/pycuda) with the gl extension enabled, as well as [pyopengl](https://pypi.org/project/PyOpenGL/).\r\n\r\n### New features\r\n- You can now choose to ignore the XY flip in cameras\u2019 transform_points_screen [commit](https://github.com/facebookresearch/pytorch3d/commit/4372001981868657ea2111575dc8704404a25090)\r\n- Fragments is now a dataclass with docstring and detach() [commit](https://github.com/facebookresearch/pytorch3d/commit/c21ba144e7b03562e28cb82341eb6b00d442f21c)\r\n- SoftDepthShader and HardDepthShader for rendering depth maps [commit](https://github.com/facebookresearch/pytorch3d/commit/7e0146ece438f6de98a7ae930a339587311cb410) and [commit](https://github.com/facebookresearch/pytorch3d/commit/4ecc9ea89d55b51c6ad66996ff0edd013ded0815) \r\n- AmbientLights can now be used to render an arbitrary number of channels (not just RGB) [commit](https://github.com/facebookresearch/pytorch3d/commit/8d10ba52b2c8aa59d6c54a193145492b1c196d4d)\r\n\r\n### Bug fixes\r\n\r\n- Fix for loading PLY files with heterogenous faces (e.g. mixture of triangles and quadrilaterals [commit](https://github.com/facebookresearch/pytorch3d/commit/90d00f1b2be4b2f2c5eec40dd10894b2a449fbdf)\r\n- Pointclouds.num_points_per_cloud now always returns a tensor [commit](https://github.com/facebookresearch/pytorch3d/commit/c6519f29f0512e209906f8265e0d049085670304)\r\n- Chamfer fix for empty pointclouds [commit](https://github.com/facebookresearch/pytorch3d/commit/c6519f29f0512e209906f8265e0d049085670304)\r\n\r\n### For developers\r\n\r\n- We are now using black 22.3 or later\r\n- Tests should now be run from the pytorch3d root directory not the tests directory.\r\n\r\n### Minor\r\n- In blending, pull common functionality into get_background_color [commit](https://github.com/facebookresearch/pytorch3d/commit/ea5df60d72307378d4c0641519e4e7a3671458dc)\r\n- raising translated errors with `from None` so a simpler traceback is printed https://github.com/facebookresearch/pytorch3d/commit/8e0c82b89a96a1f1bed1ae5b84bd37524d0fe154\r\n- PnP test fix [commit](https://github.com/facebookresearch/pytorch3d/commit/379c8b27803ce527387854ea9f7f612170a5ecbb)\r\n- fix test which had cuda indexes of a cpu tensor [commit](https://github.com/facebookresearch/pytorch3d/commit/f4dd151037e4a534499f4e90ce918103f17436dd) \r\n\r\n"}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/65600362", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/65600362/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/65600362/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.6.2", "id": 65600362, "author": {"login": "bottler", "id": 669761, "node_id": "MDQ6VXNlcjY2OTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/669761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bottler", "html_url": "https://github.com/bottler", "followers_url": "https://api.github.com/users/bottler/followers", "following_url": "https://api.github.com/users/bottler/following{/other_user}", "gists_url": "https://api.github.com/users/bottler/gists{/gist_id}", "starred_url": "https://api.github.com/users/bottler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bottler/subscriptions", "organizations_url": "https://api.github.com/users/bottler/orgs", "repos_url": "https://api.github.com/users/bottler/repos", "events_url": "https://api.github.com/users/bottler/events{/privacy}", "received_events_url": "https://api.github.com/users/bottler/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDODPXGp84D6Ptq", "tag_name": "v0.6.2", "target_commitish": "main", "name": "Version 0.6.2", "draft": false, "prerelease": false, "created_at": "2022-04-28T11:48:24Z", "published_at": "2022-04-28T16:15:23Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.6.2", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.6.2", "body": "This release brings new targets and many improvements.\r\n\r\nBuilds for PyTorch 1.10.1, 1.10.2, 1.11.0, but no longer 1.6.0. Builds for Python 3.10 but no longer 3.6.\r\n\r\n## New Features\r\n- MultinomialRaysampler and NDCMultinomialRaysampler replace GridRaysampler and NDCGridRaysampler [commit](https://github.com/facebookresearch/pytorch3d/commit/3eb4233844a8a3c6441e91ebe22a4354da8f5fae) which can sample using the new n_rays input and also bring stratified sampling along rays and direction normalization (also [commit](https://github.com/facebookresearch/pytorch3d/commit/67778caee87b5852250ad4c15d17d7c608e6f1bc)\r\n- Function join_cameras_as_batch [commit](https://github.com/facebookresearch/pytorch3d/commit/39bb2ce06301d8085e8003a7e536aa72d5c969c6)\r\n- Function join_pointclouds_as_batch [commit](https://github.com/facebookresearch/pytorch3d/commit/262c1bfcd4a25e7ab796573644968e4d843b7ffe)\r\n- Camera batches can be indexed [commit](https://github.com/facebookresearch/pytorch3d/commit/28ccdb73280a2b2bc47d1202f922df67b3b2e63e) and [commit](https://github.com/facebookresearch/pytorch3d/commit/d67662d13ce497e746196f68cfd90b61954fea23)\r\n- Meshes.submesh function to take a set of faces from a mesh. [commit](https://github.com/facebookresearch/pytorch3d/commit/22f86072ca1cda37a679fc7937311af47bf8fa3b) and [commit](https://github.com/facebookresearch/pytorch3d/commit/050f650ae84b07fb430617a8db65d257e5df129a)\r\n- L1 support for KNN and chamfer [commit](https://github.com/facebookresearch/pytorch3d/commit/67fff956a26c0abdc4f3ddb495b61c8935972bf1)\r\n\r\n## Bug fixes\r\n- Rasterizer.to broken without cameras [commit](https://github.com/facebookresearch/pytorch3d/commit/c371a9a6ccec687a298a3c23cd3d4c673f039eed)\r\n- Joining batches of meshes with TexturesAtlas and TexturesUV broke first input meshes\u2019 texture [commit](https://github.com/facebookresearch/pytorch3d/commit/4a1f1760540b791e638c5bcbb974b59583a0ada8)  \r\n- Transform3D.stack was entirely broken. [commit](https://github.com/facebookresearch/pytorch3d/commit/c8f3d6bc0bc366d44c8fca790c5e433503c7785f) which also added typing.\r\n- The function cameras_from_opencv_projection always created on CPU #1021 [commit](https://github.com/facebookresearch/pytorch3d/commit/45d096e219379bd0b3d14bbe4633b09f818f988d)\r\n- Batching didn\u2019t work for AmbientLights #1043 [commit](https://github.com/facebookresearch/pytorch3d/commit/9e2bc3a17faf7dfffad9b0803f335da328b08a61) \r\n- Pointclouds.subsample failed on windows #1015 [commit](https://github.com/facebookresearch/pytorch3d/commit/d6a12afbe77f8129b9285b30343b33e9cbf1bdec)\r\n- Fit_textured_meshes tutorial now turns off perspective_correct in the final optimization, to avoid nans. [commit](https://github.com/facebookresearch/pytorch3d/commit/7ea0756b05d58938ea25c0cd05f37f35524000d0)\r\n\r\n## Improvements\r\n- Points_normals much faster through use of symeig workaround [commit](https://github.com/facebookresearch/pytorch3d/commit/c2862ff42706ae98ce4053e7d76959f05fb2c3b3)  \r\n- A warning is now printed to console on rasterizer bin overflow [commit](https://github.com/facebookresearch/pytorch3d/commit/6726500ad39f1f135464b50086dc47953f98a4bb)\r\n\r\n## Small improvements\r\n- [MeshRendererWithFragments](https://github.com/facebookresearch/pytorch3d/commit/57a33b25c1105b8424ca4ec927d19d530f03d3eb) and [matrix_to_axis_angle](https://github.com/facebookresearch/pytorch3d/commit/1cbf80dab6611efa305345fd8047bf6e2e4cbe6a) made more importable\r\n- FacePointDistance, FacePointDistance and point_mesh_face_distance get min_triangle_area argument [commit](https://github.com/facebookresearch/pytorch3d/commit/471b12681888d37e15bd3fe6ae2b70032f06c026) - default also changed in [commit](https://github.com/facebookresearch/pytorch3d/commit/ee71c7c44786e41049829a5e461ce860d80a80c7)\r\n- Fix for small faces in IoU3D [commit](https://github.com/facebookresearch/pytorch3d/commit/ccfb72cc502cc3fe30e168fcd220791ee8e449a2) \r\n- Lower the epsilon value in the IoU3D [commit](https://github.com/facebookresearch/pytorch3d/commit/3de41223dde5facc3ba5c445e2cb11e6b4410d6d)\r\n- Flexible background color for point compositing [commit](https://github.com/facebookresearch/pytorch3d/commit/59972b121d8c7bfc0e156b5ad5fcd77c11874178) and [commit](https://github.com/facebookresearch/pytorch3d/commit/0e377c6850f96b881680d40b7bce1e0104a10793)\r\n- In points_to_volumes, the rescaling of features is now optional. [commit](https://github.com/facebookresearch/pytorch3d/commit/78fd5af1a6c8174fd3f6f4080e218a55f0ba6fce)\r\n- LinearWithRepeat layer clarified and moved inside PyTorch3D from the NeRF project [commit](https://github.com/facebookresearch/pytorch3d/commit/2a1de3b610b8f2e95b3aeda6de36805a0baa0e9d)\r\n- HarmonicEmbedding moved inside pytorch3d from projects/nerf. [commit](https://github.com/facebookresearch/pytorch3d/commit/f9a26a22fcd6f7f16eae7dc8fd6e48ecadd7486b) and [commit](https://github.com/facebookresearch/pytorch3d/commit/52c71b88169350bbeda0c18aaa73d6c9eeab5524)\r\n- Invalid default values in Meshes.__init__ removed [commit](https://github.com/facebookresearch/pytorch3d/commit/aab95575a64dc43b8e24f49976cc263741efa47a)\r\n- Support obj files missing usemtl declarations [commit]( https://github.com/facebookresearch/pytorch3d/commit/ef21a6f6aaeae499f60af9eb3e57ba41040aac11)\r\n- CamerasBase.unproject_points typing [commit](https://github.com/facebookresearch/pytorch3d/commit/5053142363afca730c44ed2bd1a6aa24d4fc7635)\r\n- Fix for Pointclouds.__init__ in certain cases with None in a list [commit](https://github.com/facebookresearch/pytorch3d/commit/fc4dd80208bbcf6f834e7e1594db0e106961fd60)\r\n- Consistency validation for sampling_mode in joining TexturesUV [commit](https://github.com/facebookresearch/pytorch3d/commit/b51be58f634698486c1b283c1094d82748473b75)\r\n- Doc fix for camera space fix from v0.6.1 [commit](https://github.com/facebookresearch/pytorch3d/commit/eb2bbf843311e76c6cf356fc9b9442896d85f89e)\r\n- Doc fix for renderer pictures [commit](https://github.com/facebookresearch/pytorch3d/commit/c3c4495c7ac8181be47e49ed2bc935d340e47981)\r\n- New ndc_grid_sample to handle grid-sampling using our NDC conventions [commit](https://github.com/facebookresearch/pytorch3d/commit/12f20d799e06e4ef16dd32686bf5a33e87c56c91)\r\n- Fix scatter_ error in cubify on CPU [commit](https://github.com/facebookresearch/pytorch3d/commit/4c48beb226a97a26d4d8b480ae5ecf5fc8812742)\r\n- In Transform3D, fix some dtype inconsistencies [commit](https://github.com/facebookresearch/pytorch3d/commit/b602edccc4c991a37adcf911726f2e2eb75a74f3)\r\n- Fixes to make windows builds happier [commit](https://github.com/facebookresearch/pytorch3d/commit/f2cf9d4d0be34d3f7ecb4178c356cdfc34b7634c)\r\n\r\n## Internal\r\n- Rename pytorch3d.common.types to pytorch3d.common.datatypes [commit](https://github.com/facebookresearch/pytorch3d/commit/f816568735b428e3b5546fee2348ac3abc8696de)\r\n- Cleanup in ply_io [commit](https://github.com/facebookresearch/pytorch3d/commit/967a099231f10f0ebbbe93bc448db18a94fd976c)\r\n- A major new feature, a framework for new-view synthesis via modeling neural-network based representations, called implicitron, is work in progress.\r\n- We now use usort not isort for sorting imports.\r\n- Future proofing calls to torch.meshgrid [commit](https://github.com/facebookresearch/pytorch3d/commit/1701b76a31e3e8c97d51b49dfcaa060762ab3764) and symeig [commit](https://github.com/facebookresearch/pytorch3d/commit/db1f7c45064a8e7b0cabe44cb5b9060daee15fb3) also [commit](https://github.com/facebookresearch/pytorch3d/commit/4d043fc9ac79d917ec1a72a23aa66a1589c58c7c). Also future proofing tests for a change to autograd behaviour that inplace operations don\u2019t need to return the same object [commit](https://github.com/facebookresearch/pytorch3d/commit/feb5d36394b28e382e9a58e670fb5a92684bb4bb)\r\n- Future proofing for the loss of TH headers in pytorch (needed for PyTorch 1.11) [commit](https://github.com/facebookresearch/pytorch3d/commit/069c9fd759461b60f089dd01f6779f9437a5695f) and [commit](https://github.com/facebookresearch/pytorch3d/commit/f8fe9a2be144cf3c7c047e05d59605474f3a8bdb)\r\n- Base class for shaders introduced [commit](https://github.com/facebookresearch/pytorch3d/commit/96889deab99773b5df3f9313878f562771e99daa)", "reactions": {"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/65600362/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/55486060", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/55486060/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/55486060/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.6.1", "id": 55486060, "author": {"login": "bottler", "id": 669761, "node_id": "MDQ6VXNlcjY2OTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/669761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bottler", "html_url": "https://github.com/bottler", "followers_url": "https://api.github.com/users/bottler/followers", "following_url": "https://api.github.com/users/bottler/following{/other_user}", "gists_url": "https://api.github.com/users/bottler/gists{/gist_id}", "starred_url": "https://api.github.com/users/bottler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bottler/subscriptions", "organizations_url": "https://api.github.com/users/bottler/orgs", "repos_url": "https://api.github.com/users/bottler/repos", "events_url": "https://api.github.com/users/bottler/events{/privacy}", "received_events_url": "https://api.github.com/users/bottler/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDODPXGp84DTqZs", "tag_name": "v0.6.1", "target_commitish": "d049cd2e0102a6b2e08bf2b595131d5177638081", "name": "Version 0.6.1", "draft": false, "prerelease": false, "created_at": "2021-12-13T18:11:00Z", "published_at": "2021-12-16T19:13:11Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.6.1", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.6.1", "body": "This release brings PyTorch 1.10 builds and numerical fixes and improvements \r\n\r\n## Large fixes\r\n- Raysampling now works with non-square image conventions [commit](https://github.com/facebookresearch/pytorch3d/commit/cac6cb1b7813a4f09a05e0ade43c63292bb08b79)\r\n- Perspective_correct mesh rasterization calculation is protected against divide-by-zero. This fixes quite a number of bug reports, e.g. #561. [commit](https://github.com/facebookresearch/pytorch3d/commit/29417d1f9b181f907f7e3729791a43554f3bbf56)\r\n\r\n## Breaking changes\r\n- [This commit](https://github.com/facebookresearch/pytorch3d/commit/bf3bc6f8e36385398c0be1bc03304e07964026b1) makes camera code more consistent in behaving like align_corners=False everywhere, by removing some extra -1\u2019s in the code for screen space conversion. (1) If you create a camera in screen coordinates, i.e. setting in_ndc=False, then anything you do with the camera which touches NDC space may be affected, including trying to use renderers. The transform_points_screen function will not be affected. (2) If you call the function \u201ctransform_points_screen\u201d on a camera defined in NDC space then results will be different.\r\n\r\n## Bug fixes\r\n- Raysampling now works with cameras defined in screen space. [commit](https://github.com/facebookresearch/pytorch3d/commit/cff4876131e79b7c2ad0c13fc875292d9dc29f8c). \r\n- Pointclouds.inside_box is now properly reduced rather than returning separate results per axis. [commit](https://github.com/facebookresearch/pytorch3d/commit/a6508ac3dfaaf59d8bdce176bfbafad94c1d0604)\r\n- PulsarPointsRenderer fixed with non-square cameras [commit](https://github.com/facebookresearch/pytorch3d/commit/a0247ea6bd1b4e32b61addc28cc368476e917ce2)\r\n- Functions clone and detach on TexturesUV properly propagate align_corners and padding_mode options. [commit](https://github.com/facebookresearch/pytorch3d/commit/d9f709599b600f4d0739fdbe20f1a0be867e5db9)\r\n- Fixing default arguments of add_points_features_to_volume_densities_features [commit](https://github.com/facebookresearch/pytorch3d/commit/34b1b4ab8bb2dd619e57d230cdaf8b0a35196a85)\r\n- Fix opencv camera conversion for non-square images (affects pulsar) [commit](https://github.com/facebookresearch/pytorch3d/commit/8fa438cbda382602ad64afac5713f4e7e0461f88)\r\n\r\n## Small improvements\r\n- Some matrix conversions are now traceable with torch.jit. [commit](https://github.com/facebookresearch/pytorch3d/commit/bee31c48d3d36a8ea268f9835663c52ff4a476ec)\r\n- Fixes to compiled code to make windows builds happier [commit](https://github.com/facebookresearch/pytorch3d/commit/1a7442a483ef92be720e88633b5e47e7b1e9e60c) [commit](https://github.com/facebookresearch/pytorch3d/commit/3953de47eefed08466f32db2334b03cd2363b625)\r\n- A new set of tests, test_camera_pixels, illustrates the precise mapping of pixels for cameras. [commit](https://github.com/facebookresearch/pytorch3d/commit/70acb3e415203fb9e4d646d9cfeb449971092e1d)\r\n- Numerical improvements in IOU calculation [commit](https://github.com/facebookresearch/pytorch3d/commit/2f2466f472c5c431508dc3e45441130313e4df2f) and [commit](https://github.com/facebookresearch/pytorch3d/commit/6dfa32692277735b369a5c7a28aceb47263d451a)\r\n- New option on TexturesUV to choose sampling_mode. [commit](https://github.com/facebookresearch/pytorch3d/commit/d9f709599b600f4d0739fdbe20f1a0be867e5db9)\r\n- The plotly visualization will show face colors from a TexturesAtlas with K=1 [commit](https://github.com/facebookresearch/pytorch3d/commit/7ce18f38cd7e7f61037322d7532cd7891190a540)\r\n\r\n\r\n## Internal\r\n- Benchmarks have been moved to tests/benchmarks [commit](https://github.com/facebookresearch/pytorch3d/commit/a0e2d2e3c3020f5e5899a93e5744fdb26de703fe)\r\n- Spelling [commit](https://github.com/facebookresearch/pytorch3d/commit/7fa333f63240cf92068991f81fd20b4faea5c15d)\r\n- Some more type annotations for Pointclouds [commit](https://github.com/facebookresearch/pytorch3d/commit/bfeb82efa38f29ed5b9cf8d8986fab744fe559ea)\r\n- Test fixes [commit](https://github.com/facebookresearch/pytorch3d/commit/b26f4bc33ad19c0ff10990f75e827010b1a15d85)\r\n- Special implementation of eigenvalue calculation for 3x3 matrices which can be faster and more reliable  than native PyTorch. Currently not used [commit](https://github.com/facebookresearch/pytorch3d/commit/d7d740abe9bada1d3187118b2e8d54b9c119737b)\r\n"}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/50888156", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/50888156/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/50888156/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.6.0", "id": 50888156, "author": {"login": "bottler", "id": 669761, "node_id": "MDQ6VXNlcjY2OTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/669761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bottler", "html_url": "https://github.com/bottler", "followers_url": "https://api.github.com/users/bottler/followers", "following_url": "https://api.github.com/users/bottler/following{/other_user}", "gists_url": "https://api.github.com/users/bottler/gists{/gist_id}", "starred_url": "https://api.github.com/users/bottler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bottler/subscriptions", "organizations_url": "https://api.github.com/users/bottler/orgs", "repos_url": "https://api.github.com/users/bottler/repos", "events_url": "https://api.github.com/users/bottler/events{/privacy}", "received_events_url": "https://api.github.com/users/bottler/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDODPXGp84DCH3c", "tag_name": "v0.6.0", "target_commitish": "main", "name": "Version 0.6.0", "draft": false, "prerelease": false, "created_at": "2021-10-05T23:25:25Z", "published_at": "2021-10-06T13:00:09Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.6.0", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.6.0", "body": "This release contains several new optimized operations related to point clouds.\r\n\r\n## New features\r\n- Farthest point sampling [here](https://github.com/facebookresearch/pytorch3d/commit/3b7d78c7a7bbd321fe181cb53f028c46ce78dfe1), [here](https://github.com/facebookresearch/pytorch3d/commit/d9f7611c4b5e1b7182192e05611fd615728ab29d) and [here](https://github.com/facebookresearch/pytorch3d/commit/bd04ffaf778074f267250ea5ce2d4a77a20afff5)\r\n- Ball query operation. [commit](https://github.com/facebookresearch/pytorch3d/commit/103da63393d6bbb697835ddbfc86b07572ea4d0c)\r\n- Sample_pdf importance sampling operation, implemented with a CUDA kernel. Previously in Python in the NeRF project. [here](https://github.com/facebookresearch/pytorch3d/commit/7d7d00f2883b13a79681a9ccbbe41fc951533d9b) and [here](https://github.com/facebookresearch/pytorch3d/commit/1ea2b7272a23b09987a2dc4cb34bcfd9596301a8)\r\n- Fast accurate calculation of Intersection over union for 3D boxes. See [note](https://github.com/facebookresearch/pytorch3d/blob/v0.6.0/docs/notes/iou3d.md). [here](https://github.com/facebookresearch/pytorch3d/commit/2293f1fed096642246d3e97a6b8478fa32c61d5e), [here](https://github.com/facebookresearch/pytorch3d/commit/ff8d4762f43fb19cf426e91f34babec5def4fc89) and [here](https://github.com/facebookresearch/pytorch3d/commit/53266ec9ff02e4bc5e471216eb92a1c867473dcb)\r\n- Subsample method for Pointclouds [commit](https://github.com/facebookresearch/pytorch3d/commit/4281df19cefb640067a49b961587342d9e4d85ba)\r\n- Adding point clouds to volumes is now implemented in C++/CUDA, which means it can always operate inplace [here](https://github.com/facebookresearch/pytorch3d/commit/ee2b2feb9891a26939a688fd3c57d03462d7f773), [here](https://github.com/facebookresearch/pytorch3d/commit/9ad98c87c314877541187724a620c81332339a87) and [here](https://github.com/facebookresearch/pytorch3d/commit/0dfc6e0eb8a252878784dc9ae749d5298c5830b2)   \r\n\r\n## Breaking changes\r\n- [This commit](https://github.com/facebookresearch/pytorch3d/commit/1b8d86a104eab24ac25863c423d084d611f64bae) removes `_xy_grid` from the saved state of the `GridRaySampler` module, if the PyTorch version is 1.6.0 or higher. This means that you will get errors if you try to load a model saved with such a module by an older version of PyTorch3D (unless `strict==False`). Similarly the NeRF project\u2019s `HarmonicEmbedding` no longer stores `_frequencies`. \r\n- PyTorch 1.5.0 or above is now required.\r\n\r\n## Bug fixes\r\n- Fix duplicate arguments errors when cameras are specified in certain places [commit](https://github.com/facebookresearch/pytorch3d/commit/804117833e3c02c19a6774f70bac1a780a322228)\r\n- Fix to join_scene for meshes using TexturesUV, which picked the wrong verts_uvs in certain cases [commit](https://github.com/facebookresearch/pytorch3d/commit/a0d76a7080e263e2244abd67eb8ddf6667194b25)\r\n- Fix to edge cases when creating TexturesAtlas. [commit](https://github.com/facebookresearch/pytorch3d/commit/fc156b50c0d6147ca00755059fb1ff96133827df)\r\n- Points to volumes fix when the grid_sizes are not specified. [commit](https://github.com/facebookresearch/pytorch3d/commit/b481cfbd019e1508e90fef39a0eeefc1b2759291)\r\n\r\n## Small improvements\r\n- Making the rasterizer deterministic if there are ties between faces [commit](https://github.com/facebookresearch/pytorch3d/commit/860b742a02e62ec85f48929268349916ca4ce8a5)\r\n- The function so3_log_map is now torchscriptable [commit](https://github.com/facebookresearch/pytorch3d/commit/46f727cb68d4477183160efd411706e637dffbbc)\r\n- The GridRaySampler change means it can be reused at different image sizes. [commit](https://github.com/facebookresearch/pytorch3d/commit/1b8d86a104eab24ac25863c423d084d611f64bae)\r\n- More documentation in the renderer, with RasterizationSettings and PointRasterizationSettings being dataclasses [commit](https://github.com/facebookresearch/pytorch3d/commit/9a737da83c8f45c010ce818355bc28aae6cfafcd) and [here](https://github.com/facebookresearch/pytorch3d/commit/4ad8576541009694f33f3db7468e28b9f8879d29)\r\n- Ability to save colors as 8bit (i.e. uint8) when writing data to PLY files [commit](https://github.com/facebookresearch/pytorch3d/commit/dd76b4101468d61233eff7f240870ab13a8b8662)\r\n\r\n## Internal\r\n- Coarse rasterization code has been reorganized [here](https://github.com/facebookresearch/pytorch3d/commit/62dbf371aef2aeac11802901a771d85116a3717d), [here](https://github.com/facebookresearch/pytorch3d/commit/eed68f457d690c70ccea75598fad60c63504bd0d) and [here](https://github.com/facebookresearch/pytorch3d/commit/bbc7573261ebfbbd63cc7bb80c071d04e836acbe)\r\n"}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/47369245", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/47369245/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/47369245/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.5.0", "id": 47369245, "author": {"login": "bottler", "id": 669761, "node_id": "MDQ6VXNlcjY2OTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/669761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bottler", "html_url": "https://github.com/bottler", "followers_url": "https://api.github.com/users/bottler/followers", "following_url": "https://api.github.com/users/bottler/following{/other_user}", "gists_url": "https://api.github.com/users/bottler/gists{/gist_id}", "starred_url": "https://api.github.com/users/bottler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bottler/subscriptions", "organizations_url": "https://api.github.com/users/bottler/orgs", "repos_url": "https://api.github.com/users/bottler/repos", "events_url": "https://api.github.com/users/bottler/events{/privacy}", "received_events_url": "https://api.github.com/users/bottler/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ3MzY5MjQ1", "tag_name": "v0.5.0", "target_commitish": "master", "name": "Version 0.5.0", "draft": false, "prerelease": false, "created_at": "2021-08-03T15:10:52Z", "published_at": "2021-08-05T14:51:34Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.5.0", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.5.0", "body": "This release includes several very significant bug fixes and performance improvements as well as some new features for rendering, dataloading and visualization. Please read the breaking changes carefully and update your code accordingly for this new PyTorch3D version. \r\n\r\n## Breaking changes\r\n- [This commit](https://github.com/facebookresearch/pytorch3d/commit/0c32f094afbb5c7206589e4a5516b6836d1d7f2a) changes the cameras objects and will affect you if (a) you use a cameras object with non-square images, (b) you call the transform_points_screen method, (c) you initialise a cameras object in screen space, i.e. you have been specifying image_size. See [here](https://github.com/facebookresearch/pytorch3d/discussions/783) for more details on the changes and how to update your code.\r\n- The functions `random_rotations`, `random_rotation` and `random_quaternions` no longer have a potentially confusing `requires_grad` parameter. | [commit](https://github.com/facebookresearch/pytorch3d/commit/ce60d4b00e1dc975af49c99b7e6ebe0b4c997f8f)\r\n- The call `pytorch3d.loss.mesh_laplacian_smoothing.laplacian_cot(meshes)` should now be `pytorch3d.ops.cot_laplacian(meshes.verts_packed(), meshes.faces_packed())` | [commit](https://github.com/facebookresearch/pytorch3d/commit/07a5a68d5034da9507a7fae1cf0717247ab255ba)\r\n\r\n## New deprecations\r\n- The function `so3_exponential_map` deprecated in favor of new function so3_exp_map | [commit](https://github.com/facebookresearch/pytorch3d/commit/5284de6e97f1a206526045349beb3b11b8568238)\r\n\r\n## New features\r\n- Cameras can be defined and used regardless of coordinate system conventions. They can be defined in NDC or screen space and are converted appropriately to interface with the PyTorch3D renderers according to their conventions | [commit](https://github.com/facebookresearch/pytorch3d/commit/0c32f094afbb5c7206589e4a5516b6836d1d7f2a)\r\n- The standard mesh laplacian calculation has been added and now all three laplacians (standard, cot, norm) live in `pytorch3d.ops.laplacian_matrices`  | [commit](https://github.com/facebookresearch/pytorch3d/commit/07a5a68d5034da9507a7fae1cf0717247ab255ba)\r\n- RayBundles can be viewed in `plotly_vis` | [commit](https://github.com/facebookresearch/pytorch3d/commit/4426a9d12c16751c3afe5a4f5de8db89d58e6811)\r\n- Support for the OFF file format  for loading meshes | [commit](https://github.com/facebookresearch/pytorch3d/commit/0345f860d4d44e0a36b3a366644f6432458ae5cc)\r\n- Experimental support for loading some glTF files | [commit](https://github.com/facebookresearch/pytorch3d/commit/ed6983ea843590c05593fcd4c8de40f5c7bb0970)\r\n- PLY format now supports mesh vertex colors, i.e. `TexturesVertex` | [commit](https://github.com/facebookresearch/pytorch3d/commit/6c3fe952d1a65696701bba1b037a1b34ba33e4fc)\r\n- Saving a mesh to an OBJ file can include `TexturesUV` data | [commit](https://github.com/facebookresearch/pytorch3d/commit/542e2e7c07fdeef815312b087acfa58094a7aa1e)\r\n- User can now specify vertex normals explicitly on a Meshes object | [commit]( https://github.com/facebookresearch/pytorch3d/commit/2bbca5f2a7de1db1e398d0c50ce4242871957965)\r\n- Pointcloud normals and mesh vertex normals can now be [saved to](https://github.com/facebookresearch/pytorch3d/commit/b314beeda1092337458fca8cd993536463172f8e) and [loaded from](https://github.com/facebookresearch/pytorch3d/commit/6fa66f55341fe1fa8c84c2611a6ec57c1d83b4fb) PLY files\r\n- New `rotate_on_spot` function to relatively rotate a camera position | [commit](https://github.com/facebookresearch/pytorch3d/commit/61e38de034b57f3c703d5049a117764e78f72fe2)\r\n- New `AmbientLights` object for ambient-only lighting | [commit](https://github.com/facebookresearch/pytorch3d/commit/0e85652f07ecca0da06146895921e008e8b839c8)\r\n- Updated the alpha channel in the `hard_rgb_blend` function to return the mask of the pixels which have overlapping mesh faces | [commit](https://github.com/facebookresearch/pytorch3d/commit/a15c33a3cc8857e282d535e27821e8304a4f146d)\r\n- Camera conversions [from](https://github.com/facebookresearch/pytorch3d/commit/8006842f2a5ab1546a90797a6394f875adce045c) and [to](https://github.com/facebookresearch/pytorch3d/commit/da9974b4160b6afe2587b473cdd471d4e299b323) OpenCV cameras\r\n- SE3 exponential and logarithm maps | [commit](https://github.com/facebookresearch/pytorch3d/commit/b2ac2655b3b5a95eea49e72a543f06be4c18e688)\r\n- `TensorProperties` classes (e.g. `Pointclouds` and `Cameras`) now have a cuda() function. | [commit](https://github.com/facebookresearch/pytorch3d/commit/0c02ae907edc2db9aee7d5bda1159814ce06ee56)\r\n\r\n## Internal-facing new features\r\n- New linearly extrapolated acos function | [commit](https://github.com/facebookresearch/pytorch3d/commit/dd45123f202441e7539c4af9b35d07317b786528)\r\n- New custom 3x3 determinant calculation | [commit](https://github.com/facebookresearch/pytorch3d/commit/bcee361d048f14b3d1fbfa2c3e498d64c06a7612)\r\n- New function Meshes.has_verts_normals | [commit](https://github.com/facebookresearch/pytorch3d/commit/66b97a0c2825ff576df77c510530dbd8e6bac2b6)\r\n- Features for enhanced type safety\r\n\r\n\r\n## Bug fixes\r\n- Fix to cotcurv method of the mesh_laplacian_smoothing | [commit](https://github.com/facebookresearch/pytorch3d/pull/553) \r\nWhen a Transform3D is constructed without specifying the device but with tensor data input (e.g. a rotation matrix), it will now default to the device of the tensor. | [commit](https://github.com/facebookresearch/pytorch3d/commit/cd5af2521a56bf3f8feca2926bbaa55cae3b3604)\r\n- Fix to frustrum culling when z_clip_value=None | [commit](https://github.com/facebookresearch/pytorch3d/commit/a0f79318c5b16ef5d14bbff8840bc0dc045d078d)\r\n- Fix to mesh rendering when frustrum culling culls everything | [commit](https://github.com/facebookresearch/pytorch3d/commit/c75ca04cf734d3635e1f41a06906cf83c2cb0f31)\r\n- Mesh renderer stability with very small faces | [commit](https://github.com/facebookresearch/pytorch3d/commit/88f5d790886b26efb9f370fb9e1ea2fa17079d19)\r\n- Transform3d.to() now works to change dtype without changing device | [commit](https://github.com/facebookresearch/pytorch3d/commit/44508ed0db269ed0b7c952fbee6bd09105a1c653) \r\n- Multiple issues with shape broadcasting in lighting, shading and blending | [commit](https://github.com/facebookresearch/pytorch3d/commit/bc8361fa471e39280b1c5e3717309167b08ffed5)\r\n- Rendering a nonsquare image when the H and W are not integer multiples [commit](https://github.com/facebookresearch/pytorch3d/commit/13429640d3dfcdf20dc3645d74b621f5fb4faee5)\r\n- Fix to pulsar non-square image rendering | [commit](https://github.com/facebookresearch/pytorch3d/commit/4bb3fff52b7e26ec0f013021cb26fab7db3d8e0b)\r\n- Pulsar cameras now more reliably match PyTorch3D ones | [commit](https://github.com/facebookresearch/pytorch3d/commit/75432a069503a2a51a79516f10ae8eb246e816d0)\r\n- Pulsar gradient now calculated when no other gradient is needed | [commit](https://github.com/facebookresearch/pytorch3d/commit/fa44a05567ea7e6c18c3e762e1260ade0040f08e)\r\n- TensorProperties classes (e.g. Pointclouds and Cameras) will always remember their device if the default cuda device changes. | [commit](https://github.com/facebookresearch/pytorch3d/commit/0c02ae907edc2db9aee7d5bda1159814ce06ee56)\r\n- Now `matrix_to_quaternion` is correct for rotations by 180\u02da | [commit](https://github.com/facebookresearch/pytorch3d/commit/1b39cebe9209172e543bdb9cd4d890d4023d5caf)\r\n- In tutorials: updates for changes to PyTorch | [commit](https://github.com/facebookresearch/pytorch3d/commit/1c45ec9770ee3010477272e4cd5387f9ccb8cb51) (avoiding gradients) and numpy | [commit](https://github.com/facebookresearch/pytorch3d/commit/a343cf534cf906560a28f3a367c6ad1369100059). Load tutorial utils correctly on Colab | [commit](https://github.com/facebookresearch/pytorch3d/commit/10eb3892dac5507ce1fe5a2ecfaaf4a72330b67f)\r\n- Fix to subsampling multiple large pointclouds for plotly visualization | [commit](https://github.com/facebookresearch/pytorch3d/commit/1b6182bac20c96f63b4140b02a794ff05e782e8a)\r\n- Fix bug when join_batch is used to join meshes with TexturesVertex | [commit](https://github.com/facebookresearch/pytorch3d/commit/eb04a488c57da0e4e5651f5f37349e058cbfedc7)\r\n- PLY files with uint8 colors are now scaled correctly | [commit](https://github.com/facebookresearch/pytorch3d/commit/e9f4e0d086a8e8481abbf799692de8bd13ee5c5c)\r\n- Fix save_ply with noncontiguous faces | [commit](https://github.com/facebookresearch/pytorch3d/commit/354a1808ff57cb75461c697b282eac98c9082ea9)\r\n- Fix to ShapeNet dataloader: works when not loading textures, install will not miss the json files | [commit](https://github.com/facebookresearch/pytorch3d/commit/029a9da00b4015b6988a28e353fc389572ac6254)\r\n- Calling `extend()` with a user\u2019s subclass of a `Textures` object respects the subclass (#618) | [commit](https://github.com/facebookresearch/pytorch3d/commit/34163326b2681f4eb64db5c57d70abcdcc5b4941)\r\n- `TexturesUV.join_scene` works with any number of channels | [commit](https://github.com/facebookresearch/pytorch3d/commit/2a0660baabc839890363f0fa166efdb3ff15c050)\r\n- Documentation updates for [Volume renderer](https://github.com/facebookresearch/pytorch3d/commit/7c0d307142dd47a8e339b06d82877b20c77c1e45) and [RayBundle](https://github.com/facebookresearch/pytorch3d/commit/e794d062e85a8f5211b68eecb351429aeb065409)\r\n\r\n## Small improvements including speedups\r\n- Improved so3 functions to make gradient computation stable | [commit](https://github.com/facebookresearch/pytorch3d/commit/9f14e82b5aaabaaff9d63fb04e31702b3246ced6)\r\n- Mesh normal consistency speedup | [commit](https://github.com/facebookresearch/pytorch3d/commit/4bfe7158b17a026e182b37212f4ecb88776f2258)\r\n- Add error checks when texture objects are inconsistent with their meshes | [commit](https://github.com/facebookresearch/pytorch3d/commit/ef16253953b7035da69f25107d83cc402562ce08)\r\n- Speedup checking density bounds in volume renderer | [commit](https://github.com/facebookresearch/pytorch3d/commit/b538f107964964d7e5c67f81dcc9e42b13acbc25)\r\n- More validation of a list of texture maps | [commit](https://github.com/facebookresearch/pytorch3d/commit/279f4a154dbb5a3936a2f4234b9e851648c281ec)\r\n- Transform3D avoids gradient calculation when checking rotation matrix | [commit](https://github.com/facebookresearch/pytorch3d/commit/2f668ecefe9898e2224b35a6608937a44e5d8109)\r\n- Avoid recalculating normals when a mesh is [scaled](https://github.com/facebookresearch/pytorch3d/commit/17633808d88facb4a1016b6b81bf681dfd0fd657) or [translated](https://github.com/facebookresearch/pytorch3d/commit/502f15aca73ffb88286a9341512f78e4a52b1a98)\r\n- When TexturesUVs have a list of maps and some are identical, a subsequent join_scene will detect this and not duplicate the data |  [commit](https://github.com/facebookresearch/pytorch3d/commit/e12a08133f4f790e1c36e284ef1903ed92f54a27)\r\n", "reactions": {"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/47369245/reactions", "total_count": 3, "+1": 2, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/37816843", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/37816843/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/37816843/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.4.0", "id": 37816843, "author": {"login": "nikhilaravi", "id": 5912647, "node_id": "MDQ6VXNlcjU5MTI2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5912647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilaravi", "html_url": "https://github.com/nikhilaravi", "followers_url": "https://api.github.com/users/nikhilaravi/followers", "following_url": "https://api.github.com/users/nikhilaravi/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilaravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilaravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilaravi/subscriptions", "organizations_url": "https://api.github.com/users/nikhilaravi/orgs", "repos_url": "https://api.github.com/users/nikhilaravi/repos", "events_url": "https://api.github.com/users/nikhilaravi/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilaravi/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM3ODE2ODQz", "tag_name": "v0.4.0", "target_commitish": "3c15a6c2469249c8b90a4f3e41e34350b8051b92", "name": "v0.4.0", "draft": false, "prerelease": false, "created_at": "2021-02-09T12:33:09Z", "published_at": "2021-02-09T18:11:34Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.4.0", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.4.0", "body": "# Changelog\r\n\r\nThe key new features in this release is support for Implicit/Volume Rendering. This includes several methods for sampling camera rays and marching along the rays in order to render their color. We further introduce support for voxel grids. To this end, we implemented a new `Volumes` structure and methods for converting between `Pointclouds` and `Volumes`. The rendering of implicit surfaces as well as voxel grids has been showcased in two new tutorial jupyter notebooks.  \r\n\r\nWe are also introducing a new [projects](https://github.com/facebookresearch/pytorch3d/tree/master/projects/nerf) folder with an implementation of NeRF. We plan to add more examples of papers which can be implemented using components from PyTorch3D.\r\n\r\n## Key features\r\n- Volumes Datastructure | [commit](https://github.com/facebookresearch/pytorch3d/commit/03ee1dbf8238e22589b6afb7440351e79e34b099)\r\n- Raysamplers: `GridRaysampler, MonteCarloRaysampler, NDCGridRaysampler`; `RayBundle` datastructure | [commit](https://github.com/facebookresearch/pytorch3d/commit/e6bc960fb565cd3a8bbc26edcd1109be4b0856a2)\r\nRaymarchers: `AbsorptionOnlyRaymarcher, EmissionAbsorptionRaymarcher` | [commit](https://github.com/facebookresearch/pytorch3d/commit/1af1a36bd61f60b16b29fb5adbc3a5d740de9444)\r\n- Implicit/Volume Renderer | [commit](https://github.com/facebookresearch/pytorch3d/commit/b466c381da3db7cc462c1df21d44b06a9ac7b191)\r\n- Pointclouds to Volumes conversion | [commit](https://github.com/facebookresearch/pytorch3d/commit/aa9bcaf04c520b5fd0aa8d6d807b8090ea43d61c)\r\n\r\n## Projects\r\n- Reimplementation of NeRF | [commit](https://github.com/facebookresearch/pytorch3d/commit/51de308b808ba28096d72ccd3f7c1019da4dea74)\r\n\r\n## Additional new features\r\n- Taubin Smoothing for Meshes | [commit](https://github.com/facebookresearch/pytorch3d/commit/112959e0871ffd5ac0588ebf24e3d9aa21174ffa) \r\n- Non Square Image Rasterization for Meshes | [commit](https://github.com/facebookresearch/pytorch3d/commit/d07307a451f3521e4cf522876b67b14b34021809) \r\n- Non Square Image Rasterization for Pointclouds | [commit](https://github.com/facebookresearch/pytorch3d/commit/3d769a66cb184d75126600abeb4ad953cd56cb8d) \r\n- Naive PyTorch version of Marching Cubes | [commit](https://github.com/facebookresearch/pytorch3d/commit/ebac66daeb4ea226291f6bd6c1516e690657c4c8) \r\n- New Pluggable Data Loading API | [commit](https://github.com/facebookresearch/pytorch3d/commit/b183dcb6e8494e43d1ea5bf8e3bd0fa0816ca3f5)\r\n  - Mesh formats | [commit](https://github.com/facebookresearch/pytorch3d/commit/89532a876e77c09edf581f3b7a0de39df761d457)\r\n  - Pointcloud formats | [commit](https://github.com/facebookresearch/pytorch3d/commit/95707fba1c8eff99757691468f440f9ce63c8027)\r\n\r\n## New Tutorials\r\n- Fit Textured Volume | [commit](https://github.com/facebookresearch/pytorch3d/commit/01f86ddeb1058e06e74fa95c3975e8c78826c813)\r\n- Fit Neural Radiance Field | [commit](https://github.com/facebookresearch/pytorch3d/commit/9fc661f8b325142323b1925109ccf87ebb5904f2)\r\n\r\n## Small Updates\r\n- Change io functions to use `iopath` | [commit](https://github.com/facebookresearch/pytorch3d/commit/513a6476bc41c7f5a26c77bd585b68026b643cde) \r\n- Read heterogenous nonlist PLY properties as arrays | [commit](https://github.com/facebookresearch/pytorch3d/commit/3b9fbfc08c528d6c7388b570622fe7fc025d7890)\r\n- Update the `MeshRasterizer` to automatically infer the camera type and set the `perspective_correct` setting for correcting barycentric coordinates after rasterization | [commit](https://github.com/facebookresearch/pytorch3d/commit/838b73d3b6eae97b2d536f2b9c5a35de5e112c20)\r\n\r\n## Bug Fixes\r\n- Rasterization of mesh faces partially behind the image plane \r\n  - Full fix which clips meshes at specified z value prior to rasterization instead of only culling.  | [commit1](https://github.com/facebookresearch/pytorch3d/commit/23279c5f1da5f6e1c0bb8f305e6636b8c857f3fd), [commit2](https://github.com/facebookresearch/pytorch3d/commit/39f49c22cd99feb5a50cf98287644cc56e2cd39e) \r\n  - Introduced two new rasterization settings (`z_clip_value`, `cull_to_frustum`)  | [commit](https://github.com/facebookresearch/pytorch3d/commit/340662e98e97c5e105cf6570765d7bae3e6228bf) \r\n- Check for verts/faces in Meshes to be on the same device | [commit](https://github.com/facebookresearch/pytorch3d/commit/569e5229a9cf3b92e7acaa657efe036935c10f51) \r\n- Fix for index error with Texture Atlas sampling | [commit](https://github.com/facebookresearch/pytorch3d/commit/01759d8ffb4899de1157398e4052f76a13c56527) \r\n\r\n## Builds\r\n- For Linux, instead of uploading wheels to PyPI which will only work with one particular version of PyTorch and CUDA, we now provide a range of built wheels on S3. Refer to [INSTALL.md](https://github.com/facebookresearch/pytorch3d/blob/master/INSTALL.md#3-install-wheels-for-linux) for instructions on how to download and install.", "reactions": {"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/37816843/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/33818829", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/33818829/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/33818829/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.3.0", "id": 33818829, "author": {"login": "nikhilaravi", "id": 5912647, "node_id": "MDQ6VXNlcjU5MTI2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5912647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilaravi", "html_url": "https://github.com/nikhilaravi", "followers_url": "https://api.github.com/users/nikhilaravi/followers", "following_url": "https://api.github.com/users/nikhilaravi/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilaravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilaravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilaravi/subscriptions", "organizations_url": "https://api.github.com/users/nikhilaravi/orgs", "repos_url": "https://api.github.com/users/nikhilaravi/repos", "events_url": "https://api.github.com/users/nikhilaravi/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilaravi/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMzODE4ODI5", "tag_name": "v0.3.0", "target_commitish": "master", "name": "v0.3.0 ", "draft": false, "prerelease": false, "created_at": "2020-11-11T18:05:53Z", "published_at": "2020-11-11T18:38:34Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.3.0", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.3.0", "body": "# Changelog\r\n\r\nThe key new feature in this release is support for [Pulsar](https://arxiv.org/abs/2004.07484) as an alternative backend for point cloud rendering. Pulsar is a highly tuned backend with better scaling performance than the default backend but with less flexibility: it does not have support for custom rasterizers and compositors. It can be used for scenes with millions of spheres and up to 4K resolution and supports opacity optimization. \r\n\r\n*   CUDA/C++ implementation | [commit](https://github.com/facebookresearch/pytorch3d/commit/b19fe1de2fd39aa40c888a1cc02e45ed91a87851)\r\n*   PyTorch interface | [commit](https://github.com/facebookresearch/pytorch3d/commit/960fd6d8b6f55257dc1d205e8c8f3366202c23b7) \r\n*   Examples and Demos | [commit](https://github.com/facebookresearch/pytorch3d/commit/039e02601d447c127cc3a56c3d16716ef7d97a16)\r\n\r\n## Additional new features\r\n*   Plotly functions for visualization | [commit](https://github.com/facebookresearch/pytorch3d/commit/964893cdcba11c188c42716683fbc39a0d07ff43)\r\n    *   Support for rendering batches of meshes/cameras/pointclouds\r\n    *   Support for viewing plotly plots from PyTorch3D Cameras point-of-view\r\n    *   `plot_scene` function \r\n*   Extend `sample_points_from_meshes` to support sampling textures | [commit](https://github.com/facebookresearch/pytorch3d/commit/327bd2b9762c05ec7a6f74c2ec1e46f2a764e326)\r\n*   `corresponding_cameras_alignment` function that estimates a similarity transformation between two sets of cameras | [commit](https://github.com/facebookresearch/pytorch3d/commit/316b77782e2aedea817bd2a4c6a7a787f3b61a1a) \r\n*   Support for variable size point radius in the pointcloud rasterizer | [commit](https://github.com/facebookresearch/pytorch3d/commit/ebe2693b11bffe8aa1d4d312ce812fcd5ee8f928) \r\n*   `save_ply` now by default saves to binary instead of ascii. An option makes the previous functionality available | [commit](https://github.com/facebookresearch/pytorch3d/commit/197f1d6217a6148b91b75c3a475f247218ccb488) \r\n*   Functions to convert to and from axis-angle representation of rotations | [commit](https://github.com/facebookresearch/pytorch3d/commit/c93c4dd7b2b68db92997f65e11d7b08acecce891)\r\n*   Visualization functions for the TexturesUV class | [commit](https://github.com/facebookresearch/pytorch3d/commit/aa4cc0adbce5f6277a862f5cedacd1c4555bb66e)\r\n\r\n## New tutorials\r\n*   Rendering DensePose Data with PyTorch3D | [commit1](https://github.com/facebookresearch/pytorch3d/commit/956d3a010cf8f1b0338436cd6697f1ab21099648), [commit2](https://github.com/facebookresearch/pytorch3d/commit/f34f4073f0287ec961f43dd451d9470baf0db557) \r\n*   Updates to Pointcloud and Mesh rendering tutorials | [commit](https://github.com/facebookresearch/pytorch3d/commit/9a5341bde3400c426385ba60b697ff95f54f89c5)\r\n\r\n## Small updates\r\n*   Fixes to support multigpu rendering | [commit](https://github.com/facebookresearch/pytorch3d/commit/563d441b000ad95c90f70ad77018c410a4626637)\r\n*   Support texture atlas loading for `.obj` files with meshes which only have material properties | [commit](https://github.com/facebookresearch/pytorch3d/commit/f5383a7e5a79bd9e912af0fb0199c557b9987877) \r\n*   Add support for changing the background color in Pointcloud compositors | [commit](https://github.com/facebookresearch/pytorch3d/commit/872ff8c796e0947469fda76a028439e1dc8d3696) \r\n*   Add support for returning the fragments from the output of the `MeshRenderer` | [commit](https://github.com/facebookresearch/pytorch3d/commit/c41aff23f0d4a3a91226fa73a3b37579f6087844)\r\n*   Support for axis angle representation of rotations | [commit](https://github.com/facebookresearch/pytorch3d/commit/c93c4dd7b2b68db92997f65e11d7b08acecce891)\r\n\r\n\r\n## Bug Fixes\r\n*   Fixed corner case in `look_at_view_transform` | [commit](https://github.com/facebookresearch/pytorch3d/commit/eb517dd70b20c8431a1cfc46e47b4c5c78529c5b)\r\n*   Fixed softmax_rgb_blend with mesh is outside zfar | [commit](https://github.com/facebookresearch/pytorch3d/commit/f8ea5906c0ae5ef6fb7800e3f0a05ebf56cdd927)\r\n*   Fixed corner case in `matrix_to_quaternion` function | [commit](https://github.com/facebookresearch/pytorch3d/commit/4d52f9fb8b5e53f5c6f98475fa0d005f7845e3b1)\r\n\r\n## Misc\r\nThe introduction of Pulsar adds the [NVIDIA CUB library](https://docs.nvidia.com/cuda/cub/index.html) as a build-time dependency.  "}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/30331897", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/30331897/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/30331897/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.2.5", "id": 30331897, "author": {"login": "bottler", "id": 669761, "node_id": "MDQ6VXNlcjY2OTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/669761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bottler", "html_url": "https://github.com/bottler", "followers_url": "https://api.github.com/users/bottler/followers", "following_url": "https://api.github.com/users/bottler/following{/other_user}", "gists_url": "https://api.github.com/users/bottler/gists{/gist_id}", "starred_url": "https://api.github.com/users/bottler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bottler/subscriptions", "organizations_url": "https://api.github.com/users/bottler/orgs", "repos_url": "https://api.github.com/users/bottler/repos", "events_url": "https://api.github.com/users/bottler/events{/privacy}", "received_events_url": "https://api.github.com/users/bottler/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMwMzMxODk3", "tag_name": "v0.2.5", "target_commitish": "master", "name": "v0.2.5", "draft": false, "prerelease": false, "created_at": "2020-08-28T00:15:51Z", "published_at": "2020-08-28T15:17:47Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.2.5", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.2.5", "body": "# Changelog\r\n\r\n## New features\r\n- Data loaders for common 3D datasets\r\n  - ShapeNetCore dataloader | [commit](https://github.com/facebookresearch/pytorch3d/commit/358e211cde4412c24675af3d048f2d6d4391df59)\r\n  - R2N2 dataloader | [commit](https://github.com/facebookresearch/pytorch3d/commit/63ba74f1a8d5aa73d36999f5b5a7bf2af0fd8066)\r\n- New texturing API\r\n  -Separate classes: TexturesVertex, TexturesUV, TexturesAtlas | [commit](https://github.com/facebookresearch/pytorch3d/commit/a3932960b31ff07e942a54e4608eae6ba12bf40a)\r\n  - Existing Textures class is now deprecated and will be removed in the next release.\r\n- Cameras API refactor\r\n  - Renaming and restructure to have consistency across all classes | [commit](https://github.com/facebookresearch/pytorch3d/commit/57a22e7306db24140cb2133aa12a613cbf971c4c)\r\n  - Cameras have been renamed as follows:\r\n`OpenGLPerspectiveCameras` -> `FoVPerspectiveCameras` `OpenGLOrthographicCameras` -> `FoVOrthographicCameras`\r\n`SfMPerspectiveCameras` ->  `PerspectiveCameras`\r\n`SfMOrthographicCameras` -> `OrthographicCameras`\r\n  - All cameras now output projected values in NDC with the option to provide params in screen coordinates and convert them to NDC.  \r\n  - Refer to the new note [cameras.md](https://github.com/facebookresearch/pytorch3d/blob/master/docs/notes/cameras.md) for more detailed information. \r\n- Barycentric clipping in CUDA\r\n  - Move barycentric clipping from PyTorch to CUDA for increased efficiency. Now available as a rasterization setting `clip_barycentric_coords`. | [commit](https://github.com/facebookresearch/pytorch3d/commit/cc70950f4064e3feeb55281b829aa55aa4a7e942)\r\n- One new representation for rotations\r\n  - Conversions to and from Zhou et al 6d rotation represention | [commit](https://github.com/facebookresearch/pytorch3d/commit/2f3cd987253c5da3741af9ceaec95c1bdbf12583)\r\n- Customizable Background color \r\n  - Option added to HardPhongShader, HardGouraudShader, and HardFlatShader | [commit](https://github.com/facebookresearch/pytorch3d/commit/65620e716c184ec162df04df2f3fe08351a957f5)\r\n- Joining several meshes to render a single scene\r\n  - New `join_meshes_as_scene` function which also supports joining textures | [commit1](https://github.com/facebookresearch/pytorch3d/commit/e053d7c45609ab25e345ac277a89232bfede8e90), [commit2](https://github.com/facebookresearch/pytorch3d/commit/909dc835050f84fc739fe75fd02884f305195afb )\r\n- CUDA op for interpolating face attributes\r\n  - Functionality which was in python moved to cuda\r\nhttps://github.com/facebookresearch/pytorch3d/commit/26d2cc24c1382047a81dd182f9621a17184e0a95\r\n- Gather scatter on CPU | [commit](https://github.com/facebookresearch/pytorch3d/commit/7944d24d4872bdb01b821450840049e28d0ce12b) \r\n- C++/CUDA implementations of sigmoid/softmax blending functions | [commit 1](https://github.com/facebookresearch/pytorch3d/commit/bce396df93e338cc0d35256d650a3b6ab3f8b973)\r\n- C++ implementations for point-to-mesh distance functions | [commit](https://github.com/facebookresearch/pytorch3d/commit/74659aef26db47342d71df99f31b3f63eacd7182)  \r\n- `detach` method for `Meshes`, `Pointclouds` and `Textures` | [commit](https://github.com/facebookresearch/pytorch3d/commit/7f2f95f2255431267b9aabf90bb2bba7bb2b0880)\r\n- Support for multiple `align_modes` in the Cubify operator | [commit](https://github.com/facebookresearch/pytorch3d/commit/a61c9376d578525c218c2e0ba7eeedef3d418076)\r\n- Texture maps (i.e. the TexturesUV class) now has align_corners and padding_mode customizable, and the default has changed to align_corners=True. | [commit](https://github.com/facebookresearch/pytorch3d/commit/e25ccab3d9e4d5c8877627ab7d95dd3f77c9a993)\r\n\r\n## New tutorials:\r\n- Data loading with ShapeNetCore and R2N2 dataloaders | [commit](https://github.com/facebookresearch/pytorch3d/commit/9242e7e65d3c1c841333ece7b7469cd677100e34) \r\n- Fitting a textured mesh from multiview images | [commit](https://github.com/facebookresearch/pytorch3d/commit/9a5341bde3400c426385ba60b697ff95f54f89c5)\r\n\r\n## Small updates\r\n- Compatibility with PyTorch 1.6 \r\n- Flag to make sorting optional in KNN\r\nhttps://github.com/facebookresearch/pytorch3d/commit/806ca361c0d701e0269070e4d58be55e99d3b70e\r\n- `update_padded` method on meshes\r\n  - Other optimizations use this | [commit](https://github.com/facebookresearch/pytorch3d/commit/1fb97f9c84598d3cc880713912df1d9a44fd1abe)\r\n\r\n## Bug Fixes:\t\r\n- Temporary fix for rendering from inside a surface results in uninterpretable images | [issue][commit](https://github.com/facebookresearch/pytorch3d/commit/9aaba0483c08c9a40c26db0858f8c0688f33e850)\r\n  - This fix culls all face which are partially behind the image plane\r\n- Scaling Pointclouds by a scalar now works | [commit](https://github.com/facebookresearch/pytorch3d/commit/2f0fd60186ef3ae8c6691841be315609f196fe42)\r\n- SO3 log map fix for singularity at PI | [commit](https://github.com/facebookresearch/pytorch3d/commit/34a0df0630c964d4e4be225b1dc0ccf166743e75) \r\n- Join mismatched texture maps on CUDA | [commit](https://github.com/facebookresearch/pytorch3d/commit/0c595dcf5b715ea1321825e0fe92ffa74e798d4f) \r\n- Flat shading fix | [commit](https://github.com/facebookresearch/pytorch3d/commit/a0e14cae1e46e0748d676c70ec8114c6a99b771d)\r\n- Efficiency PnP bug fix | [commit](https://github.com/facebookresearch/pytorch3d/commit/daf9eac801c12831c97b7e310be27f357d0fee7d) \r\n- `look_at_transform` now gives the correct location of the camera when the object `at` location is not at `(0,0,0)` | [commit](https://github.com/facebookresearch/pytorch3d/commit/d0cec028c7ddb59b8e4d0ee054d0ea8b1a493d46)\r\n- Rendering a batch of meshes with texture maps now correct for all members of the batch #283  | [commit](https://github.com/facebookresearch/pytorch3d/commit/9a50cf800e511031602cb4b9523cef7b448b16af)\r\n- Extending meshes with texture maps where the verts and the verts_uvs have different lengths is now correct [commit](https://github.com/facebookresearch/pytorch3d/commit/90f6a005b09af9570fc50799a301303e49b67dfe)\r\n\r\n## Breaking Changes\r\n- Unused parameter composite_params removed from compostor classes | [commit](https://github.com/facebookresearch/pytorch3d/commit/3d7dea58e150dae8070b3fea2f1deaf6f8c55106)\r\n- `Textures` has now moved: (prev) `from pytorch3d.structures import Textures` -> (new) `from pytorch3d.renderer import TexturesUV, TexturesVertex, TexturesAtlas`. In addition due to the new texturing API, the generic `Textures` class will be deprecated in the next release (it is still currently available to be imported from `pytorch3d.renderer`) \r\n"}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/25904037", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/25904037/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/25904037/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.2.0", "id": 25904037, "author": {"login": "nikhilaravi", "id": 5912647, "node_id": "MDQ6VXNlcjU5MTI2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5912647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilaravi", "html_url": "https://github.com/nikhilaravi", "followers_url": "https://api.github.com/users/nikhilaravi/followers", "following_url": "https://api.github.com/users/nikhilaravi/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilaravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilaravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilaravi/subscriptions", "organizations_url": "https://api.github.com/users/nikhilaravi/orgs", "repos_url": "https://api.github.com/users/nikhilaravi/repos", "events_url": "https://api.github.com/users/nikhilaravi/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilaravi/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1OTA0MDM3", "tag_name": "v0.2.0", "target_commitish": "686c8666d31d932ed42d3cd7319f249fc75e89a9", "name": "v0.2.0", "draft": false, "prerelease": false, "created_at": "2020-04-26T14:18:57Z", "published_at": "2020-04-27T02:22:26Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.2.0", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.2.0", "body": "# Changelog\r\n\r\n## New Features\r\n\r\n- Pointclouds Datastructure  | https://github.com/facebookresearch/pytorch3d/commit/767d68a3af16b22f70dde29537334a51f98c75d6\r\n  - Support for batches of pointclouds with additional helper methods e.g. `get_bounding_boxes` \r\n- Pointclouds rendering | https://github.com/facebookresearch/pytorch3d/commit/53599770dd642f0bc59a6554bd7c46e4a8044334\r\n  - C++, CUDA and Python implementations of Pointcloud rendering with heterogeneous pointclouds. Exposed via Rasterizer, Renderer and Compositor Pytorch Classes with 3 types of Compositors available. A jupyter notebook tutorial has also been added. \r\n- Umeyama - estimate a rigid motion between two sets of corresponding points. | https://github.com/facebookresearch/pytorch3d/commit/e5b1d6d3a3614749d2ddcae9b42e50869c8266a2\r\n- Weighted Umeyama | https://github.com/facebookresearch/pytorch3d/commit/e37085d9990bf94c7fcee6a9df5dc8db35391608\r\n- Iterative Closest Point Algorithm | https://github.com/facebookresearch/pytorch3d/commit/8abbe22ffbc306b7be0e2e09ba1ce167430f2c7f\r\n- Efficient PnP algorithm to Fit 2D to 3D correspondences under perspective assumption |  https://github.com/facebookresearch/pytorch3d/commit/04d8bf6a435da136331cdb33be3f5cf85a678e2c\r\n- Pointcloud normal estimation | https://github.com/facebookresearch/pytorch3d/commit/365945b1fd097a4eed391843408c31e86f8592cb\r\n  - Supports batches of pointclouds \r\n  - Also available on the `Pointclouds` datastructure as a method `estimate_normals`\r\n- Point to Mesh distances | https://github.com/facebookresearch/pytorch3d/commit/487d4d6607a60a8be7135b334137985f40953a92\r\n  - Python, C++ and Cuda implementations of Point to Triangle Face, Face to point algorithms including array versions \r\n- K nearest neighbors\r\n  - Multiple KNN methods for pointclouds based on the input parameters | https://github.com/facebookresearch/pytorch3d/commit/870290df345873492d88f70b942893cd3b5deb87\r\n  - KNN with heterogeneous pointclouds (i.e different numbers of points) | https://github.com/facebookresearch/pytorch3d/commit/01b5f7b228378b6d12eaa78b86fb5215d6b4eec7\r\n  - Autograd wrapper for KNN including backward pass for distances | https://github.com/facebookresearch/pytorch3d/commit/b2b0c5a4426bb907517452a6fe643eda39dd73c8\r\n    - `knn_points` function to return the neighbor points and distances\r\n    - `knn_gather` function to allow gathering of additional features based on the knn indices\r\n\r\n## Updates to existing Operators \r\n- Chamfer loss support for heterogeneous pointclouds | https://github.com/facebookresearch/pytorch3d/commit/790eb8c4020994a673033cc9b1fe92caad6281ac\r\n  - Support for chamfer loss for two batches of pointclouds where each pointcloud in the batch can have different numbers of points \r\n- Vert align for pointcloud objects | https://github.com/facebookresearch/pytorch3d/commit/f25af9695999133667ee76734c3139465b445a6a\r\n- Cameras\r\n  - `unproject_points` function to convert from screen to world coordinates | https://github.com/facebookresearch/pytorch3d/commit/365945b1fd097a4eed391843408c31e86f8592cb\r\n  - `look_at_transform` update to enable specifying the `eye` (camera center) directly | https://github.com/facebookresearch/pytorch3d/commit/2480723adf1ce8a5cfca5c190f5fba7a48549f75\r\n- `Transforms3D` update to allow init of `Transforms3D` class with a custom matrix | https://github.com/facebookresearch/pytorch3d/commit/90dc7a08568072375fe9f7ecc3201618fba86287\r\n- Mesh Rendering update to enable back face culling in rasterization - this is available as a `cull_backfaces` boolean setting in `raster_settings` | https://github.com/facebookresearch/pytorch3d/commit/4bf30593ffc5488a03c75a16dd118013f5d0eb5e\r\n- Mesh loading - update to `load_obj` to support loading textures as per face textures [following the approach from SoftRasterizer]. There is a new boolean argument called 'create_texture_atlas` for the `load_obj` function  to enable this | https://github.com/facebookresearch/pytorch3d/commit/c9267ab7af0f72217a1ee1a0b37941a5c8fdb325\r\n- `join_meshes_as_batch` method to create a batch of meshes from a list of Meshes objects | https://github.com/facebookresearch/pytorch3d/commit/b64fe5136002b94caaaa97720b19fc8b3ba8da3c\r\n\r\n## Bug Fixes\r\n- `nan` check in sample points from meshes | https://github.com/facebookresearch/pytorch3d/commit/6c48ff6ad9005cfc03704c77531a4a25d1c8d843\r\n- Texturing function reshape/view fixes | https://github.com/facebookresearch/pytorch3d/commit/5d3cc3569a03f44647857243efd0d80588a6785b\r\n- `SfMPerspectiveCameras` projection matrix - add the principal points after the perspective divide | https://github.com/facebookresearch/pytorch3d/commit/677b0bd5aecb3069e3e8d4de41656f786cfa4312\r\n- Enable cuda kernels to be laucnhed on any GPU (not just the default) | https://github.com/facebookresearch/pytorch3d/commit/c3d636dc8c68cb2fd36b32d8dcc4bad27e2a551b\r\n\r\n## Breaking changes\r\n- Nearest neighbors implementation has been entirely removed - use KNN instead. | https://github.com/facebookresearch/pytorch3d/commit/3794f6753fd773fcc5a527c5ce2ce1fd2783f4c2\r\n- There are some changes to the interface of chamfer_distance to cope with heterogenous point clouds. | https://github.com/facebookresearch/pytorch3d/commit/790eb8c4020994a673033cc9b1fe92caad6281ac\r\n- The function `join_meshes` has been renamed to `join_meshes_as_batch` | https://github.com/facebookresearch/pytorch3d/commit/b64fe5136002b94caaaa97720b19fc8b3ba8da3c"}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/24328981", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/24328981/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/24328981/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.1.1", "id": 24328981, "author": {"login": "nikhilaravi", "id": 5912647, "node_id": "MDQ6VXNlcjU5MTI2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5912647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilaravi", "html_url": "https://github.com/nikhilaravi", "followers_url": "https://api.github.com/users/nikhilaravi/followers", "following_url": "https://api.github.com/users/nikhilaravi/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilaravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilaravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilaravi/subscriptions", "organizations_url": "https://api.github.com/users/nikhilaravi/orgs", "repos_url": "https://api.github.com/users/nikhilaravi/repos", "events_url": "https://api.github.com/users/nikhilaravi/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilaravi/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0MzI4OTgx", "tag_name": "v0.1.1", "target_commitish": "cf8e667b614d82194cf2c806ace87473b7d807ac", "name": "v0.1.1", "draft": false, "prerelease": false, "created_at": "2020-03-07T20:42:43Z", "published_at": "2020-03-08T19:55:49Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.1.1", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.1.1", "body": "# Changelog \r\n\r\n## New features:\r\n\r\n- `load_textures` boolean parameter for `load_obj` function | https://github.com/facebookresearch/pytorch3d/commit/659ad34389d47bf13f37a340a18a5784ad9b2695\r\n- Single function to load mesh and texture data from OBJs. | https://github.com/facebookresearch/pytorch3d/commit/8fe65d5f560611f4f60b8ea549b6bf7e75e3ae7f\r\n- Cpu implementations for\r\n   - Nearest neighbor | https://github.com/facebookresearch/pytorch3d/commit/e290f87ca949c077803d2da02c48173607ce70e4\r\n   - Face Areas Normals | https://github.com/facebookresearch/pytorch3d/commit/e290f87ca949c077803d2da02c48173607ce70e4\r\n   - Packed to padded tensor  | https://github.com/facebookresearch/pytorch3d/commit/e290f87ca949c077803d2da02c48173607ce70e4\r\n- Mesh Rendering\r\n   - Flat Shading for meshes | https://github.com/facebookresearch/pytorch3d/commit/ff19c642cb22a5b6a073d611e593baa836e5ebe4\r\n   - Barycentric clipping before z buffer and texture interpolation | https://github.com/facebookresearch/pytorch3d/commit/ff19c642cb22a5b6a073d611e593baa836e5ebe4\r\n- Support for building with windows | https://github.com/facebookresearch/pytorch3d/commit/9e21659fc5a26c427cbb186d55c84e6f8e8bc21d\r\n\r\n## Bug fixes:\r\n\r\n- Several documentation, installation and correctness fixes including:\r\n`expsumlog` in soft blending replaced with `torch.prod` which makes soft blending backward pass stable | https://github.com/facebookresearch/pytorch3d/commit/ba11c0b59cb53d50dc5f50e0e0148b3f2e43f39f\r\n- Fix matrix convention for rotations in Tranforms3D | https://github.com/facebookresearch/pytorch3d/commit/8301163d2466799ba932eae9ff7170110711bff6\r\n- Rendering flipping - the y axis flip in the blending functions has been removed and the rasterization step has been updated to ensure the directions of the axes are correct in the rendered image. The documentation for the renderer has been updated with the convention for world and camera coordinates. | https://github.com/facebookresearch/pytorch3d/commit/15c72be444fab0d1ba6879d097399b12f6a2a8b0\r\n\r\n## Breaking changes\r\n\r\n- The spelling of /Gourad/ has been fixed to /Gouraud/. | https://github.com/facebookresearch/pytorch3d/commit/9ca5489107ce887875cb4c24059c8810119ebe11\r\n- Shaders have been renamed to make clear if they are Hard or Soft (probabilistic) | https://github.com/facebookresearch/pytorch3d/commit/f0dc65110aa9687e83712950f6d47b280761f078\r\n"}
{"url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/24248733", "assets_url": "https://api.github.com/repos/facebookresearch/pytorch3d/releases/24248733/assets", "upload_url": "https://uploads.github.com/repos/facebookresearch/pytorch3d/releases/24248733/assets{?name,label}", "html_url": "https://github.com/facebookresearch/pytorch3d/releases/tag/v0.1.0", "id": 24248733, "author": {"login": "nikhilaravi", "id": 5912647, "node_id": "MDQ6VXNlcjU5MTI2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5912647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilaravi", "html_url": "https://github.com/nikhilaravi", "followers_url": "https://api.github.com/users/nikhilaravi/followers", "following_url": "https://api.github.com/users/nikhilaravi/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilaravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilaravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilaravi/subscriptions", "organizations_url": "https://api.github.com/users/nikhilaravi/orgs", "repos_url": "https://api.github.com/users/nikhilaravi/repos", "events_url": "https://api.github.com/users/nikhilaravi/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilaravi/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0MjQ4NzMz", "tag_name": "v0.1.0", "target_commitish": "master", "name": "v0.1.0 Initial Release ", "draft": false, "prerelease": false, "created_at": "2020-03-05T12:49:18Z", "published_at": "2020-03-05T12:52:36Z", "assets": [], "tarball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/tarball/v0.1.0", "zipball_url": "https://api.github.com/repos/facebookresearch/pytorch3d/zipball/v0.1.0", "body": ""}
