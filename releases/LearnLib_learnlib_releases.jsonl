{"url": "https://api.github.com/repos/LearnLib/learnlib/releases/32446645", "assets_url": "https://api.github.com/repos/LearnLib/learnlib/releases/32446645/assets", "upload_url": "https://uploads.github.com/repos/LearnLib/learnlib/releases/32446645/assets{?name,label}", "html_url": "https://github.com/LearnLib/learnlib/releases/tag/learnlib-0.16.0", "id": 32446645, "author": {"login": "mtf90", "id": 7063944, "node_id": "MDQ6VXNlcjcwNjM5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7063944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtf90", "html_url": "https://github.com/mtf90", "followers_url": "https://api.github.com/users/mtf90/followers", "following_url": "https://api.github.com/users/mtf90/following{/other_user}", "gists_url": "https://api.github.com/users/mtf90/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtf90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtf90/subscriptions", "organizations_url": "https://api.github.com/users/mtf90/orgs", "repos_url": "https://api.github.com/users/mtf90/repos", "events_url": "https://api.github.com/users/mtf90/events{/privacy}", "received_events_url": "https://api.github.com/users/mtf90/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMyNDQ2NjQ1", "tag_name": "learnlib-0.16.0", "target_commitish": "develop", "name": "learnlib-0.16.0", "draft": false, "prerelease": false, "created_at": "2020-10-12T09:20:13Z", "published_at": "2020-10-12T10:43:15Z", "assets": [], "tarball_url": "https://api.github.com/repos/LearnLib/learnlib/tarball/learnlib-0.16.0", "zipball_url": "https://api.github.com/repos/LearnLib/learnlib/zipball/learnlib-0.16.0", "body": "[Full changelog](https://github.com/LearnLib/learnlib/compare/learnlib-0.15.0...learnlib-0.16.0)\r\n\r\n### Added\r\n\r\n* A `StateLocalInputSULSymbolQueryOracle` to wrap a `StateLocalInputSUL`in a `SymbolQueryOracle` (e.g. to learn partial systems with the ADT learner).\r\n* Added an example for parallel setups (`ParallelismExample1`).\r\n\r\n### Changed\r\n\r\n* The `SULSymbolQueryOracle` now better handles the `pre` and `post` cycles of a `SUL` (e.g. calls to the `reset` method now allow to close the embedded `SUL` from outside).\r\n* Reworked parallel oracles\r\n  * Several `SULOracle` variants are no longer thread-safe. This reduces overhead for scenarios where no parallelism is required.\r\n  * The `ParallelOracleBuilders` factory now offers builder methods for `SUL`s, `ObservableSUL`s, `StateLocalInputSUL`s, `MembershipOracles`s and `OmegaMembershipOracle`s to allow an easy (and correct) construction of parallel setups given one of the mentioned implementations.\r\n* Refactored the following packages/classes:\r\n  * `de.learnlib.oracle.parallelism.ParallelOracleInterruptedException` -> `de.learnlib.api.oracle.parallelism.BatchInterruptedException`\r\n* The `initialPrefixes` and `initialSuffixes` methods of `AbstractExtensibleAutomatonLStar` are now `final` since these values can be provided via the constructor of the class. This allows one to simplify sub-classes.\r\n* Updated to [AutomataLib 0.10.0](https://github.com/LearnLib/automatalib/releases/tag/automatalib-0.10.0)\r\n\r\n### Removed\r\n\r\n* Removed the `learnlib.queries.parallel.threshold` property. Learning setups that want to use parallelism now need to explicitly setup parallel oracles.\r\n* Removed `MQUtil#answerQueries{Auto,Parallel}` and `MQUtil#answerOmegaQueries{Auto,Parallel}`)\r\n* `LassoOracle#isOmegaCounterExample(boolean)` has been removed. This decision can be directly integrated into the `#findCounterExample` method which has more information available.\r\n\r\n### Fixed\r\n\r\n* Fixed a bug where NL* would create non-canonical hypotheses (#70 , thanks to @Jaxan)"}
{"url": "https://api.github.com/repos/LearnLib/learnlib/releases/23436559", "assets_url": "https://api.github.com/repos/LearnLib/learnlib/releases/23436559/assets", "upload_url": "https://uploads.github.com/repos/LearnLib/learnlib/releases/23436559/assets{?name,label}", "html_url": "https://github.com/LearnLib/learnlib/releases/tag/learnlib-0.15.0", "id": 23436559, "author": {"login": "mtf90", "id": 7063944, "node_id": "MDQ6VXNlcjcwNjM5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7063944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtf90", "html_url": "https://github.com/mtf90", "followers_url": "https://api.github.com/users/mtf90/followers", "following_url": "https://api.github.com/users/mtf90/following{/other_user}", "gists_url": "https://api.github.com/users/mtf90/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtf90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtf90/subscriptions", "organizations_url": "https://api.github.com/users/mtf90/orgs", "repos_url": "https://api.github.com/users/mtf90/repos", "events_url": "https://api.github.com/users/mtf90/events{/privacy}", "received_events_url": "https://api.github.com/users/mtf90/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzNDM2NTU5", "tag_name": "learnlib-0.15.0", "target_commitish": "develop", "name": "learnlib-0.15.0", "draft": false, "prerelease": false, "created_at": "2020-02-06T08:33:24Z", "published_at": "2020-02-06T08:54:11Z", "assets": [], "tarball_url": "https://api.github.com/repos/LearnLib/learnlib/tarball/learnlib-0.15.0", "zipball_url": "https://api.github.com/repos/LearnLib/learnlib/zipball/learnlib-0.15.0", "body": "[Full changelog](https://github.com/LearnLib/learnlib/compare/learnlib-0.14.0...learnlib-0.15.0)\r\n\r\n### Changed\r\n\r\n* The `{DFA,Mealy,}W{p,}MethodEQOracle(MembershipOracle, int, int)` constructor no longer interprets its second `int` parameter as the batch size, but as an estimate for the expected SUL size. In order to explicitly set the batch size of the oracle, use the `{DFA,Mealy,}W{p,}MethodEQOracle(MembershipOracle, int, int, int)` constructor. Now, the two parameters `lookahead` and `expectedSize` will determine the length of the *middle part* via `Math.max(lookahead, expectedSize - hypothesis.size())`. This allows to dynamically adjust the length of the *middle part* throughout the learning process. See [LearnLib/automatalib#32](https://github.com/LearnLib/automatalib/issues/32).\r\n* Several DFA/Mealy specific (oracle) subclasses are now automatically generated. As a result they are no longer an inner class but an independent top-level class. This requires to update the import statements.\r\n* JSR305 annotations have been replaced with checker-framework annotations.\r\n  * LearnLib (incl. AutomataLib) now follows checker-framework's convention that (non-annotated) types are usually considered non-null unless explicitly annotated with `@Nullable`.\r\n  * LearnLib (incl. AutomataLib) no longer has a (runtime-) dependency on JSR305 (and other `javax.*`) annotations or includes them in the distribution artifact. This now makes LearnLib (incl. AutomataLib) compliant with [Oracle's binary code license](https://www.oracle.com/downloads/licenses/binary-code-license.html) and allows LearnLib (incl. AutomataLib) artifacts as-is to be bundled in binary distributions with Oracle's JDKs/JREs.\r\n* A lot of code for inferring partial Mealy machines (esp. `PartialLStarMealy` and `PartialObservationTable`) has been removed/refactored. The concept of state local inputs is now implemented as a SUL filter and introduces a special `StateLocalInputSULOracle` which early-answers queries that would traverse unavailable inputs with a previously specified symbol. This way, queries that would traverse undefined input symbols still won't be executed on the SUL but the SUL appears as a 'total' Mealy system to the learner, allowing one to use every currently existing Mealy learner as-is. See the in-tree examples for more information.\r\n* `SULCache` no longer implements `MembershipOracle`.\r\n* Updated to [AutomataLib 0.9.0](https://github.com/LearnLib/automatalib/releases/tag/automatalib-0.9.0)\r\n\r\n### Removed\r\n\r\n* As a remainder of its initial implementation, the `TTTEventListener` (and the corresponding event feature in the TTT algorithm) has been removed due to the lack of usage."}
{"url": "https://api.github.com/repos/LearnLib/learnlib/releases/12896771", "assets_url": "https://api.github.com/repos/LearnLib/learnlib/releases/12896771/assets", "upload_url": "https://uploads.github.com/repos/LearnLib/learnlib/releases/12896771/assets{?name,label}", "html_url": "https://github.com/LearnLib/learnlib/releases/tag/learnlib-0.14.0", "id": 12896771, "author": {"login": "mtf90", "id": 7063944, "node_id": "MDQ6VXNlcjcwNjM5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7063944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtf90", "html_url": "https://github.com/mtf90", "followers_url": "https://api.github.com/users/mtf90/followers", "following_url": "https://api.github.com/users/mtf90/following{/other_user}", "gists_url": "https://api.github.com/users/mtf90/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtf90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtf90/subscriptions", "organizations_url": "https://api.github.com/users/mtf90/orgs", "repos_url": "https://api.github.com/users/mtf90/repos", "events_url": "https://api.github.com/users/mtf90/events{/privacy}", "received_events_url": "https://api.github.com/users/mtf90/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyODk2Nzcx", "tag_name": "learnlib-0.14.0", "target_commitish": "master", "name": "learnlib-0.14.0", "draft": false, "prerelease": false, "created_at": "2019-02-18T13:40:13Z", "published_at": "2019-02-18T14:06:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/LearnLib/learnlib/tarball/learnlib-0.14.0", "zipball_url": "https://api.github.com/repos/LearnLib/learnlib/zipball/learnlib-0.14.0", "body": "[Full changelog](https://github.com/LearnLib/learnlib/compare/learnlib-0.13.1...learnlib-0.14.0)\r\n\r\n### Added\r\n\r\n* Added support for black-box-checking (thanks to [Jeroen Meijer](https://github.com/Meijuh)).\r\n* Added support for learning partial Mealy Machines with state-local inputs via L* (thanks to [Maren Geske](https://github.com/mgeske)).\r\n* Added support for resumable caches.\r\n* `DynamicParallelOracle`s can now be constructed from a collection of independent oracles.\r\n* Support for Java 11. **Note:** LearnLib/AutomataLib still targets Java 8, and thus needs classes provided by this environment (specifically: annotations from `javax.annotation`). If you plan to use LearnLib/AutomataLib in a Java 11+ environment, make sure to provide these classes. They are not shipped with LearnLib/AutomataLib.\r\n\r\n### Changed\r\n\r\n* Refactored the following packages/classes:\r\n  * `de.learnlib.api.algorithm.feature.SupportsGrowingAlphabet` -> `net.automatalib.SupportsGrowingAlphabet`\r\n  * `de.learnlib.api.algorithm.feature.ResumableLearner` -> `de.learnlib.api.Resumable`\r\n* Some runtime properties for dynamically configuring LearnLib have been renamed. There now exists the `LearnLibProperty` enum as a single reference point for all available properties.\r\n* The node iterators for discrimination trees are now hidden behind the `DiscriminationTreeIterators` factory.\r\n* Parallel Oracles: \r\n  * The `withDefault*` methods have been removed from the `{Dynamic,Static}PrallelOracleBuilders`. If needed, use the regular `with*` methods and supply the public default values from `{Dynamic,Static}PrallelOracle`.\r\n  * The `new*ParallelOracle` methods from the `ParallelOracleBuilders` factory no longer interpret a single membership oracle parameter as a supplier to a shared oracle, but rather as a single oracle (and thus return a builder for a parallel oracle with fixed pool size).\r\n* Adding new symbols to learning algorithms (via the `SupportsGrowingAlphabet` interface) now requires the learner to be initialized with a `GrowingAlphabet` instance. This is to make sure that the user has full control over which alphabet instance should be used instead of LearnLib making decisions on behalf of the user.\r\n* Discrimination-Tree based Learners (DT, KV, TTT) now batch queries whenever possible, thus allowing to fully utilize parallel oracles.\r\n* Also, see the [changes in AutomataLib](https://github.com/LearnLib/automatalib/releases/tag/automatalib-0.8.0)\r\n\r\n### Fixed\r\n\r\n* Several bugs detected by our ongoing efforts to write tests."}
{"url": "https://api.github.com/repos/LearnLib/learnlib/releases/10971163", "assets_url": "https://api.github.com/repos/LearnLib/learnlib/releases/10971163/assets", "upload_url": "https://uploads.github.com/repos/LearnLib/learnlib/releases/10971163/assets{?name,label}", "html_url": "https://github.com/LearnLib/learnlib/releases/tag/learnlib-0.13.1", "id": 10971163, "author": {"login": "mtf90", "id": 7063944, "node_id": "MDQ6VXNlcjcwNjM5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7063944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtf90", "html_url": "https://github.com/mtf90", "followers_url": "https://api.github.com/users/mtf90/followers", "following_url": "https://api.github.com/users/mtf90/following{/other_user}", "gists_url": "https://api.github.com/users/mtf90/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtf90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtf90/subscriptions", "organizations_url": "https://api.github.com/users/mtf90/orgs", "repos_url": "https://api.github.com/users/mtf90/repos", "events_url": "https://api.github.com/users/mtf90/events{/privacy}", "received_events_url": "https://api.github.com/users/mtf90/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEwOTcxMTYz", "tag_name": "learnlib-0.13.1", "target_commitish": "develop", "name": "learnlib-0.13.1", "draft": false, "prerelease": false, "created_at": "2018-05-11T15:42:43Z", "published_at": "2018-05-12T15:00:09Z", "assets": [], "tarball_url": "https://api.github.com/repos/LearnLib/learnlib/tarball/learnlib-0.13.1", "zipball_url": "https://api.github.com/repos/LearnLib/learnlib/zipball/learnlib-0.13.1", "body": "[Full changelog](https://github.com/LearnLib/learnlib/compare/learnlib-0.13.0...learnlib-0.13.1)\r\n\r\n### Fixed\r\n\r\n* Fixed an out-of-bounds error in a cache implementation\r\n* Fixed visibility issues with exportable classes used for the `ResumableLearner` interface\r\n* Fixed an issue when adding a new symbol to a learner and the initial alphabet was already an instance of `GrowableAlphabet`\r\n* General consolidations (typos, wrong documentation, etc.)"}
{"url": "https://api.github.com/repos/LearnLib/learnlib/releases/9856702", "assets_url": "https://api.github.com/repos/LearnLib/learnlib/releases/9856702/assets", "upload_url": "https://uploads.github.com/repos/LearnLib/learnlib/releases/9856702/assets{?name,label}", "html_url": "https://github.com/LearnLib/learnlib/releases/tag/learnlib-0.13.0", "id": 9856702, "author": {"login": "mtf90", "id": 7063944, "node_id": "MDQ6VXNlcjcwNjM5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7063944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtf90", "html_url": "https://github.com/mtf90", "followers_url": "https://api.github.com/users/mtf90/followers", "following_url": "https://api.github.com/users/mtf90/following{/other_user}", "gists_url": "https://api.github.com/users/mtf90/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtf90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtf90/subscriptions", "organizations_url": "https://api.github.com/users/mtf90/orgs", "repos_url": "https://api.github.com/users/mtf90/repos", "events_url": "https://api.github.com/users/mtf90/events{/privacy}", "received_events_url": "https://api.github.com/users/mtf90/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTk4NTY3MDI=", "tag_name": "learnlib-0.13.0", "target_commitish": "develop", "name": "", "draft": false, "prerelease": false, "created_at": "2018-02-08T10:47:33Z", "published_at": "2018-02-27T15:51:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/LearnLib/learnlib/tarball/learnlib-0.13.0", "zipball_url": "https://api.github.com/repos/LearnLib/learnlib/zipball/learnlib-0.13.0", "body": "[Full changelog](https://github.com/LearnLib/learnlib/compare/learnlib-0.12.0...learnlib-0.13.0)\r\n\r\n### Added\r\n\r\n* Added randomized version of W(p)-Method based equivalence oracles (see #40)\r\n* Added the ADT (adaptive distinguishing tree) active learning algorithm\r\n* Added two active learning algorithms for visibly pushdown languages.\r\n* Added the RPNI (regular positive-negative inference) passive learning algorithm, including EDSM (evidence-driven state merging) and MDL (minimum description length) variants.\r\n* Many active learning algorithms now support adding additional alphabet symbols after initial instantiation/starting of the learning process.\r\n* Added support for suspending the learning process to a savable / serializable state. The learning process may be resumed from this state at a later point in time.\r\n* Added the `AbstractTestWordEQOracle` class, which allows to implement custom equivalence oracles solely based on lazy (stream-based) test-word generation. Existing equivalence oracles (as far as possible) have been reworked to extend this class and thus profit from its built-in laziness and batch (parallelization) support.\r\n\r\n### Changed\r\n\r\n* Refactored the Maven artifact and Java package structure. Have a look at the [List of LearnLib Artifacts](https://github.com/LearnLib/learnlib/wiki/List-of-LearnLib-Artifacts) for an updated overview of available artifacts. In general, no functionality should have been removed (except of code marked with `@Deprecated`). The easiest way to migrate your code to the new version is probably by using the Auto-Import feature of your IDE of choice.\r\n\r\n  The non-trivial refactorings include:\r\n  * API methods no longer use wildcards in generic return parameters. This allows your code to not having to deal with them.\r\n  * [Changes to AutomataLib](https://github.com/LearnLib/automatalib/releases/tag/automatalib-0.7.0).\r\n\r\n* Replaced `System.out` and JUL logging, with calls to a SLF4j facade.\r\n* Code improvements due to employment of several static code-analysis plugins (findbugs, checkstyle, PMD, etc.) as well as setting up continuous integration at [Travis CI](https://travis-ci.org/LearnLib/learnlib).\r\n\r\n### Fixed\r\n\r\n* Several bugs detected either by our newly employed static code-analysis toolchain or by our ongoing efforts to write tests."}
